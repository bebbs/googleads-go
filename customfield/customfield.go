// Code generated by gowsdl DO NOT EDIT.

package customfield

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type ApiVersionError_Reason string

const (

	//
	// Indicates that the operation is not allowed in the version the request
	// was made in.
	//
	ApiVersionError_ReasonUPDATE_TO_NEWER_VERSION ApiVersionError_Reason = "UPDATE_TO_NEWER_VERSION"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	ApiVersionError_ReasonUNKNOWN ApiVersionError_Reason = "UNKNOWN"
)

type AuthenticationError_Reason string

const (

	//
	// The SOAP message contains a request header with an ambiguous definition of the authentication
	// header fields. This means either the {@code authToken} and {@code oAuthToken} fields were
	// both null or both were specified. Exactly one value should be specified with each request.
	//
	AuthenticationError_ReasonAMBIGUOUS_SOAP_REQUEST_HEADER AuthenticationError_Reason = "AMBIGUOUS_SOAP_REQUEST_HEADER"

	//
	// The login provided is invalid.
	//
	AuthenticationError_ReasonINVALID_EMAIL AuthenticationError_Reason = "INVALID_EMAIL"

	//
	// Tried to authenticate with provided information, but failed.
	//
	AuthenticationError_ReasonAUTHENTICATION_FAILED AuthenticationError_Reason = "AUTHENTICATION_FAILED"

	//
	// The OAuth provided is invalid.
	//
	AuthenticationError_ReasonINVALID_OAUTH_SIGNATURE AuthenticationError_Reason = "INVALID_OAUTH_SIGNATURE"

	//
	// The specified service to use was not recognized.
	//
	AuthenticationError_ReasonINVALID_SERVICE AuthenticationError_Reason = "INVALID_SERVICE"

	//
	// The SOAP message is missing a request header with an {@code authToken} and optional {@code
	// networkCode}.
	//
	AuthenticationError_ReasonMISSING_SOAP_REQUEST_HEADER AuthenticationError_Reason = "MISSING_SOAP_REQUEST_HEADER"

	//
	// The HTTP request is missing a request header with an {@code authToken}
	//
	AuthenticationError_ReasonMISSING_AUTHENTICATION_HTTP_HEADER AuthenticationError_Reason = "MISSING_AUTHENTICATION_HTTP_HEADER"

	//
	// The request is missing an {@code authToken}
	//
	AuthenticationError_ReasonMISSING_AUTHENTICATION AuthenticationError_Reason = "MISSING_AUTHENTICATION"

	//
	// The network does not have API access enabled.
	//
	AuthenticationError_ReasonNETWORK_API_ACCESS_DISABLED AuthenticationError_Reason = "NETWORK_API_ACCESS_DISABLED"

	//
	// The user is not associated with any network.
	//
	AuthenticationError_ReasonNO_NETWORKS_TO_ACCESS AuthenticationError_Reason = "NO_NETWORKS_TO_ACCESS"

	//
	// No network for the given {@code networkCode} was found.
	//
	AuthenticationError_ReasonNETWORK_NOT_FOUND AuthenticationError_Reason = "NETWORK_NOT_FOUND"

	//
	// The user has access to more than one network, but did not provide a {@code networkCode}.
	//
	AuthenticationError_ReasonNETWORK_CODE_REQUIRED AuthenticationError_Reason = "NETWORK_CODE_REQUIRED"

	//
	// An error happened on the server side during connection to authentication service.
	//
	AuthenticationError_ReasonCONNECTION_ERROR AuthenticationError_Reason = "CONNECTION_ERROR"

	//
	// The user tried to create a test network using an account that already is associated with a
	// network.
	//
	AuthenticationError_ReasonGOOGLE_ACCOUNT_ALREADY_ASSOCIATED_WITH_NETWORK AuthenticationError_Reason = "GOOGLE_ACCOUNT_ALREADY_ASSOCIATED_WITH_NETWORK"

	//
	// The account is blocked and under investigation by the collections team. Please contact Google
	// for more information.
	//
	AuthenticationError_ReasonUNDER_INVESTIGATION AuthenticationError_Reason = "UNDER_INVESTIGATION"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	AuthenticationError_ReasonUNKNOWN AuthenticationError_Reason = "UNKNOWN"
)

type CollectionSizeError_Reason string

const (
	CollectionSizeError_ReasonTOO_LARGE CollectionSizeError_Reason = "TOO_LARGE"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	CollectionSizeError_ReasonUNKNOWN CollectionSizeError_Reason = "UNKNOWN"
)

//
// Describes reasons for common errors
//

type CommonError_Reason string

const (

	//
	// Indicates that an attempt was made to retrieve an entity that does not
	// exist.
	//
	CommonError_ReasonNOT_FOUND CommonError_Reason = "NOT_FOUND"

	//
	// Indicates that an attempt was made to create an entity that already
	// exists.
	//
	CommonError_ReasonALREADY_EXISTS CommonError_Reason = "ALREADY_EXISTS"

	//
	// Indicates that a value is not applicable for given use case.
	//
	CommonError_ReasonNOT_APPLICABLE CommonError_Reason = "NOT_APPLICABLE"

	//
	// Indicates that two elements in the collection were identical.
	//
	CommonError_ReasonDUPLICATE_OBJECT CommonError_Reason = "DUPLICATE_OBJECT"

	//
	// Indicates that an attempt was made to change an immutable field.
	//
	CommonError_ReasonCANNOT_UPDATE CommonError_Reason = "CANNOT_UPDATE"

	//
	// Indicates that the requested operation is not supported.
	//
	CommonError_ReasonUNSUPPORTED_OPERATION CommonError_Reason = "UNSUPPORTED_OPERATION"

	//
	// Indicates that another request attempted to update the same data in the same network
	// at about the same time. Please wait and try the request again.
	//
	CommonError_ReasonCONCURRENT_MODIFICATION CommonError_Reason = "CONCURRENT_MODIFICATION"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	CommonError_ReasonUNKNOWN CommonError_Reason = "UNKNOWN"
)

//
// The data types allowed for {@link CustomField} objects.
//

type CustomFieldDataType string

const (

	//
	// A string field. The max length is 255 characters.
	//
	CustomFieldDataTypeSTRING CustomFieldDataType = "STRING"

	//
	// A number field.
	//
	CustomFieldDataTypeNUMBER CustomFieldDataType = "NUMBER"

	//
	// A boolean field. Values may be "true", "false",
	// or empty.
	//
	CustomFieldDataTypeTOGGLE CustomFieldDataType = "TOGGLE"

	//
	// A drop-down field. Values may only be the ids
	// of {@link CustomFieldOption} objects.
	//
	CustomFieldDataTypeDROP_DOWN CustomFieldDataType = "DROP_DOWN"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	CustomFieldDataTypeUNKNOWN CustomFieldDataType = "UNKNOWN"
)

//
// Entity types recognized by custom fields
//

type CustomFieldEntityType string

const (

	//
	// Represents the {@link LineItem} type.
	//
	CustomFieldEntityTypeLINE_ITEM CustomFieldEntityType = "LINE_ITEM"

	//
	// Represents the {@link Order} type.
	//
	CustomFieldEntityTypeORDER CustomFieldEntityType = "ORDER"

	//
	// Represents the {@link Creative} type.
	//
	CustomFieldEntityTypeCREATIVE CustomFieldEntityType = "CREATIVE"

	//
	// Represents the {@link ProductTemplate} type.
	//
	CustomFieldEntityTypePRODUCT_TEMPLATE CustomFieldEntityType = "PRODUCT_TEMPLATE"

	//
	// Represents the {@link Product} type.
	//
	CustomFieldEntityTypePRODUCT CustomFieldEntityType = "PRODUCT"

	//
	// Represents the {@link Proposal} type.
	//
	CustomFieldEntityTypePROPOSAL CustomFieldEntityType = "PROPOSAL"

	//
	// Represents the {@link ProposalLineItem} type.
	//
	CustomFieldEntityTypePROPOSAL_LINE_ITEM CustomFieldEntityType = "PROPOSAL_LINE_ITEM"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	CustomFieldEntityTypeUNKNOWN CustomFieldEntityType = "UNKNOWN"
)

//
// The reasons for the target error.
//

type CustomFieldError_Reason string

const (

	//
	// An attempt was made to create a {@link CustomFieldOption} for
	// a {@link CustomField} that does not have {@link CustomFieldDataType#DROPDOWN}.
	//
	CustomFieldError_ReasonINVALID_CUSTOM_FIELD_FOR_OPTION CustomFieldError_Reason = "INVALID_CUSTOM_FIELD_FOR_OPTION"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	CustomFieldError_ReasonUNKNOWN CustomFieldError_Reason = "UNKNOWN"
)

//
// The visibility levels of a custom field.
//

type CustomFieldVisibility string

const (

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	CustomFieldVisibilityUNKNOWN CustomFieldVisibility = "UNKNOWN"

	//
	// Only visible through the API.
	//
	CustomFieldVisibilityAPI_ONLY CustomFieldVisibility = "API_ONLY"

	//
	// Visible in the UI, but only editable through the API
	//
	CustomFieldVisibilityREAD_ONLY CustomFieldVisibility = "READ_ONLY"

	//
	// Visible and editable both in the API and the UI.
	//
	CustomFieldVisibilityFULL CustomFieldVisibility = "FULL"
)

//
// The reasons for the entity limit reached error.
//

type EntityLimitReachedError_Reason string

const (

	//
	// The number of custom targeting values exceeds the max number allowed in the network.
	//
	EntityLimitReachedError_ReasonCUSTOM_TARGETING_VALUES_LIMIT_REACHED EntityLimitReachedError_Reason = "CUSTOM_TARGETING_VALUES_LIMIT_REACHED"

	//
	// The number of ad exclusion rules exceeds the max number allowed in the network.
	//
	EntityLimitReachedError_ReasonAD_EXCLUSION_RULES_LIMIT_REACHED EntityLimitReachedError_Reason = "AD_EXCLUSION_RULES_LIMIT_REACHED"

	//
	// The number of first party audience segments exceeds the max number allowed in the network.
	//
	EntityLimitReachedError_ReasonFIRST_PARTY_AUDIENCE_SEGMENTS_LIMIT_REACHED EntityLimitReachedError_Reason = "FIRST_PARTY_AUDIENCE_SEGMENTS_LIMIT_REACHED"

	//
	// The number of active placements exceeds the max number allowed in the network.
	//
	EntityLimitReachedError_ReasonPLACEMENTS_LIMIT_REACHED EntityLimitReachedError_Reason = "PLACEMENTS_LIMIT_REACHED"

	//
	// The number of line items excceeds the max number allowed in the network.
	//
	EntityLimitReachedError_ReasonLINE_ITEMS_LIMIT_REACHED EntityLimitReachedError_Reason = "LINE_ITEMS_LIMIT_REACHED"

	//
	// The number of active line items exceeds the max number allowed in the network.
	//
	EntityLimitReachedError_ReasonACTIVE_LINE_ITEMS_LIMIT_REACHED EntityLimitReachedError_Reason = "ACTIVE_LINE_ITEMS_LIMIT_REACHED"

	//
	// The number of not-archived encoding profiles exceeds the max number allowed in the network.
	//
	EntityLimitReachedError_ReasonDAI_ENCODING_PROFILES_LIMIT_REACHED EntityLimitReachedError_Reason = "DAI_ENCODING_PROFILES_LIMIT_REACHED"

	//
	// The number of traffic forecast segments exceeds the max number allowed in the network.
	//
	EntityLimitReachedError_ReasonTRAFFIC_FORECAST_SEGMENTS_LIMIT_REACHED EntityLimitReachedError_Reason = "TRAFFIC_FORECAST_SEGMENTS_LIMIT_REACHED"

	//
	// The number of forecast adjustments exceeds the max number allowed in the network.
	//
	EntityLimitReachedError_ReasonFORECAST_ADJUSTMENTS_LIMIT_REACHED EntityLimitReachedError_Reason = "FORECAST_ADJUSTMENTS_LIMIT_REACHED"

	//
	// The number of active experiments exceeds the max number allowed in the network.
	//
	EntityLimitReachedError_ReasonACTIVE_EXPERIMENTS_LIMIT_REACHED EntityLimitReachedError_Reason = "ACTIVE_EXPERIMENTS_LIMIT_REACHED"

	//
	// The number of sites exceeds the max number allowed in the network.
	//
	EntityLimitReachedError_ReasonSITES_LIMIT_REACHED EntityLimitReachedError_Reason = "SITES_LIMIT_REACHED"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	EntityLimitReachedError_ReasonUNKNOWN EntityLimitReachedError_Reason = "UNKNOWN"
)

type FeatureError_Reason string

const (

	//
	// A feature is being used that is not enabled on the current network.
	//
	FeatureError_ReasonMISSING_FEATURE FeatureError_Reason = "MISSING_FEATURE"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	FeatureError_ReasonUNKNOWN FeatureError_Reason = "UNKNOWN"
)

//
// The single reason for the internal API error.
//

type InternalApiError_Reason string

const (

	//
	// API encountered an unexpected internal error.
	//
	InternalApiError_ReasonUNEXPECTED_INTERNAL_API_ERROR InternalApiError_Reason = "UNEXPECTED_INTERNAL_API_ERROR"

	//
	// A temporary error occurred during the request. Please retry.
	//
	InternalApiError_ReasonTRANSIENT_ERROR InternalApiError_Reason = "TRANSIENT_ERROR"

	//
	// The cause of the error is not known or only defined in newer versions.
	//
	InternalApiError_ReasonUNKNOWN InternalApiError_Reason = "UNKNOWN"

	//
	// The API is currently unavailable for a planned downtime.
	//
	InternalApiError_ReasonDOWNTIME InternalApiError_Reason = "DOWNTIME"

	//
	// Mutate succeeded but server was unable to build response. Client should not retry mutate.
	//
	InternalApiError_ReasonERROR_GENERATING_RESPONSE InternalApiError_Reason = "ERROR_GENERATING_RESPONSE"
)

//
// The reasons for the target error.
//

type NotNullError_Reason string

const (

	//
	// Assuming that a method will not have more than 3 arguments, if it does,
	// return NULL
	//
	NotNullError_ReasonARG1_NULL NotNullError_Reason = "ARG1_NULL"

	NotNullError_ReasonARG2_NULL NotNullError_Reason = "ARG2_NULL"

	NotNullError_ReasonARG3_NULL NotNullError_Reason = "ARG3_NULL"

	NotNullError_ReasonNULL NotNullError_Reason = "NULL"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	NotNullError_ReasonUNKNOWN NotNullError_Reason = "UNKNOWN"
)

//
// The reasons for the validation error.
//

type NullError_Reason string

const (

	//
	// Specified list/container must not contain any null elements
	//
	NullError_ReasonNULL_CONTENT NullError_Reason = "NULL_CONTENT"
)

//
// The reasons for the target error.
//

type ParseError_Reason string

const (

	//
	// Indicates an error in parsing an attribute.
	//
	ParseError_ReasonUNPARSABLE ParseError_Reason = "UNPARSABLE"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	ParseError_ReasonUNKNOWN ParseError_Reason = "UNKNOWN"
)

//
// Describes reasons for permission errors.
//

type PermissionError_Reason string

const (

	//
	// User does not have the required permission for the request.
	//
	PermissionError_ReasonPERMISSION_DENIED PermissionError_Reason = "PERMISSION_DENIED"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	PermissionError_ReasonUNKNOWN PermissionError_Reason = "UNKNOWN"
)

//
// The reasons for the target error.
//

type PublisherQueryLanguageContextError_Reason string

const (

	//
	// Indicates that there was an error executing the PQL.
	//
	PublisherQueryLanguageContextError_ReasonUNEXECUTABLE PublisherQueryLanguageContextError_Reason = "UNEXECUTABLE"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	PublisherQueryLanguageContextError_ReasonUNKNOWN PublisherQueryLanguageContextError_Reason = "UNKNOWN"
)

//
// The reasons for the target error.
//

type PublisherQueryLanguageSyntaxError_Reason string

const (

	//
	// Indicates that there was a PQL syntax error.
	//
	PublisherQueryLanguageSyntaxError_ReasonUNPARSABLE PublisherQueryLanguageSyntaxError_Reason = "UNPARSABLE"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	PublisherQueryLanguageSyntaxError_ReasonUNKNOWN PublisherQueryLanguageSyntaxError_Reason = "UNKNOWN"
)

type QuotaError_Reason string

const (

	//
	// The number of requests made per second is too high and has exceeded the
	// allowable limit. The recommended approach to handle this error is to wait
	// about 5 seconds and then retry the request. Note that this does not
	// guarantee the request will succeed. If it fails again, try increasing the
	// wait time.
	// <p>Another way to mitigate this error is to limit requests to 8 per second for Ad Manager
	// 360 accounts, or 2 per second for Ad Manager accounts. Once again
	// this does not guarantee that every request will succeed, but may help
	// reduce the number of times you receive this error.
	//
	QuotaError_ReasonEXCEEDED_QUOTA QuotaError_Reason = "EXCEEDED_QUOTA"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	QuotaError_ReasonUNKNOWN QuotaError_Reason = "UNKNOWN"

	//
	// This user has exceeded the allowed number of new report requests per hour
	// (this includes both reports run via the UI and reports
	// run via {@link ReportService#runReportJob}).
	// The recommended approach to handle this error is to wait about 10 minutes
	// and then retry the request. Note that this does not guarantee the request
	// will succeed. If it fails again, try increasing the wait time.
	// <p>Another way to mitigate this error is to limit the number of new report
	// requests to 250 per hour per user. Once again, this does not guarantee that
	// every request will succeed, but may help reduce the number of times you
	// receive this error.
	//
	QuotaError_ReasonREPORT_JOB_LIMIT QuotaError_Reason = "REPORT_JOB_LIMIT"

	//
	// This network has exceeded the allowed number of identifiers uploaded within a 24 hour period.
	// The recommended approach to handle this error is to wait 30 minutes and then retry the
	// request. Note that this does not guarantee the request will succeed. If it fails again, try
	// increasing the wait time.
	//
	QuotaError_ReasonSEGMENT_POPULATION_LIMIT QuotaError_Reason = "SEGMENT_POPULATION_LIMIT"
)

type RequiredCollectionError_Reason string

const (

	//
	// A required collection is missing.
	//
	RequiredCollectionError_ReasonREQUIRED RequiredCollectionError_Reason = "REQUIRED"

	//
	// Collection size is too large.
	//
	RequiredCollectionError_ReasonTOO_LARGE RequiredCollectionError_Reason = "TOO_LARGE"

	//
	// Collection size is too small.
	//
	RequiredCollectionError_ReasonTOO_SMALL RequiredCollectionError_Reason = "TOO_SMALL"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	RequiredCollectionError_ReasonUNKNOWN RequiredCollectionError_Reason = "UNKNOWN"
)

//
// The reasons for the target error.
//

type RequiredError_Reason string

const (

	//
	// Missing required field.
	//
	RequiredError_ReasonREQUIRED RequiredError_Reason = "REQUIRED"
)

//
// Describes reasons for server errors
//

type ServerError_Reason string

const (

	//
	// Indicates that an unexpected error occured.
	//
	ServerError_ReasonSERVER_ERROR ServerError_Reason = "SERVER_ERROR"

	//
	// Indicates that the server is currently experiencing a high load. Please
	// wait and try your request again.
	//
	ServerError_ReasonSERVER_BUSY ServerError_Reason = "SERVER_BUSY"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	ServerError_ReasonUNKNOWN ServerError_Reason = "UNKNOWN"
)

type StatementError_Reason string

const (

	//
	// A bind variable has not been bound to a value.
	//
	StatementError_ReasonVARIABLE_NOT_BOUND_TO_VALUE StatementError_Reason = "VARIABLE_NOT_BOUND_TO_VALUE"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	StatementError_ReasonUNKNOWN StatementError_Reason = "UNKNOWN"
)

//
// The reasons for the target error.
//

type StringFormatError_Reason string

const (
	StringFormatError_ReasonUNKNOWN StringFormatError_Reason = "UNKNOWN"

	//
	// The input string value contains disallowed characters.
	//
	StringFormatError_ReasonILLEGAL_CHARS StringFormatError_Reason = "ILLEGAL_CHARS"

	//
	// The input string value is invalid for the associated field.
	//
	StringFormatError_ReasonINVALID_FORMAT StringFormatError_Reason = "INVALID_FORMAT"
)

type StringLengthError_Reason string

const (
	StringLengthError_ReasonTOO_LONG StringLengthError_Reason = "TOO_LONG"

	StringLengthError_ReasonTOO_SHORT StringLengthError_Reason = "TOO_SHORT"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	StringLengthError_ReasonUNKNOWN StringLengthError_Reason = "UNKNOWN"
)

type CreateCustomFieldOptions struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 createCustomFieldOptions"`

	CustomFieldOptions []*CustomFieldOption `xml:"customFieldOptions,omitempty" json:"customFieldOptions,omitempty"`
}

type CreateCustomFieldOptionsResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 createCustomFieldOptionsResponse"`

	Rval []*CustomFieldOption `xml:"rval,omitempty" json:"rval,omitempty"`
}

type ApiExceptionFault ApiException

type CreateCustomFields struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 createCustomFields"`

	CustomFields []*CustomField `xml:"customFields,omitempty" json:"customFields,omitempty"`
}

type CreateCustomFieldsResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 createCustomFieldsResponse"`

	Rval []*CustomField `xml:"rval,omitempty" json:"rval,omitempty"`
}

type GetCustomFieldOption struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getCustomFieldOption"`

	CustomFieldOptionId int64 `xml:"customFieldOptionId,omitempty" json:"customFieldOptionId,omitempty"`
}

type GetCustomFieldOptionResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getCustomFieldOptionResponse"`

	Rval *CustomFieldOption `xml:"rval,omitempty" json:"rval,omitempty"`
}

type GetCustomFieldsByStatement struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getCustomFieldsByStatement"`

	FilterStatement *Statement `xml:"filterStatement,omitempty" json:"filterStatement,omitempty"`
}

type GetCustomFieldsByStatementResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getCustomFieldsByStatementResponse"`

	Rval *CustomFieldPage `xml:"rval,omitempty" json:"rval,omitempty"`
}

type PerformCustomFieldAction struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 performCustomFieldAction"`

	CustomFieldAction *CustomFieldAction `xml:"customFieldAction,omitempty" json:"customFieldAction,omitempty"`

	FilterStatement *Statement `xml:"filterStatement,omitempty" json:"filterStatement,omitempty"`
}

type PerformCustomFieldActionResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 performCustomFieldActionResponse"`

	Rval *UpdateResult `xml:"rval,omitempty" json:"rval,omitempty"`
}

type UpdateCustomFieldOptions struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 updateCustomFieldOptions"`

	CustomFieldOptions []*CustomFieldOption `xml:"customFieldOptions,omitempty" json:"customFieldOptions,omitempty"`
}

type UpdateCustomFieldOptionsResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 updateCustomFieldOptionsResponse"`

	Rval []*CustomFieldOption `xml:"rval,omitempty" json:"rval,omitempty"`
}

type UpdateCustomFields struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 updateCustomFields"`

	CustomFields []*CustomField `xml:"customFields,omitempty" json:"customFields,omitempty"`
}

type UpdateCustomFieldsResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 updateCustomFieldsResponse"`

	Rval []*CustomField `xml:"rval,omitempty" json:"rval,omitempty"`
}

type RequestHeader SoapRequestHeader

type ResponseHeader SoapResponseHeader

type ObjectValue struct {
	*_Value
}

type ActivateCustomFields struct {
	*CustomFieldAction
}

type ApiError struct {

	//
	// The OGNL field path to identify cause of error.
	//
	FieldPath string `xml:"fieldPath,omitempty" json:"fieldPath,omitempty"`

	//
	// A parsed copy of the field path. For example, the field path "operations[1].operand"
	// corresponds to this list: {FieldPathElement(field = "operations", index = 1),
	// FieldPathElement(field = "operand", index = null)}.
	//
	FieldPathElements []*FieldPathElement `xml:"fieldPathElements,omitempty" json:"fieldPathElements,omitempty"`

	//
	// The data that caused the error.
	//
	Trigger string `xml:"trigger,omitempty" json:"trigger,omitempty"`

	//
	// A simple string representation of the error and reason.
	//
	ErrorString string `xml:"errorString,omitempty" json:"errorString,omitempty"`
}

type ApiException struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 ApiExceptionFault"`

	*ApplicationException

	//
	// List of errors.
	//
	Errors []*ApiError `xml:"errors,omitempty" json:"errors,omitempty"`
}

type ApiVersionError struct {
	*ApiError

	Reason *ApiVersionError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type ApplicationException struct {

	//
	// Error message.
	//
	Message string `xml:"message,omitempty" json:"message,omitempty"`
}

type AuthenticationError struct {
	*ApiError

	Reason *AuthenticationError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type BooleanValue struct {
	*_Value

	//
	// The boolean value.
	//
	Value bool `xml:"value,omitempty" json:"value,omitempty"`
}

type CollectionSizeError struct {
	*ApiError

	Reason *CollectionSizeError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type CommonError struct {
	*ApiError

	Reason *CommonError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type CustomFieldAction struct {
}

type CustomField struct {

	//
	// Unique ID of the {@code CustomField}. This value is readonly and is assigned by Google.
	//
	Id int64 `xml:"id,omitempty" json:"id,omitempty"`

	//
	// Name of the {@code CustomField}. This is value is required to create a custom field. The max
	// length is 127 characters.
	//
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	//
	// A description of the custom field. This value is optional. The maximum length is 511 characters
	//
	Description string `xml:"description,omitempty" json:"description,omitempty"`

	//
	// Specifies whether or not the custom fields is active. This attribute is read-only.
	//
	IsActive bool `xml:"isActive,omitempty" json:"isActive,omitempty"`

	//
	// The type of entity that this custom field is associated with. This attribute is read-only if
	// there exists a {@link CustomFieldValue} for this field.
	//
	EntityType *CustomFieldEntityType `xml:"entityType,omitempty" json:"entityType,omitempty"`

	//
	// The type of data this custom field contains. This attribute is read-only if there exists a
	// {@link CustomFieldValue} for this field.
	//
	DataType *CustomFieldDataType `xml:"dataType,omitempty" json:"dataType,omitempty"`

	//
	// How visible/accessible this field is in the UI.
	//
	Visibility *CustomFieldVisibility `xml:"visibility,omitempty" json:"visibility,omitempty"`
}

type CustomFieldError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *CustomFieldError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type CustomFieldOption struct {

	//
	// Unique ID of this option. This value is readonly and is assigned by Google.
	//
	Id int64 `xml:"id,omitempty" json:"id,omitempty"`

	//
	// The id of the custom field this option belongs to.
	//
	CustomFieldId int64 `xml:"customFieldId,omitempty" json:"customFieldId,omitempty"`

	//
	// The display name of this option.
	//
	DisplayName string `xml:"displayName,omitempty" json:"displayName,omitempty"`
}

type CustomFieldPage struct {

	//
	// The size of the total result set to which this page belongs.
	//
	TotalResultSetSize int32 `xml:"totalResultSetSize,omitempty" json:"totalResultSetSize,omitempty"`

	//
	// The absolute index in the total result set on which this page begins.
	//
	StartIndex int32 `xml:"startIndex,omitempty" json:"startIndex,omitempty"`

	//
	// The collection of custom fields contained within this page.
	//
	Results []*CustomField `xml:"results,omitempty" json:"results,omitempty"`
}

type Date struct {

	//
	// Year (e.g., 2009)
	//
	Year int32 `xml:"year,omitempty" json:"year,omitempty"`

	//
	// Month (1..12)
	//
	Month int32 `xml:"month,omitempty" json:"month,omitempty"`

	//
	// Day (1..31)
	//
	Day int32 `xml:"day,omitempty" json:"day,omitempty"`
}

type DateTime struct {
	Date soap.XSDDate `xml:"date,omitempty" json:"date,omitempty"`

	Hour int32 `xml:"hour,omitempty" json:"hour,omitempty"`

	Minute int32 `xml:"minute,omitempty" json:"minute,omitempty"`

	Second int32 `xml:"second,omitempty" json:"second,omitempty"`

	TimeZoneId string `xml:"timeZoneId,omitempty" json:"timeZoneId,omitempty"`
}

type DateTimeValue struct {
	*_Value

	//
	// The {@code DateTime} value.
	//
	Value soap.XSDDateTime `xml:"value,omitempty" json:"value,omitempty"`
}

type DateValue struct {
	*_Value

	//
	// The {@code Date} value.
	//
	Value soap.XSDDate `xml:"value,omitempty" json:"value,omitempty"`
}

type DeactivateCustomFields struct {
	*CustomFieldAction
}

type DropDownCustomField struct {
	*CustomField

	//
	// The options allowed for this custom field. This is read only.
	//
	Options []*CustomFieldOption `xml:"options,omitempty" json:"options,omitempty"`
}

type EntityLimitReachedError struct {
	*ApiError

	Reason *EntityLimitReachedError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type FeatureError struct {
	*ApiError

	Reason *FeatureError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type FieldPathElement struct {

	//
	// The name of a field in lower camelcase. (e.g. "biddingStrategy")
	//
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	//
	// For list fields, this is a 0-indexed position in the list. Null for non-list fields.
	//
	Index int32 `xml:"index,omitempty" json:"index,omitempty"`
}

type InternalApiError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *InternalApiError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type NotNullError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *NotNullError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type NullError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *NullError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type NumberValue struct {
	*_Value

	//
	// The numeric value represented as a string.
	//
	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type ParseError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *ParseError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type PermissionError struct {
	*ApiError

	Reason *PermissionError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type PublisherQueryLanguageContextError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *PublisherQueryLanguageContextError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type PublisherQueryLanguageSyntaxError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *PublisherQueryLanguageSyntaxError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type QuotaError struct {
	*ApiError

	Reason *QuotaError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type RequiredCollectionError struct {
	*ApiError

	Reason *RequiredCollectionError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type RequiredError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *RequiredError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type ServerError struct {
	*ApiError

	Reason *ServerError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type SetValue struct {
	*_Value

	//
	// The values. They must all be the same type of {@code Value} and not contain duplicates.
	//
	Values []*_Value `xml:"values,omitempty" json:"values,omitempty"`
}

type SoapRequestHeader struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 RequestHeader"`

	//
	// The network code to use in the context of a request.
	//
	NetworkCode string `xml:"networkCode,omitempty" json:"networkCode,omitempty"`

	//
	// The name of client library application.
	//
	ApplicationName string `xml:"applicationName,omitempty" json:"applicationName,omitempty"`
}

type SoapResponseHeader struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 ResponseHeader"`

	RequestId string `xml:"requestId,omitempty" json:"requestId,omitempty"`

	ResponseTime int64 `xml:"responseTime,omitempty" json:"responseTime,omitempty"`
}

type Statement struct {

	//
	// Holds the query in PQL syntax. The syntax is:<br>
	// <code>[WHERE <condition> {[AND | OR] <condition> ...}]</code><br>
	// <code>[ORDER BY <property> [ASC | DESC]]</code><br>
	// <code>[LIMIT {[<offset>,] <count>} | {<count> OFFSET <offset>}]</code><br>
	// <p>
	// <code><condition></code><br>
	// &nbsp;&nbsp;&nbsp;&nbsp;
	// <code>:= <property> {< | <= | > | >= | = | != } <value></code><br>
	// <code><condition></code><br>
	// &nbsp;&nbsp;&nbsp;&nbsp;
	// <code>:= <property> {< | <= | > | >= | = | != } <bind variable></code><br>
	// <code><condition> := <property> IN <list></code><br>
	// <code><condition> := <property> IS NULL</code><br>
	// <code><condition> := <property> LIKE <wildcard%match></code><br>
	// <code><bind variable> := :<name></code><br>
	// </p>
	//
	Query string `xml:"query,omitempty" json:"query,omitempty"`

	//
	// Holds keys and values for bind variables and their values. The key is the
	// name of the bind variable. The value is the literal value of the variable.
	// <p>
	// In the example {@code "WHERE status = :bindStatus ORDER BY id LIMIT 30"},
	// the bind variable, represented by {@code :bindStatus} is named {@code
	// bindStatus}, which would also be the parameter map key. The bind variable's
	// value would be represented by a parameter map value of type
	// {@link TextValue}. The final result, for example, would be an entry of
	// {@code "bindStatus" => StringParam("ACTIVE")}.
	// </p>
	//
	Values []*String_ValueMapEntry `xml:"values,omitempty" json:"values,omitempty"`
}

type StatementError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *StatementError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type StringFormatError struct {
	*ApiError

	Reason *StringFormatError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type StringLengthError struct {
	*ApiError

	Reason *StringLengthError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type String_ValueMapEntry struct {
	Key string `xml:"key,omitempty" json:"key,omitempty"`

	Value *_Value `xml:"value,omitempty" json:"value,omitempty"`
}

type TextValue struct {
	*_Value

	//
	// The string value.
	//
	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type TypeError struct {
	*ApiError
}

type UniqueError struct {
	*ApiError
}

type UpdateResult struct {

	//
	// The number of objects that were changed as a result of performing the
	// action.
	//
	NumChanges int32 `xml:"numChanges,omitempty" json:"numChanges,omitempty"`
}

type _Value struct {
}

type CustomFieldServiceInterface interface {

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Creates new {@link CustomFieldOption} objects.

	   <p>The following fields are required:

	   <ul>
	   <li>{@link CustomFieldOption#displayName}
	   <li>{@link CustomFieldOption#customFieldId}
	   </ul>
	*/
	CreateCustomFieldOptions(request *CreateCustomFieldOptions) (*CreateCustomFieldOptionsResponse, error)

	CreateCustomFieldOptionsContext(ctx context.Context, request *CreateCustomFieldOptions) (*CreateCustomFieldOptionsResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Creates new {@link CustomField} objects.

	   <p>The following fields are required:

	   <ul>
	   <li>{@link CustomField#name}
	   <li>{@link CustomField#entityType}
	   <li>{@link CustomField#dataType}
	   <li>{@link CustomField#visibility}
	   </ul>
	*/
	CreateCustomFields(request *CreateCustomFields) (*CreateCustomFieldsResponse, error)

	CreateCustomFieldsContext(ctx context.Context, request *CreateCustomFields) (*CreateCustomFieldsResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Returns the {@link CustomFieldOption} uniquely identified by the given ID.
	*/
	GetCustomFieldOption(request *GetCustomFieldOption) (*GetCustomFieldOptionResponse, error)

	GetCustomFieldOptionContext(ctx context.Context, request *GetCustomFieldOption) (*GetCustomFieldOptionResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Gets a {@link CustomFieldPage} of {@link CustomField} objects that satisfy the given {@link
	   Statement#query}. The following fields are supported for filtering:

	   <table>
	   <tr>
	   <th scope="col">PQL Property</th> <th scope="col">Object Property</th>
	   </tr>
	   <tr>
	   <td>{@code id}</td>
	   <td>{@link CustomField#id}</td>
	   </tr>
	   <tr>
	   <td>{@code entityType}</td>
	   <td>{@link CustomField#entityType}</td>
	   </tr>
	   <tr>
	   <td>{@code name}</td>
	   <td>{@link CustomField#name}</td>
	   </tr>
	   <tr>
	   <td>{@code isActive}</td>
	   <td>{@link CustomField#isActive}</td>
	   </tr>
	   <tr>
	   <td>{@code visibility}</td>
	   <td>{@link CustomField#visibility}</td>
	   </tr>
	   </table>
	*/
	GetCustomFieldsByStatement(request *GetCustomFieldsByStatement) (*GetCustomFieldsByStatementResponse, error)

	GetCustomFieldsByStatementContext(ctx context.Context, request *GetCustomFieldsByStatement) (*GetCustomFieldsByStatementResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Performs actions on {@link CustomField} objects that match the given {@link Statement#query}.
	*/
	PerformCustomFieldAction(request *PerformCustomFieldAction) (*PerformCustomFieldActionResponse, error)

	PerformCustomFieldActionContext(ctx context.Context, request *PerformCustomFieldAction) (*PerformCustomFieldActionResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Updates the specified {@link CustomFieldOption} objects.
	*/
	UpdateCustomFieldOptions(request *UpdateCustomFieldOptions) (*UpdateCustomFieldOptionsResponse, error)

	UpdateCustomFieldOptionsContext(ctx context.Context, request *UpdateCustomFieldOptions) (*UpdateCustomFieldOptionsResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Updates the specified {@link CustomField} objects.
	*/
	UpdateCustomFields(request *UpdateCustomFields) (*UpdateCustomFieldsResponse, error)

	UpdateCustomFieldsContext(ctx context.Context, request *UpdateCustomFields) (*UpdateCustomFieldsResponse, error)
}

type customFieldServiceInterface struct {
	client *soap.Client
}

func NewCustomFieldServiceInterface(client *soap.Client) CustomFieldServiceInterface {
	return &customFieldServiceInterface{
		client: client,
	}
}

func (service *customFieldServiceInterface) CreateCustomFieldOptionsContext(ctx context.Context, request *CreateCustomFieldOptions) (*CreateCustomFieldOptionsResponse, error) {
	response := new(CreateCustomFieldOptionsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *customFieldServiceInterface) CreateCustomFieldOptions(request *CreateCustomFieldOptions) (*CreateCustomFieldOptionsResponse, error) {
	return service.CreateCustomFieldOptionsContext(
		context.Background(),
		request,
	)
}

func (service *customFieldServiceInterface) CreateCustomFieldsContext(ctx context.Context, request *CreateCustomFields) (*CreateCustomFieldsResponse, error) {
	response := new(CreateCustomFieldsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *customFieldServiceInterface) CreateCustomFields(request *CreateCustomFields) (*CreateCustomFieldsResponse, error) {
	return service.CreateCustomFieldsContext(
		context.Background(),
		request,
	)
}

func (service *customFieldServiceInterface) GetCustomFieldOptionContext(ctx context.Context, request *GetCustomFieldOption) (*GetCustomFieldOptionResponse, error) {
	response := new(GetCustomFieldOptionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *customFieldServiceInterface) GetCustomFieldOption(request *GetCustomFieldOption) (*GetCustomFieldOptionResponse, error) {
	return service.GetCustomFieldOptionContext(
		context.Background(),
		request,
	)
}

func (service *customFieldServiceInterface) GetCustomFieldsByStatementContext(ctx context.Context, request *GetCustomFieldsByStatement) (*GetCustomFieldsByStatementResponse, error) {
	response := new(GetCustomFieldsByStatementResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *customFieldServiceInterface) GetCustomFieldsByStatement(request *GetCustomFieldsByStatement) (*GetCustomFieldsByStatementResponse, error) {
	return service.GetCustomFieldsByStatementContext(
		context.Background(),
		request,
	)
}

func (service *customFieldServiceInterface) PerformCustomFieldActionContext(ctx context.Context, request *PerformCustomFieldAction) (*PerformCustomFieldActionResponse, error) {
	response := new(PerformCustomFieldActionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *customFieldServiceInterface) PerformCustomFieldAction(request *PerformCustomFieldAction) (*PerformCustomFieldActionResponse, error) {
	return service.PerformCustomFieldActionContext(
		context.Background(),
		request,
	)
}

func (service *customFieldServiceInterface) UpdateCustomFieldOptionsContext(ctx context.Context, request *UpdateCustomFieldOptions) (*UpdateCustomFieldOptionsResponse, error) {
	response := new(UpdateCustomFieldOptionsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *customFieldServiceInterface) UpdateCustomFieldOptions(request *UpdateCustomFieldOptions) (*UpdateCustomFieldOptionsResponse, error) {
	return service.UpdateCustomFieldOptionsContext(
		context.Background(),
		request,
	)
}

func (service *customFieldServiceInterface) UpdateCustomFieldsContext(ctx context.Context, request *UpdateCustomFields) (*UpdateCustomFieldsResponse, error) {
	response := new(UpdateCustomFieldsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *customFieldServiceInterface) UpdateCustomFields(request *UpdateCustomFields) (*UpdateCustomFieldsResponse, error) {
	return service.UpdateCustomFieldsContext(
		context.Background(),
		request,
	)
}
