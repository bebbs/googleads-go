// Code generated by gowsdl DO NOT EDIT.

package site

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type ApiVersionError_Reason string

const (
	ApiVersionError_ReasonUPDATE_TO_NEWER_VERSION ApiVersionError_Reason = "UPDATE_TO_NEWER_VERSION"

	ApiVersionError_ReasonUNKNOWN ApiVersionError_Reason = "UNKNOWN"
)

type ApprovalStatus string

const (
	ApprovalStatusDRAFT ApprovalStatus = "DRAFT"

	ApprovalStatusUNCHECKED ApprovalStatus = "UNCHECKED"

	ApprovalStatusAPPROVED ApprovalStatus = "APPROVED"

	ApprovalStatusDISAPPROVED ApprovalStatus = "DISAPPROVED"

	ApprovalStatusREQUIRES_REVIEW ApprovalStatus = "REQUIRES_REVIEW"

	ApprovalStatusUNKNOWN ApprovalStatus = "UNKNOWN"
)

type AuthenticationError_Reason string

const (
	AuthenticationError_ReasonAMBIGUOUS_SOAP_REQUEST_HEADER AuthenticationError_Reason = "AMBIGUOUS_SOAP_REQUEST_HEADER"

	AuthenticationError_ReasonINVALID_EMAIL AuthenticationError_Reason = "INVALID_EMAIL"

	AuthenticationError_ReasonAUTHENTICATION_FAILED AuthenticationError_Reason = "AUTHENTICATION_FAILED"

	AuthenticationError_ReasonINVALID_OAUTH_SIGNATURE AuthenticationError_Reason = "INVALID_OAUTH_SIGNATURE"

	AuthenticationError_ReasonINVALID_SERVICE AuthenticationError_Reason = "INVALID_SERVICE"

	AuthenticationError_ReasonMISSING_SOAP_REQUEST_HEADER AuthenticationError_Reason = "MISSING_SOAP_REQUEST_HEADER"

	AuthenticationError_ReasonMISSING_AUTHENTICATION_HTTP_HEADER AuthenticationError_Reason = "MISSING_AUTHENTICATION_HTTP_HEADER"

	AuthenticationError_ReasonMISSING_AUTHENTICATION AuthenticationError_Reason = "MISSING_AUTHENTICATION"

	AuthenticationError_ReasonNETWORK_API_ACCESS_DISABLED AuthenticationError_Reason = "NETWORK_API_ACCESS_DISABLED"

	AuthenticationError_ReasonNO_NETWORKS_TO_ACCESS AuthenticationError_Reason = "NO_NETWORKS_TO_ACCESS"

	AuthenticationError_ReasonNETWORK_NOT_FOUND AuthenticationError_Reason = "NETWORK_NOT_FOUND"

	AuthenticationError_ReasonNETWORK_CODE_REQUIRED AuthenticationError_Reason = "NETWORK_CODE_REQUIRED"

	AuthenticationError_ReasonCONNECTION_ERROR AuthenticationError_Reason = "CONNECTION_ERROR"

	AuthenticationError_ReasonGOOGLE_ACCOUNT_ALREADY_ASSOCIATED_WITH_NETWORK AuthenticationError_Reason = "GOOGLE_ACCOUNT_ALREADY_ASSOCIATED_WITH_NETWORK"

	AuthenticationError_ReasonUNDER_INVESTIGATION AuthenticationError_Reason = "UNDER_INVESTIGATION"

	AuthenticationError_ReasonUNKNOWN AuthenticationError_Reason = "UNKNOWN"
)

type CollectionSizeError_Reason string

const (
	CollectionSizeError_ReasonTOO_LARGE CollectionSizeError_Reason = "TOO_LARGE"

	CollectionSizeError_ReasonUNKNOWN CollectionSizeError_Reason = "UNKNOWN"
)

type CommonError_Reason string

const (
	CommonError_ReasonNOT_FOUND CommonError_Reason = "NOT_FOUND"

	CommonError_ReasonALREADY_EXISTS CommonError_Reason = "ALREADY_EXISTS"

	CommonError_ReasonNOT_APPLICABLE CommonError_Reason = "NOT_APPLICABLE"

	CommonError_ReasonDUPLICATE_OBJECT CommonError_Reason = "DUPLICATE_OBJECT"

	CommonError_ReasonCANNOT_UPDATE CommonError_Reason = "CANNOT_UPDATE"

	CommonError_ReasonUNSUPPORTED_OPERATION CommonError_Reason = "UNSUPPORTED_OPERATION"

	CommonError_ReasonCONCURRENT_MODIFICATION CommonError_Reason = "CONCURRENT_MODIFICATION"

	CommonError_ReasonUNKNOWN CommonError_Reason = "UNKNOWN"
)

type DisapprovalReason_Type string

const (
	DisapprovalReason_TypeCONTENT DisapprovalReason_Type = "CONTENT"

	DisapprovalReason_TypeOWNERSHIP DisapprovalReason_Type = "OWNERSHIP"

	DisapprovalReason_TypeOTHER DisapprovalReason_Type = "OTHER"

	DisapprovalReason_TypeUNKNOWN DisapprovalReason_Type = "UNKNOWN"
)

type EntityLimitReachedError_Reason string

const (
	EntityLimitReachedError_ReasonCUSTOM_TARGETING_VALUES_LIMIT_REACHED EntityLimitReachedError_Reason = "CUSTOM_TARGETING_VALUES_LIMIT_REACHED"

	EntityLimitReachedError_ReasonAD_EXCLUSION_RULES_LIMIT_REACHED EntityLimitReachedError_Reason = "AD_EXCLUSION_RULES_LIMIT_REACHED"

	EntityLimitReachedError_ReasonFIRST_PARTY_AUDIENCE_SEGMENTS_LIMIT_REACHED EntityLimitReachedError_Reason = "FIRST_PARTY_AUDIENCE_SEGMENTS_LIMIT_REACHED"

	EntityLimitReachedError_ReasonPLACEMENTS_LIMIT_REACHED EntityLimitReachedError_Reason = "PLACEMENTS_LIMIT_REACHED"

	EntityLimitReachedError_ReasonLINE_ITEMS_LIMIT_REACHED EntityLimitReachedError_Reason = "LINE_ITEMS_LIMIT_REACHED"

	EntityLimitReachedError_ReasonACTIVE_LINE_ITEMS_LIMIT_REACHED EntityLimitReachedError_Reason = "ACTIVE_LINE_ITEMS_LIMIT_REACHED"

	EntityLimitReachedError_ReasonDAI_ENCODING_PROFILES_LIMIT_REACHED EntityLimitReachedError_Reason = "DAI_ENCODING_PROFILES_LIMIT_REACHED"

	EntityLimitReachedError_ReasonTRAFFIC_FORECAST_SEGMENTS_LIMIT_REACHED EntityLimitReachedError_Reason = "TRAFFIC_FORECAST_SEGMENTS_LIMIT_REACHED"

	EntityLimitReachedError_ReasonFORECAST_ADJUSTMENTS_LIMIT_REACHED EntityLimitReachedError_Reason = "FORECAST_ADJUSTMENTS_LIMIT_REACHED"

	EntityLimitReachedError_ReasonACTIVE_EXPERIMENTS_LIMIT_REACHED EntityLimitReachedError_Reason = "ACTIVE_EXPERIMENTS_LIMIT_REACHED"

	EntityLimitReachedError_ReasonSITES_LIMIT_REACHED EntityLimitReachedError_Reason = "SITES_LIMIT_REACHED"

	EntityLimitReachedError_ReasonUNKNOWN EntityLimitReachedError_Reason = "UNKNOWN"
)

type FeatureError_Reason string

const (
	FeatureError_ReasonMISSING_FEATURE FeatureError_Reason = "MISSING_FEATURE"

	FeatureError_ReasonUNKNOWN FeatureError_Reason = "UNKNOWN"
)

type InternalApiError_Reason string

const (
	InternalApiError_ReasonUNEXPECTED_INTERNAL_API_ERROR InternalApiError_Reason = "UNEXPECTED_INTERNAL_API_ERROR"

	InternalApiError_ReasonTRANSIENT_ERROR InternalApiError_Reason = "TRANSIENT_ERROR"

	InternalApiError_ReasonUNKNOWN InternalApiError_Reason = "UNKNOWN"

	InternalApiError_ReasonDOWNTIME InternalApiError_Reason = "DOWNTIME"

	InternalApiError_ReasonERROR_GENERATING_RESPONSE InternalApiError_Reason = "ERROR_GENERATING_RESPONSE"
)

type NotNullError_Reason string

const (
	NotNullError_ReasonARG1_NULL NotNullError_Reason = "ARG1_NULL"

	NotNullError_ReasonARG2_NULL NotNullError_Reason = "ARG2_NULL"

	NotNullError_ReasonARG3_NULL NotNullError_Reason = "ARG3_NULL"

	NotNullError_ReasonNULL NotNullError_Reason = "NULL"

	NotNullError_ReasonUNKNOWN NotNullError_Reason = "UNKNOWN"
)

type NullError_Reason string

const (
	NullError_ReasonNOT_NULL NullError_Reason = "NOT_NULL"

	NullError_ReasonUNKNOWN NullError_Reason = "UNKNOWN"
)

type ParseError_Reason string

const (
	ParseError_ReasonUNPARSABLE ParseError_Reason = "UNPARSABLE"

	ParseError_ReasonUNKNOWN ParseError_Reason = "UNKNOWN"
)

type PermissionError_Reason string

const (
	PermissionError_ReasonPERMISSION_DENIED PermissionError_Reason = "PERMISSION_DENIED"

	PermissionError_ReasonUNKNOWN PermissionError_Reason = "UNKNOWN"
)

type PublisherQueryLanguageContextError_Reason string

const (
	PublisherQueryLanguageContextError_ReasonUNEXECUTABLE PublisherQueryLanguageContextError_Reason = "UNEXECUTABLE"

	PublisherQueryLanguageContextError_ReasonUNKNOWN PublisherQueryLanguageContextError_Reason = "UNKNOWN"
)

type PublisherQueryLanguageSyntaxError_Reason string

const (
	PublisherQueryLanguageSyntaxError_ReasonUNPARSABLE PublisherQueryLanguageSyntaxError_Reason = "UNPARSABLE"

	PublisherQueryLanguageSyntaxError_ReasonUNKNOWN PublisherQueryLanguageSyntaxError_Reason = "UNKNOWN"
)

type QuotaError_Reason string

const (
	QuotaError_ReasonEXCEEDED_QUOTA QuotaError_Reason = "EXCEEDED_QUOTA"

	QuotaError_ReasonUNKNOWN QuotaError_Reason = "UNKNOWN"

	QuotaError_ReasonREPORT_JOB_LIMIT QuotaError_Reason = "REPORT_JOB_LIMIT"

	QuotaError_ReasonSEGMENT_POPULATION_LIMIT QuotaError_Reason = "SEGMENT_POPULATION_LIMIT"
)

type RequiredCollectionError_Reason string

const (
	RequiredCollectionError_ReasonREQUIRED RequiredCollectionError_Reason = "REQUIRED"

	RequiredCollectionError_ReasonTOO_LARGE RequiredCollectionError_Reason = "TOO_LARGE"

	RequiredCollectionError_ReasonTOO_SMALL RequiredCollectionError_Reason = "TOO_SMALL"

	RequiredCollectionError_ReasonUNKNOWN RequiredCollectionError_Reason = "UNKNOWN"
)

type RequiredError_Reason string

const (
	RequiredError_ReasonREQUIRED RequiredError_Reason = "REQUIRED"
)

type ServerError_Reason string

const (
	ServerError_ReasonSERVER_ERROR ServerError_Reason = "SERVER_ERROR"

	ServerError_ReasonSERVER_BUSY ServerError_Reason = "SERVER_BUSY"

	ServerError_ReasonUNKNOWN ServerError_Reason = "UNKNOWN"
)

type SiteError_Reason string

const (
	SiteError_ReasonINVALID_CHILD_NETWORK_CODE SiteError_Reason = "INVALID_CHILD_NETWORK_CODE"

	SiteError_ReasonCANNOT_ARCHIVE_SITE_WITH_SUBSITES SiteError_Reason = "CANNOT_ARCHIVE_SITE_WITH_SUBSITES"

	SiteError_ReasonINVALID_URL_FOR_SITE SiteError_Reason = "INVALID_URL_FOR_SITE"

	SiteError_ReasonMULTIPLE_UPDATES_FOR_SAME_SITE SiteError_Reason = "MULTIPLE_UPDATES_FOR_SAME_SITE"

	SiteError_ReasonTOO_MANY_SITES_PER_REVIEW_REQUEST SiteError_Reason = "TOO_MANY_SITES_PER_REVIEW_REQUEST"

	SiteError_ReasonTOO_MANY_REVIEW_REQUESTS_FOR_SITE SiteError_Reason = "TOO_MANY_REVIEW_REQUESTS_FOR_SITE"

	SiteError_ReasonINVALID_APPROVAL_STATUS_FOR_REVIEW SiteError_Reason = "INVALID_APPROVAL_STATUS_FOR_REVIEW"

	SiteError_ReasonUNKNOWN SiteError_Reason = "UNKNOWN"
)

type StatementError_Reason string

const (
	StatementError_ReasonVARIABLE_NOT_BOUND_TO_VALUE StatementError_Reason = "VARIABLE_NOT_BOUND_TO_VALUE"

	StatementError_ReasonUNKNOWN StatementError_Reason = "UNKNOWN"
)

type StringFormatError_Reason string

const (
	StringFormatError_ReasonUNKNOWN StringFormatError_Reason = "UNKNOWN"

	StringFormatError_ReasonILLEGAL_CHARS StringFormatError_Reason = "ILLEGAL_CHARS"

	StringFormatError_ReasonINVALID_FORMAT StringFormatError_Reason = "INVALID_FORMAT"
)

type StringLengthError_Reason string

const (
	StringLengthError_ReasonTOO_LONG StringLengthError_Reason = "TOO_LONG"

	StringLengthError_ReasonTOO_SHORT StringLengthError_Reason = "TOO_SHORT"

	StringLengthError_ReasonUNKNOWN StringLengthError_Reason = "UNKNOWN"
)

type UrlError_Reason string

const (
	UrlError_ReasonCANNOT_USE_RESERVED_URL UrlError_Reason = "CANNOT_USE_RESERVED_URL"

	UrlError_ReasonCANNOT_USE_GOOGLE_URL UrlError_Reason = "CANNOT_USE_GOOGLE_URL"

	UrlError_ReasonINVALID_URL UrlError_Reason = "INVALID_URL"

	UrlError_ReasonUNKNOWN UrlError_Reason = "UNKNOWN"
)

type CreateSites struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 createSites"`

	Sites []*Site `xml:"sites,omitempty" json:"sites,omitempty"`
}

type CreateSitesResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 createSitesResponse"`

	Rval []*Site `xml:"rval,omitempty" json:"rval,omitempty"`
}

type ApiExceptionFault ApiException

type GetSitesByStatement struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getSitesByStatement"`

	FilterStatement *Statement `xml:"filterStatement,omitempty" json:"filterStatement,omitempty"`
}

type GetSitesByStatementResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getSitesByStatementResponse"`

	Rval *SitePage `xml:"rval,omitempty" json:"rval,omitempty"`
}

type PerformSiteAction struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 performSiteAction"`

	SiteAction *SiteAction `xml:"siteAction,omitempty" json:"siteAction,omitempty"`

	FilterStatement *Statement `xml:"filterStatement,omitempty" json:"filterStatement,omitempty"`
}

type PerformSiteActionResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 performSiteActionResponse"`

	Rval *UpdateResult `xml:"rval,omitempty" json:"rval,omitempty"`
}

type UpdateSites struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 updateSites"`

	Sites []*Site `xml:"sites,omitempty" json:"sites,omitempty"`
}

type UpdateSitesResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 updateSitesResponse"`

	Rval []*Site `xml:"rval,omitempty" json:"rval,omitempty"`
}

type RequestHeader SoapRequestHeader

type ResponseHeader SoapResponseHeader

type ObjectValue struct {
	*_Value
}

type ApiError struct {
	FieldPath string `xml:"fieldPath,omitempty" json:"fieldPath,omitempty"`

	FieldPathElements []*FieldPathElement `xml:"fieldPathElements,omitempty" json:"fieldPathElements,omitempty"`

	Trigger string `xml:"trigger,omitempty" json:"trigger,omitempty"`

	ErrorString string `xml:"errorString,omitempty" json:"errorString,omitempty"`
}

type ApiException struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 ApiExceptionFault"`

	*ApplicationException

	Errors []*ApiError `xml:"errors,omitempty" json:"errors,omitempty"`
}

type ApiVersionError struct {
	*ApiError

	Reason *ApiVersionError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type ApplicationException struct {
	Message string `xml:"message,omitempty" json:"message,omitempty"`
}

type AuthenticationError struct {
	*ApiError

	Reason *AuthenticationError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type BooleanValue struct {
	*_Value

	Value bool `xml:"value,omitempty" json:"value,omitempty"`
}

type CollectionSizeError struct {
	*ApiError

	Reason *CollectionSizeError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type CommonError struct {
	*ApiError

	Reason *CommonError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type Date struct {
	Year int32 `xml:"year,omitempty" json:"year,omitempty"`

	Month int32 `xml:"month,omitempty" json:"month,omitempty"`

	Day int32 `xml:"day,omitempty" json:"day,omitempty"`
}

type DateTime struct {
	Date soap.XSDDate `xml:"date,omitempty" json:"date,omitempty"`

	Hour int32 `xml:"hour,omitempty" json:"hour,omitempty"`

	Minute int32 `xml:"minute,omitempty" json:"minute,omitempty"`

	Second int32 `xml:"second,omitempty" json:"second,omitempty"`

	TimeZoneId string `xml:"timeZoneId,omitempty" json:"timeZoneId,omitempty"`
}

type DateTimeValue struct {
	*_Value

	Value soap.XSDDateTime `xml:"value,omitempty" json:"value,omitempty"`
}

type DateValue struct {
	*_Value

	Value soap.XSDDate `xml:"value,omitempty" json:"value,omitempty"`
}

type DeactivateSite struct {
	*SiteAction
}

type DisapprovalReason struct {
	Type_ *DisapprovalReason_Type `xml:"type,omitempty" json:"type,omitempty"`

	Details string `xml:"details,omitempty" json:"details,omitempty"`
}

type EntityLimitReachedError struct {
	*ApiError

	Reason *EntityLimitReachedError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type FeatureError struct {
	*ApiError

	Reason *FeatureError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type FieldPathElement struct {
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	Index int32 `xml:"index,omitempty" json:"index,omitempty"`
}

type InternalApiError struct {
	*ApiError

	Reason *InternalApiError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type NotNullError struct {
	*ApiError

	Reason *NotNullError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type NullError struct {
	*ApiError

	Reason *NullError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type NumberValue struct {
	*_Value

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type ParseError struct {
	*ApiError

	Reason *ParseError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type PermissionError struct {
	*ApiError

	Reason *PermissionError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type PublisherQueryLanguageContextError struct {
	*ApiError

	Reason *PublisherQueryLanguageContextError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type PublisherQueryLanguageSyntaxError struct {
	*ApiError

	Reason *PublisherQueryLanguageSyntaxError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type QuotaError struct {
	*ApiError

	Reason *QuotaError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type RequiredCollectionError struct {
	*ApiError

	Reason *RequiredCollectionError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type RequiredError struct {
	*ApiError

	Reason *RequiredError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type ServerError struct {
	*ApiError

	Reason *ServerError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type SetValue struct {
	*_Value

	Values []*_Value `xml:"values,omitempty" json:"values,omitempty"`
}

type SiteAction struct {
}

type Site struct {
	Id int64 `xml:"id,omitempty" json:"id,omitempty"`

	Url string `xml:"url,omitempty" json:"url,omitempty"`

	ChildNetworkCode string `xml:"childNetworkCode,omitempty" json:"childNetworkCode,omitempty"`

	ApprovalStatus *ApprovalStatus `xml:"approvalStatus,omitempty" json:"approvalStatus,omitempty"`

	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	DisapprovalReasons []*DisapprovalReason `xml:"disapprovalReasons,omitempty" json:"disapprovalReasons,omitempty"`
}

type SiteError struct {
	*ApiError

	Reason *SiteError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type SitePage struct {
	TotalResultSetSize int32 `xml:"totalResultSetSize,omitempty" json:"totalResultSetSize,omitempty"`

	StartIndex int32 `xml:"startIndex,omitempty" json:"startIndex,omitempty"`

	Results []*Site `xml:"results,omitempty" json:"results,omitempty"`
}

type SoapRequestHeader struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 RequestHeader"`

	NetworkCode string `xml:"networkCode,omitempty" json:"networkCode,omitempty"`

	ApplicationName string `xml:"applicationName,omitempty" json:"applicationName,omitempty"`
}

type SoapResponseHeader struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 ResponseHeader"`

	RequestId string `xml:"requestId,omitempty" json:"requestId,omitempty"`

	ResponseTime int64 `xml:"responseTime,omitempty" json:"responseTime,omitempty"`
}

type Statement struct {
	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Values []*String_ValueMapEntry `xml:"values,omitempty" json:"values,omitempty"`
}

type StatementError struct {
	*ApiError

	Reason *StatementError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type StringFormatError struct {
	*ApiError

	Reason *StringFormatError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type StringLengthError struct {
	*ApiError

	Reason *StringLengthError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type String_ValueMapEntry struct {
	Key string `xml:"key,omitempty" json:"key,omitempty"`

	Value *_Value `xml:"value,omitempty" json:"value,omitempty"`
}

type SubmitSiteForApproval struct {
	*SiteAction
}

type TextValue struct {
	*_Value

	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type UpdateResult struct {
	NumChanges int32 `xml:"numChanges,omitempty" json:"numChanges,omitempty"`
}

type UrlError struct {
	*ApiError

	Reason *UrlError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type _Value struct {
}

type SiteServiceInterface interface {

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Creates new {@link Site} objects.
	*/
	CreateSites(request *CreateSites) (*CreateSitesResponse, error)

	CreateSitesContext(ctx context.Context, request *CreateSites) (*CreateSitesResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Gets a {@link SitePage} of {@link Site} objects that satisfy the given {@link Statement#query}.
	   The following fields are supported for filtering:

	   <table>
	   <tr>
	   <th scope="col">PQL Property</th> <th scope="col">Object Property</th>
	   </tr>
	   <tr>
	   <td>{@code id}</td>
	   <td>{@link Site#id}</td>
	   </tr>
	   <tr>
	   <td>{@code url}</td>
	   <td>{@link Site#url}</td>
	   </tr>
	   <tr>
	   <td>{@code childNetworkCode}</td>
	   <td>{@link Site#childNetworkCode}</td>
	   </tr>
	   <tr>
	   <td>{@code approvalStatus}</td>
	   <td>{@link Site#approvalStatus}</td>
	   </tr>
	   <tr>
	   <td>{@code active}</td>
	   <td>{@link Site#active}</td>
	   </tr>
	   <tr>
	   <td>{@code lastModifiedApprovalStatusDateTime}</td>
	   <td></td>
	   </tr>
	   </table>

	   Restriction: The {@code lastModifiedApprovalStatusDateTime} PQL property can only be used in a
	   top-level expression scoping the {@code filterStatement} to {@link Site}s whose {@code
	   approvalStatus} was modified on or after a specified date and time. (e.x. {@code "WHERE
	   lastModifiedApprovalStatusDateTime >= '2022-01-01T00:00:00'"}).
	*/
	GetSitesByStatement(request *GetSitesByStatement) (*GetSitesByStatementResponse, error)

	GetSitesByStatementContext(ctx context.Context, request *GetSitesByStatement) (*GetSitesByStatementResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Performs actions on {@link Site} objects that match the given {@link Statement#query}.
	*/
	PerformSiteAction(request *PerformSiteAction) (*PerformSiteActionResponse, error)

	PerformSiteActionContext(ctx context.Context, request *PerformSiteAction) (*PerformSiteActionResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Updates the specified {@link Site} objects.

	   <p>The {@link Site#childNetworkCode} can be updated in order to 1) change the child network, 2)
	   move a site from O&O to represented, or 3) move a site from represented to O&O.
	*/
	UpdateSites(request *UpdateSites) (*UpdateSitesResponse, error)

	UpdateSitesContext(ctx context.Context, request *UpdateSites) (*UpdateSitesResponse, error)
}

type siteServiceInterface struct {
	client *soap.Client
}

func NewSiteServiceInterface(client *soap.Client) SiteServiceInterface {
	return &siteServiceInterface{
		client: client,
	}
}

func (service *siteServiceInterface) CreateSitesContext(ctx context.Context, request *CreateSites) (*CreateSitesResponse, error) {
	response := new(CreateSitesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *siteServiceInterface) CreateSites(request *CreateSites) (*CreateSitesResponse, error) {
	return service.CreateSitesContext(
		context.Background(),
		request,
	)
}

func (service *siteServiceInterface) GetSitesByStatementContext(ctx context.Context, request *GetSitesByStatement) (*GetSitesByStatementResponse, error) {
	response := new(GetSitesByStatementResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *siteServiceInterface) GetSitesByStatement(request *GetSitesByStatement) (*GetSitesByStatementResponse, error) {
	return service.GetSitesByStatementContext(
		context.Background(),
		request,
	)
}

func (service *siteServiceInterface) PerformSiteActionContext(ctx context.Context, request *PerformSiteAction) (*PerformSiteActionResponse, error) {
	response := new(PerformSiteActionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *siteServiceInterface) PerformSiteAction(request *PerformSiteAction) (*PerformSiteActionResponse, error) {
	return service.PerformSiteActionContext(
		context.Background(),
		request,
	)
}

func (service *siteServiceInterface) UpdateSitesContext(ctx context.Context, request *UpdateSites) (*UpdateSitesResponse, error) {
	response := new(UpdateSitesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *siteServiceInterface) UpdateSites(request *UpdateSites) (*UpdateSitesResponse, error) {
	return service.UpdateSitesContext(
		context.Background(),
		request,
	)
}
