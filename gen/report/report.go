// Code generated by gowsdl DO NOT EDIT.

package report

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

//
// A view for an ad unit report.
//

type ReportQuery_AdUnitView string

const (

	//
	// Only the top level ad units. Metrics include events for their
	// descendants that are not filtered out.
	//
	ReportQuery_AdUnitViewTOP_LEVEL ReportQuery_AdUnitView = "TOP_LEVEL"

	//
	// All the ad units. Metrics do not include events for the descendants.
	//
	ReportQuery_AdUnitViewFLAT ReportQuery_AdUnitView = "FLAT"

	//
	// Use the ad unit hierarchy. There will be as many ad unit columns as
	// levels of ad units in the generated report:
	// <ul>
	// <li>
	// The column {@link Dimension#AD_UNIT_NAME} is replaced with columns
	// "Ad unit 1", "Ad unit 2", ... "Ad unit n".
	// If level is not applicable to a row, "N/A" is returned as the value.
	// </li>
	// <li>
	// The column {@link Dimension#AD_UNIT_ID} is replaced with columns
	// "Ad unit ID 1", "Ad unit ID 2", ... "Ad unit ID n".
	// If level is not applicable to a row, "N/A" is returned as the value.
	// </li>
	// </ul>
	// <p>
	// Metrics do not include events for the descendants.
	//
	ReportQuery_AdUnitViewHIERARCHICAL ReportQuery_AdUnitView = "HIERARCHICAL"
)

type ApiVersionError_Reason string

const (

	//
	// Indicates that the operation is not allowed in the version the request
	// was made in.
	//
	ApiVersionError_ReasonUPDATE_TO_NEWER_VERSION ApiVersionError_Reason = "UPDATE_TO_NEWER_VERSION"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	ApiVersionError_ReasonUNKNOWN ApiVersionError_Reason = "UNKNOWN"
)

type AuthenticationError_Reason string

const (

	//
	// The SOAP message contains a request header with an ambiguous definition of the authentication
	// header fields. This means either the {@code authToken} and {@code oAuthToken} fields were
	// both null or both were specified. Exactly one value should be specified with each request.
	//
	AuthenticationError_ReasonAMBIGUOUS_SOAP_REQUEST_HEADER AuthenticationError_Reason = "AMBIGUOUS_SOAP_REQUEST_HEADER"

	//
	// The login provided is invalid.
	//
	AuthenticationError_ReasonINVALID_EMAIL AuthenticationError_Reason = "INVALID_EMAIL"

	//
	// Tried to authenticate with provided information, but failed.
	//
	AuthenticationError_ReasonAUTHENTICATION_FAILED AuthenticationError_Reason = "AUTHENTICATION_FAILED"

	//
	// The OAuth provided is invalid.
	//
	AuthenticationError_ReasonINVALID_OAUTH_SIGNATURE AuthenticationError_Reason = "INVALID_OAUTH_SIGNATURE"

	//
	// The specified service to use was not recognized.
	//
	AuthenticationError_ReasonINVALID_SERVICE AuthenticationError_Reason = "INVALID_SERVICE"

	//
	// The SOAP message is missing a request header with an {@code authToken} and optional {@code
	// networkCode}.
	//
	AuthenticationError_ReasonMISSING_SOAP_REQUEST_HEADER AuthenticationError_Reason = "MISSING_SOAP_REQUEST_HEADER"

	//
	// The HTTP request is missing a request header with an {@code authToken}
	//
	AuthenticationError_ReasonMISSING_AUTHENTICATION_HTTP_HEADER AuthenticationError_Reason = "MISSING_AUTHENTICATION_HTTP_HEADER"

	//
	// The request is missing an {@code authToken}
	//
	AuthenticationError_ReasonMISSING_AUTHENTICATION AuthenticationError_Reason = "MISSING_AUTHENTICATION"

	//
	// The network does not have API access enabled.
	//
	AuthenticationError_ReasonNETWORK_API_ACCESS_DISABLED AuthenticationError_Reason = "NETWORK_API_ACCESS_DISABLED"

	//
	// The user is not associated with any network.
	//
	AuthenticationError_ReasonNO_NETWORKS_TO_ACCESS AuthenticationError_Reason = "NO_NETWORKS_TO_ACCESS"

	//
	// No network for the given {@code networkCode} was found.
	//
	AuthenticationError_ReasonNETWORK_NOT_FOUND AuthenticationError_Reason = "NETWORK_NOT_FOUND"

	//
	// The user has access to more than one network, but did not provide a {@code networkCode}.
	//
	AuthenticationError_ReasonNETWORK_CODE_REQUIRED AuthenticationError_Reason = "NETWORK_CODE_REQUIRED"

	//
	// An error happened on the server side during connection to authentication service.
	//
	AuthenticationError_ReasonCONNECTION_ERROR AuthenticationError_Reason = "CONNECTION_ERROR"

	//
	// The user tried to create a test network using an account that already is associated with a
	// network.
	//
	AuthenticationError_ReasonGOOGLE_ACCOUNT_ALREADY_ASSOCIATED_WITH_NETWORK AuthenticationError_Reason = "GOOGLE_ACCOUNT_ALREADY_ASSOCIATED_WITH_NETWORK"

	//
	// The account is blocked and under investigation by the collections team. Please contact Google
	// for more information.
	//
	AuthenticationError_ReasonUNDER_INVESTIGATION AuthenticationError_Reason = "UNDER_INVESTIGATION"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	AuthenticationError_ReasonUNKNOWN AuthenticationError_Reason = "UNKNOWN"
)

type CollectionSizeError_Reason string

const (
	CollectionSizeError_ReasonTOO_LARGE CollectionSizeError_Reason = "TOO_LARGE"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	CollectionSizeError_ReasonUNKNOWN CollectionSizeError_Reason = "UNKNOWN"
)

//
// {@code Column} provides all the trafficking statistics and revenue
// information available for the chosen {@link Dimension} objects.
// <p>
// Columns with {@code INVENTORY_LEVEL} should not be used with dimensions
// relating to line items, orders, companies and creatives,
// such as {@link Dimension#LINE_ITEM_NAME}.
// Columns with {@code LINE_ITEM_LEVEL} can only be used if you have line item-level
// dynamic allocation enabled on your network.
//

type Column string

const (

	//
	// The number of impressions delivered by the ad server.
	// <p>Corresponds to "Ad server impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_IMPRESSIONS Column = "AD_SERVER_IMPRESSIONS"

	//
	// The number of begin-to-render impressions delivered by the ad server.
	// <p>Corresponds to "Ad server begin to render impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_BEGIN_TO_RENDER_IMPRESSIONS Column = "AD_SERVER_BEGIN_TO_RENDER_IMPRESSIONS"

	//
	// The number of impressions delivered by the ad server by explicit custom criteria targeting.
	// <p>Corresponds to "Ad server targeted impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_TARGETED_IMPRESSIONS Column = "AD_SERVER_TARGETED_IMPRESSIONS"

	//
	// The number of clicks delivered by the ad server.
	// <p>Corresponds to "Ad server clicks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_CLICKS Column = "AD_SERVER_CLICKS"

	//
	// The number of clicks delivered by the ad server by explicit custom criteria targeting.
	// <p>Corresponds to "Ad server targeted clicks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_TARGETED_CLICKS Column = "AD_SERVER_TARGETED_CLICKS"

	//
	// The CTR for an ad delivered by the ad server.
	// <p>Corresponds to "Ad server CTR" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_CTR Column = "AD_SERVER_CTR"

	//
	// The CPM and CPC revenue earned, calculated in publisher currency, for the ads delivered by the
	// ad server.
	// <p>Corresponds to "Ad server CPM and CPC revenue" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_CPM_AND_CPC_REVENUE Column = "AD_SERVER_CPM_AND_CPC_REVENUE"

	//
	// The CPD revenue earned, calculated in publisher currency, for the ads delivered by the ad
	// server.
	// <p>Corresponds to "Ad server CPD revenue" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_CPD_REVENUE Column = "AD_SERVER_CPD_REVENUE"

	//
	// The CPA revenue earned, calculated in publisher currency, for the ads delivered by the ad
	// server.
	// <p>Corresponds to "CPA revenue" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_CPA_REVENUE Column = "AD_SERVER_CPA_REVENUE"

	//
	// The CPM, CPC and CPD revenue earned, calculated in publisher currency, for the ads delivered by
	// the ad server.
	// <p>Corresponds to "Ad server CPM, CPC, CPD, and vCPM revenue" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_ALL_REVENUE Column = "AD_SERVER_ALL_REVENUE"

	//
	// The average estimated cost-per-thousand-impressions earned from the CPM and CPC ads delivered
	// by the ad server.
	// <p>Corresponds to "Ad server average eCPM" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_WITHOUT_CPD_AVERAGE_ECPM Column = "AD_SERVER_WITHOUT_CPD_AVERAGE_ECPM"

	//
	// The average estimated cost-per-thousand-impressions earned from the CPM, CPC and CPD ads
	// delivered by the ad server.
	//
	ColumnAD_SERVER_WITH_CPD_AVERAGE_ECPM Column = "AD_SERVER_WITH_CPD_AVERAGE_ECPM"

	//
	// The ratio of the number of impressions delivered to the total impressions
	// delivered by the ad server for line item-level dynamic allocation.
	// Represented as a percentage.
	// <p>Corresponds to "Ad server impressions (%)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_LINE_ITEM_LEVEL_PERCENT_IMPRESSIONS Column = "AD_SERVER_LINE_ITEM_LEVEL_PERCENT_IMPRESSIONS"

	//
	// The ratio of the number of clicks delivered to the total clicks delivered by the ad server for
	// line item-level dynamic allocation. Represented as a percentage.
	// <p>Corresponds to "Ad server clicks (%)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_LINE_ITEM_LEVEL_PERCENT_CLICKS Column = "AD_SERVER_LINE_ITEM_LEVEL_PERCENT_CLICKS"

	//
	// The ratio of revenue generated by ad server to the total CPM and CPC revenue earned by
	// the ads delivered for line item-level dynamic allocation.
	// Represented as a percentage.
	// <p>Corresponds to "Ad server revenue (%)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_LINE_ITEM_LEVEL_WITHOUT_CPD_PERCENT_REVENUE Column = "AD_SERVER_LINE_ITEM_LEVEL_WITHOUT_CPD_PERCENT_REVENUE"

	//
	// The ratio of revenue generated by ad server to the total CPM, CPC and CPD revenue earned by
	// the ads delivered for line item-level dynamic allocation.
	// Represented as a percentage.
	//
	ColumnAD_SERVER_LINE_ITEM_LEVEL_WITH_CPD_PERCENT_REVENUE Column = "AD_SERVER_LINE_ITEM_LEVEL_WITH_CPD_PERCENT_REVENUE"

	//
	// The number of downloaded impressions delivered by the ad server including impressions
	// recognized as spam.
	// <p>Corresponds to "Ad server unfiltered downloaded impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_UNFILTERED_IMPRESSIONS Column = "AD_SERVER_UNFILTERED_IMPRESSIONS"

	//
	// The number of begin to render impressions delivered by the ad server including impressions
	// recognized as spam.
	// <p>Corresponds to "Ad server unfiltered begin to render impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_UNFILTERED_BEGIN_TO_RENDER_IMPRESSIONS Column = "AD_SERVER_UNFILTERED_BEGIN_TO_RENDER_IMPRESSIONS"

	//
	// The number of clicks delivered by the ad server including clicks recognized as spam.
	// <p>Corresponds to "Ad server unfiltered clicks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_UNFILTERED_CLICKS Column = "AD_SERVER_UNFILTERED_CLICKS"

	//
	// The number of impressions an AdSense ad delivered for line item-level dynamic allocation.
	// <p>Corresponds to "AdSense impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_LINE_ITEM_LEVEL_IMPRESSIONS Column = "ADSENSE_LINE_ITEM_LEVEL_IMPRESSIONS"

	//
	// The number of impressions an AdSense ad delivered for line item-level dynamic allocation by
	// explicit custom criteria targeting.
	// <p>Corresponds to "AdSense targeted impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_LINE_ITEM_LEVEL_TARGETED_IMPRESSIONS Column = "ADSENSE_LINE_ITEM_LEVEL_TARGETED_IMPRESSIONS"

	//
	// The number of clicks an AdSense ad delivered for line item-level dynamic allocation.
	// <p>Corresponds to "AdSense clicks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_LINE_ITEM_LEVEL_CLICKS Column = "ADSENSE_LINE_ITEM_LEVEL_CLICKS"

	//
	// The number of clicks an AdSense ad delivered for line item-level dynamic allocation by explicit
	// custom criteria targeting.
	// <p>Corresponds to "AdSense targeted clicks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_LINE_ITEM_LEVEL_TARGETED_CLICKS Column = "ADSENSE_LINE_ITEM_LEVEL_TARGETED_CLICKS"

	//
	// The ratio of clicks an AdSense reservation ad delivered to the number of impressions it
	// delivered, including line item-level dynamic allocation.
	// <p>Corresponds to "AdSense CTR" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_LINE_ITEM_LEVEL_CTR Column = "ADSENSE_LINE_ITEM_LEVEL_CTR"

	//
	// Revenue generated from AdSense ads delivered for line item-level dynamic allocation.
	// <p>Corresponds to "AdSense revenue" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_LINE_ITEM_LEVEL_REVENUE Column = "ADSENSE_LINE_ITEM_LEVEL_REVENUE"

	//
	// The average estimated cost-per-thousand-impressions earned from the ads delivered by AdSense
	// for line item-level dynamic allocation.
	// <p>Corresponds to "AdSense average eCPM" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_LINE_ITEM_LEVEL_AVERAGE_ECPM Column = "ADSENSE_LINE_ITEM_LEVEL_AVERAGE_ECPM"

	//
	// The ratio of the number of impressions delivered by AdSense reservation ads to the total
	// impressions delivered for line item-level dynamic allocation. Represented as a percentage.
	// <p>Corresponds to "AdSense impressions (%)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_LINE_ITEM_LEVEL_PERCENT_IMPRESSIONS Column = "ADSENSE_LINE_ITEM_LEVEL_PERCENT_IMPRESSIONS"

	//
	// The ratio of the number of clicks delivered by AdSense reservation ads to the total clicks
	// delivered for line item-level dynamic allocation. Represented as a percentage.
	// <p>Corresponds to "AdSense clicks (%)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_LINE_ITEM_LEVEL_PERCENT_CLICKS Column = "ADSENSE_LINE_ITEM_LEVEL_PERCENT_CLICKS"

	//
	// The ratio of revenue to the total revenue earned from the CPM and CPC ads
	// delivered by AdSense for line item-level dynamic allocation.
	// Represented as a percentage.
	// <p>Corresponds to "AdSense revenue (%)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_LINE_ITEM_LEVEL_WITHOUT_CPD_PERCENT_REVENUE Column = "ADSENSE_LINE_ITEM_LEVEL_WITHOUT_CPD_PERCENT_REVENUE"

	//
	// The ratio of revenue to the total revenue earned from the CPM, CPC and CPD ads
	// delivered by AdSense for line item-level dynamic allocation.
	// Represented as a percentage.
	//
	ColumnADSENSE_LINE_ITEM_LEVEL_WITH_CPD_PERCENT_REVENUE Column = "ADSENSE_LINE_ITEM_LEVEL_WITH_CPD_PERCENT_REVENUE"

	//
	// The number of impressions an Ad Exchange ad delivered for line item-level dynamic allocation.
	// <p>Corresponds to "Ad Exchange impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_LINE_ITEM_LEVEL_IMPRESSIONS Column = "AD_EXCHANGE_LINE_ITEM_LEVEL_IMPRESSIONS"

	//
	// The number of bids associated with the selected dimensions.
	// <p>Corresponds to "Bids" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnBID_COUNT Column = "BID_COUNT"

	//
	// The average CPM associated with these bids.
	// <p>Corresponds to "Average bid CPM" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnBID_AVERAGE_CPM Column = "BID_AVERAGE_CPM"

	//
	// Number of times a yield partner is asked to return bid to fill a yield group request.
	//
	// <p>Only applies to Open Bidding; not Mediation.
	//
	// <p>This data is available for 45 days after the event.
	// <p>Corresponds to "Yield group callouts" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnYIELD_GROUP_CALLOUTS Column = "YIELD_GROUP_CALLOUTS"

	//
	// Number of times a yield group buyer successfully returned a bid in response to a yield group
	// callout, even if that response is "no bids."
	//
	// <p>Only applies to Open Bidding; not Mediation.
	//
	// <p>This data is available for 45 days after the event.
	// <p>Corresponds to "Yield group successful responses" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnYIELD_GROUP_SUCCESSFUL_RESPONSES Column = "YIELD_GROUP_SUCCESSFUL_RESPONSES"

	//
	// Number of bids received from Open Bidding buyers, regardless of whether the returned bid
	// competes in an auction. This number might be greater than Yield group callouts because a buyer
	// can return multiple bids.
	//
	// <p>Only applies to Open Bidding; not Mediation.
	//
	// <p>This data is available for 45 days after the event.
	// <p>Corresponds to "Yield group bids" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnYIELD_GROUP_BIDS Column = "YIELD_GROUP_BIDS"

	//
	// Number of bids received from Open Bidding buyers that competed in the auction.
	//
	// <p>Some bids may be filtered out before the auction runs if the bidder's response omits
	// required fields or contains a creative that violates Google's policies. Learn more about
	// policies and enforcement.
	//
	// <p>Only applies to Open Bidding; not Mediation.
	//
	// <p>This data is available for 45 days after the event.
	// <p>Corresponds to "Yield group bids in auction" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnYIELD_GROUP_BIDS_IN_AUCTION Column = "YIELD_GROUP_BIDS_IN_AUCTION"

	//
	// Number of winning bids received from Open Bidding buyers, even when the winning bid is placed
	// at the end of a mediation for mobile apps chain.
	//
	// <p>Only applies to Open Bidding; not Mediation.
	//
	// <p>This data is available for 45 days after the event.
	// <p>Corresponds to "Yield group auctions won" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnYIELD_GROUP_AUCTIONS_WON Column = "YIELD_GROUP_AUCTIONS_WON"

	//
	// Number of bid requests sent for each deal.
	//
	// <p>Must be broken down by {@code PROGRAMMATIC_DEAL_ID} or {@code PROGRAMMATIC_DEAL_NAME}.
	//
	// <p>Not tracked for Programmatic Guaranteed deals (will show zero on those rows).
	// <p>Corresponds to "Deals bid requests" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnDEALS_BID_REQUESTS Column = "DEALS_BID_REQUESTS"

	//
	// Number of bids placed on each deal.
	//
	// <p>Not tracked for Programmatic Guaranteed deals (will show zero on those rows).
	// <p>Corresponds to "Deals bids" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnDEALS_BIDS Column = "DEALS_BIDS"

	//
	// Bid rate for each deal.
	//
	// <p>Must be broken down by {@code PROGRAMMATIC_DEAL_ID} or {@code PROGRAMMATIC_DEAL_NAME}.
	//
	// <p>Not tracked for Programmatic Guaranteed deals (will show N/A on those rows).
	// <p>Corresponds to "Deals bid rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnDEALS_BID_RATE Column = "DEALS_BID_RATE"

	//
	// Number of winning bids for each deal.
	//
	// <p>Not tracked for Programmatic Guaranteed deals (will show zero on those rows).
	// <p>Corresponds to "Deals winning bids" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnDEALS_WINNING_BIDS Column = "DEALS_WINNING_BIDS"

	//
	// Win rate for each deal.
	//
	// <p>Not tracked for Programmatic Guaranteed deals (will show N/A on those rows).
	// <p>Corresponds to "Deals win rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnDEALS_WIN_RATE Column = "DEALS_WIN_RATE"

	//
	// Number of matched yield group requests where a yield partner delivered their ad to publisher
	// inventory.
	// <p>Corresponds to "Yield group impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnYIELD_GROUP_IMPRESSIONS Column = "YIELD_GROUP_IMPRESSIONS"

	//
	// Total net revenue earned by a yield group, based upon the yield group estimated CPM and yield
	// group impressions recorded. This revenue already excludes Google revenue share.
	// <p>Corresponds to "Yield group estimated revenue" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnYIELD_GROUP_ESTIMATED_REVENUE Column = "YIELD_GROUP_ESTIMATED_REVENUE"

	//
	// The estimated net rate for yield groups or individual yield group partners.
	// <p>Corresponds to "Yield group estimated CPM" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnYIELD_GROUP_ESTIMATED_CPM Column = "YIELD_GROUP_ESTIMATED_CPM"

	//
	// Yield group Mediation fill rate indicating how often a network fills an ad request.
	// <p>Corresponds to "Mediation fill rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnYIELD_GROUP_MEDIATION_FILL_RATE Column = "YIELD_GROUP_MEDIATION_FILL_RATE"

	//
	// Passbacks are counted when an ad network is given a chance to serve but does not deliver an
	// impression, and Ad Manager Mediation moves on to the next ad network in the mediation chain.
	//
	// <p>Passbacks are not currently counted for the "Ad server" demand channel.
	// <p>Corresponds to "Mediation passbacks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnYIELD_GROUP_MEDIATION_PASSBACKS Column = "YIELD_GROUP_MEDIATION_PASSBACKS"

	//
	// Revenue per thousand impressions based on data collected by Ad Manager from third-party ad
	// network reports. Displays zero if data collection is not enabled.
	// <p>Corresponds to "Mediation third-party eCPM" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnYIELD_GROUP_MEDIATION_THIRD_PARTY_ECPM Column = "YIELD_GROUP_MEDIATION_THIRD_PARTY_ECPM"

	//
	// Total requests where a Mediation chain was served, even if none of the ad networks delivered an
	// impression.
	// <p>Corresponds to "Mediation chains served" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnYIELD_GROUP_MEDIATION_CHAINS_SERVED Column = "YIELD_GROUP_MEDIATION_CHAINS_SERVED"

	//
	// Mediation third-party average cost-per-thousand-impressions.
	// <p>Compatible with the "Historical" report type.</p>
	//
	ColumnMEDIATION_THIRD_PARTY_ECPM Column = "MEDIATION_THIRD_PARTY_ECPM"

	//
	// The number of impressions an Ad Exchange ad delivered for line item-level dynamic allocation
	// by explicit custom criteria targeting.
	// <p>Corresponds to "Ad Exchange targeted impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_LINE_ITEM_LEVEL_TARGETED_IMPRESSIONS Column = "AD_EXCHANGE_LINE_ITEM_LEVEL_TARGETED_IMPRESSIONS"

	//
	// The number of clicks an Ad Exchange ad delivered for line item-level dynamic allocation.
	// <p>Corresponds to "Ad Exchange clicks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_LINE_ITEM_LEVEL_CLICKS Column = "AD_EXCHANGE_LINE_ITEM_LEVEL_CLICKS"

	//
	// The number of clicks an Ad Exchange ad delivered for line item-level dynamic allocation by
	// explicit custom criteria targeting.
	// <p>Corresponds to "Ad Exchange targeted clicks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_LINE_ITEM_LEVEL_TARGETED_CLICKS Column = "AD_EXCHANGE_LINE_ITEM_LEVEL_TARGETED_CLICKS"

	//
	// The ratio of clicks an Ad Exchange ad delivered to the number of impressions it delivered for
	// line item-level dynamic allocation.
	// <p>Corresponds to "Ad Exchange CTR" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_LINE_ITEM_LEVEL_CTR Column = "AD_EXCHANGE_LINE_ITEM_LEVEL_CTR"

	//
	// The ratio of the number of impressions delivered to the total impressions delivered by Ad
	// Exchange for line item-level dynamic allocation. Represented as a percentage.
	// <p>Corresponds to "Ad Exchange impressions (%)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_LINE_ITEM_LEVEL_PERCENT_IMPRESSIONS Column = "AD_EXCHANGE_LINE_ITEM_LEVEL_PERCENT_IMPRESSIONS"

	//
	// The ratio of the number of clicks delivered to the total clicks delivered by Ad Exchange for
	// line item-level dynamic allocation. Represented as a percentage.
	// <p>Corresponds to "Ad Exchange clicks (%)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_LINE_ITEM_LEVEL_PERCENT_CLICKS Column = "AD_EXCHANGE_LINE_ITEM_LEVEL_PERCENT_CLICKS"

	//
	// Revenue generated from Ad Exchange ads delivered for line item-level dynamic allocation.
	// Represented in publisher currency and time zone.
	// <p>Corresponds to "Ad Exchange revenue" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_LINE_ITEM_LEVEL_REVENUE Column = "AD_EXCHANGE_LINE_ITEM_LEVEL_REVENUE"

	//
	// The ratio of revenue generated by Ad Exchange to the total revenue earned
	// by CPM and CPC ads delivered for line item-level dynamic allocation.
	// Represented as a percentage.
	// <p>Corresponds to "Ad Exchange revenue (%)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_LINE_ITEM_LEVEL_WITHOUT_CPD_PERCENT_REVENUE Column = "AD_EXCHANGE_LINE_ITEM_LEVEL_WITHOUT_CPD_PERCENT_REVENUE"

	//
	// The ratio of revenue generated by Ad Exchange to the total revenue earned
	// by CPM, CPC and CPD ads delivered for line item-level dynamic allocation.
	// Represented as a percentage.
	//
	ColumnAD_EXCHANGE_LINE_ITEM_LEVEL_WITH_CPD_PERCENT_REVENUE Column = "AD_EXCHANGE_LINE_ITEM_LEVEL_WITH_CPD_PERCENT_REVENUE"

	//
	// The average estimated cost-per-thousand-impressions earned from the delivery of Ad Exchange ads
	// for line item-level dynamic allocation.
	// <p>Corresponds to "Ad Exchange average eCPM" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_LINE_ITEM_LEVEL_AVERAGE_ECPM Column = "AD_EXCHANGE_LINE_ITEM_LEVEL_AVERAGE_ECPM"

	//
	// The total number of impressions delivered including line item-level dynamic allocation.
	// <p>Corresponds to "Total impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_LINE_ITEM_LEVEL_IMPRESSIONS Column = "TOTAL_LINE_ITEM_LEVEL_IMPRESSIONS"

	//
	// The total number of impressions delivered including line item-level dynamic allocation by
	// explicit custom criteria targeting.
	// <p>Corresponds to "Total targeted impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_LINE_ITEM_LEVEL_TARGETED_IMPRESSIONS Column = "TOTAL_LINE_ITEM_LEVEL_TARGETED_IMPRESSIONS"

	//
	// The total number of clicks delivered including line item-level dynamic allocation.
	// <p>Corresponds to "Total clicks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_LINE_ITEM_LEVEL_CLICKS Column = "TOTAL_LINE_ITEM_LEVEL_CLICKS"

	//
	// The total number of clicks delivered including line item-level dynamic allocation by explicit
	// custom criteria targeting
	// <p>Corresponds to "Total targeted clicks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_LINE_ITEM_LEVEL_TARGETED_CLICKS Column = "TOTAL_LINE_ITEM_LEVEL_TARGETED_CLICKS"

	//
	// The ratio of total clicks on ads delivered by the ad servers to the total number
	// of impressions delivered for an ad including line item-level dynamic allocation.
	// <p>Corresponds to "Total CTR" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_LINE_ITEM_LEVEL_CTR Column = "TOTAL_LINE_ITEM_LEVEL_CTR"

	//
	// The total CPM and CPC revenue generated by the ad servers
	// including line item-level dynamic allocation.
	// <p>Corresponds to "Total CPM and CPC revenue" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_LINE_ITEM_LEVEL_CPM_AND_CPC_REVENUE Column = "TOTAL_LINE_ITEM_LEVEL_CPM_AND_CPC_REVENUE"

	//
	// The total CPM, CPC and CPD revenue generated by the ad servers
	// including line item-level dynamic allocation.
	// <p>Corresponds to "Total CPM, CPC, CPD, and vCPM revenue" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_LINE_ITEM_LEVEL_ALL_REVENUE Column = "TOTAL_LINE_ITEM_LEVEL_ALL_REVENUE"

	//
	// Estimated cost-per-thousand-impressions (eCPM) of CPM and CPC ads delivered by the
	// ad servers including line item-level dynamic allocation.
	// <p>Corresponds to "Total average eCPM" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_LINE_ITEM_LEVEL_WITHOUT_CPD_AVERAGE_ECPM Column = "TOTAL_LINE_ITEM_LEVEL_WITHOUT_CPD_AVERAGE_ECPM"

	//
	// Estimated cost-per-thousand-impressions (eCPM) of CPM, CPC and CPD ads delivered by the
	// ad servers including line item-level dynamic allocation.
	//
	ColumnTOTAL_LINE_ITEM_LEVEL_WITH_CPD_AVERAGE_ECPM Column = "TOTAL_LINE_ITEM_LEVEL_WITH_CPD_AVERAGE_ECPM"

	//
	// The total number of times that the code for an ad is served by the ad server including
	// inventory-level dynamic allocation.
	// <p>Corresponds to "Total code served count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_CODE_SERVED_COUNT Column = "TOTAL_CODE_SERVED_COUNT"

	//
	// The total number of times that an ad request is sent to the ad server including dynamic
	// allocation.
	// <p>Corresponds to "Total ad requests" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_AD_REQUESTS Column = "TOTAL_AD_REQUESTS"

	//
	// The total number of times that an ad is served by the ad server including dynamic allocation.
	// <p>Corresponds to "Total responses served" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_RESPONSES_SERVED Column = "TOTAL_RESPONSES_SERVED"

	//
	// The total number of times that an ad is not returned by the ad server.
	// <p>Corresponds to "Total unmatched ad requests" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_UNMATCHED_AD_REQUESTS Column = "TOTAL_UNMATCHED_AD_REQUESTS"

	//
	// The fill rate indicating how often an ad request is filled by the ad server including dynamic
	// allocation.
	// <p>Corresponds to "Total fill rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_FILL_RATE Column = "TOTAL_FILL_RATE"

	//
	// The total number of times that an ad is served by the ad server.
	// <p>Corresponds to "Ad server responses served" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_RESPONSES_SERVED Column = "AD_SERVER_RESPONSES_SERVED"

	//
	// The total number of times that an AdSense ad is delivered.
	// <p>Corresponds to "AdSense responses served" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_RESPONSES_SERVED Column = "ADSENSE_RESPONSES_SERVED"

	//
	// The total number of times that an Ad Exchange ad is delivered.
	// <p>Corresponds to "Ad Exchange responses served" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_RESPONSES_SERVED Column = "AD_EXCHANGE_RESPONSES_SERVED"

	//
	// Total number of ad responses served from programmatic demand sources. Includes Ad Exchange,
	// Open Bidding, and Preferred Deals.
	//
	// <p>Differs from Ad Exchange responses served, which doesn't include Open Bidding matched ad
	// requests.
	// <p>Corresponds to "Programmatic responses served" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnPROGRAMMATIC_RESPONSES_SERVED Column = "PROGRAMMATIC_RESPONSES_SERVED"

	//
	// The number of programmatic responses served divided by the number of requests eligible for
	// programmatic. Includes Ad Exchange, Open Bidding, and Preferred Deals.
	// <p>Corresponds to "Programmatic match rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnPROGRAMMATIC_MATCH_RATE Column = "PROGRAMMATIC_MATCH_RATE"

	//
	// The total number of ad requests eligible for programmatic inventory, including Programmatic
	// Guaranteed, Preferred Deals, backfill, and open auction.
	//
	// <p>For optimized pods, this metric will count a single opportunity when the pod doesn't fill
	// with programmatic demand. When it does fill, it will count each matched query.
	// <p>Corresponds to "Programmatic eligible ad requests" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_PROGRAMMATIC_ELIGIBLE_AD_REQUESTS Column = "TOTAL_PROGRAMMATIC_ELIGIBLE_AD_REQUESTS"

	//
	// The total number of video opportunities.
	// <p>Corresponds to "True opportunities" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_VIDEO_OPPORTUNITIES Column = "TOTAL_VIDEO_OPPORTUNITIES"

	//
	// The total number of video capped opportunities.
	// <p>Corresponds to "Capped opportunities" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_VIDEO_CAPPED_OPPORTUNITIES Column = "TOTAL_VIDEO_CAPPED_OPPORTUNITIES"

	//
	// The total number of video matched opportunities.
	// <p>Corresponds to "Matched opportunities" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_VIDEO_MATCHED_OPPORTUNITIES Column = "TOTAL_VIDEO_MATCHED_OPPORTUNITIES"

	//
	// The total filled duration in ad breaks.
	// <p>Corresponds to "Matched duration (seconds)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_VIDEO_MATCHED_DURATION Column = "TOTAL_VIDEO_MATCHED_DURATION"

	//
	// The total duration in ad breaks.
	// <p>Corresponds to "Total duration (seconds)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_VIDEO_DURATION Column = "TOTAL_VIDEO_DURATION"

	//
	// The total number of break starts.
	// <p>Corresponds to "Break start" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_VIDEO_BREAK_START Column = "TOTAL_VIDEO_BREAK_START"

	//
	// The total number of break ends.
	// <p>Corresponds to "Break end" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_VIDEO_BREAK_END Column = "TOTAL_VIDEO_BREAK_END"

	//
	// The total number of missed impressions due to the ad servers' inability to
	// find ads to serve, including inventory-level dynamic allocation.
	// <p>Corresponds to "Unfilled impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_INVENTORY_LEVEL_UNFILLED_IMPRESSIONS Column = "TOTAL_INVENTORY_LEVEL_UNFILLED_IMPRESSIONS"

	//
	// <p>Corresponds to "Average impressions/unique visitor" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnUNIQUE_REACH_FREQUENCY Column = "UNIQUE_REACH_FREQUENCY"

	//
	// <p>Corresponds to "Total reach impressions" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnUNIQUE_REACH_IMPRESSIONS Column = "UNIQUE_REACH_IMPRESSIONS"

	//
	// <p>Corresponds to "Total unique visitors" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnUNIQUE_REACH Column = "UNIQUE_REACH"

	//
	// The number of impressions for a particular SDK mediation creative.
	// <p>Corresponds to "SDK mediation creative impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnSDK_MEDIATION_CREATIVE_IMPRESSIONS Column = "SDK_MEDIATION_CREATIVE_IMPRESSIONS"

	//
	// The number of clicks for a particular SDK mediation creative.
	// <p>Corresponds to "SDK mediation creative clicks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnSDK_MEDIATION_CREATIVE_CLICKS Column = "SDK_MEDIATION_CREATIVE_CLICKS"

	//
	// The number of forecasted impressions for future sell-through reports.
	//
	// <p>This metric is available for the next 90 days with a daily break down and for the next 12
	// months with a monthly break down.
	// <p>Corresponds to "Forecasted impressions" in the Ad Manager UI. Compatible with the "Future sell-through" report type.</p>
	//
	ColumnSELL_THROUGH_FORECASTED_IMPRESSIONS Column = "SELL_THROUGH_FORECASTED_IMPRESSIONS"

	//
	// The number of partner-sold impressions served to the YouTube partner ad inventory.
	// <p>Corresponds to "Partner-sold impressions" in the Ad Manager UI. Compatible with the "YouTube consolidated" report type.</p>
	//
	ColumnPARTNER_SALES_PARTNER_IMPRESSIONS Column = "PARTNER_SALES_PARTNER_IMPRESSIONS"

	//
	// The number of times the ad server responded to a request for the YouTube partner ad inventory.
	// <p>Corresponds to "Partner-sold code served count" in the Ad Manager UI. Compatible with the "YouTube consolidated" report type.</p>
	//
	ColumnPARTNER_SALES_PARTNER_CODE_SERVED Column = "PARTNER_SALES_PARTNER_CODE_SERVED"

	//
	// The number of Google-sold impressions served to the YouTube partner ad inventory.
	// <p>Corresponds to "Google-sold impressions" in the Ad Manager UI. Compatible with the "YouTube consolidated" report type.</p>
	//
	ColumnPARTNER_SALES_GOOGLE_IMPRESSIONS Column = "PARTNER_SALES_GOOGLE_IMPRESSIONS"

	//
	// The number of Google-sold reservation impressions served to the YouTube partner ad inventory.
	// <p>Corresponds to "Google-sold reservation impressions" in the Ad Manager UI. Compatible with the "YouTube consolidated" report type.</p>
	//
	ColumnPARTNER_SALES_GOOGLE_RESERVATION_IMPRESSIONS Column = "PARTNER_SALES_GOOGLE_RESERVATION_IMPRESSIONS"

	//
	// The number of Google-sold auction impressions served to the YouTube partner ad inventory.
	// <p>Corresponds to "Google-sold auction impressions" in the Ad Manager UI. Compatible with the "YouTube consolidated" report type.</p>
	//
	ColumnPARTNER_SALES_GOOGLE_AUCTION_IMPRESSIONS Column = "PARTNER_SALES_GOOGLE_AUCTION_IMPRESSIONS"

	//
	// The total number of ad requests that were eligible to serve to the YouTube partner ad
	// inventory.
	// <p>Corresponds to "Total ad requests" in the Ad Manager UI. Compatible with the "YouTube consolidated" report type.</p>
	//
	ColumnPARTNER_SALES_QUERIES Column = "PARTNER_SALES_QUERIES"

	//
	// The number of ad requests for the YouTube partner ad inventory that were filled with at least 1
	// ad. This includes both partner-sold and Google-sold requests.
	//
	// <p>Google-sold can fill at most 2 ads, while partner-sold can fill at most 1 ad.
	// <p>Corresponds to "Filled ad requests" in the Ad Manager UI. Compatible with the "YouTube consolidated" report type.</p>
	//
	ColumnPARTNER_SALES_FILLED_QUERIES Column = "PARTNER_SALES_FILLED_QUERIES"

	//
	// The fill rate percentage of filled requests to total ad requests.
	// <p>Corresponds to "Fill rate" in the Ad Manager UI. Compatible with the "YouTube consolidated" report type.</p>
	//
	ColumnPARTNER_SALES_SELL_THROUGH_RATE Column = "PARTNER_SALES_SELL_THROUGH_RATE"

	//
	// The number of available impressions for future sell-through reports.
	//
	// <p>This metric is available for the next 90 days with a daily break down
	// and for the next 12 months with a monthly break down.
	// <p>Corresponds to "Available impressions" in the Ad Manager UI. Compatible with the "Future sell-through" report type.</p>
	//
	ColumnSELL_THROUGH_AVAILABLE_IMPRESSIONS Column = "SELL_THROUGH_AVAILABLE_IMPRESSIONS"

	//
	// The number of reserved impressions for future sell-through reports.
	//
	// <p>This metric is available for the next 90 days with a daily break down
	// and for the next 12 months with a monthly break down.
	// <p>Corresponds to "Reserved impressions" in the Ad Manager UI. Compatible with the "Future sell-through" report type.</p>
	//
	ColumnSELL_THROUGH_RESERVED_IMPRESSIONS Column = "SELL_THROUGH_RESERVED_IMPRESSIONS"

	//
	// The sell-through rate for impressions for future sell-through reports.
	//
	// <p>This metric is available for the next 90 days with a daily break down
	// and for the next 12 months with a monthly break down.
	// <p>Corresponds to "Sell-through rate" in the Ad Manager UI. Compatible with the "Future sell-through" report type.</p>
	//
	ColumnSELL_THROUGH_SELL_THROUGH_RATE Column = "SELL_THROUGH_SELL_THROUGH_RATE"

	//
	// The total number of times a backup image is served in place of a rich media ad.
	// <p>Corresponds to "Backup image impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_BACKUP_IMAGES Column = "RICH_MEDIA_BACKUP_IMAGES"

	//
	// The amount of time(seconds) that each rich media ad is displayed to users.
	// <p>Corresponds to "Total display time" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_DISPLAY_TIME Column = "RICH_MEDIA_DISPLAY_TIME"

	//
	// The average amount of time(seconds) that each rich media ad is displayed to users.
	// <p>Corresponds to "Average display time" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_AVERAGE_DISPLAY_TIME Column = "RICH_MEDIA_AVERAGE_DISPLAY_TIME"

	//
	// The number of times an expanding ad was expanded.
	// <p>Corresponds to "Total expansions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_EXPANSIONS Column = "RICH_MEDIA_EXPANSIONS"

	//
	// The average amount of time(seconds) that an expanding ad is viewed in an expanded state.
	// <p>Corresponds to "Average expanding time" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_EXPANDING_TIME Column = "RICH_MEDIA_EXPANDING_TIME"

	//
	// The average amount of time(seconds) that a user interacts with a rich media ad.
	// <p>Corresponds to "Interaction time" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_INTERACTION_TIME Column = "RICH_MEDIA_INTERACTION_TIME"

	//
	// The number of times that a user interacts with a rich media ad.
	// <p>Corresponds to "Total interactions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_INTERACTION_COUNT Column = "RICH_MEDIA_INTERACTION_COUNT"

	//
	// The ratio of rich media ad interactions to the number of times the ad was displayed.
	// Represented as a percentage.
	// <p>Corresponds to "Interaction rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_INTERACTION_RATE Column = "RICH_MEDIA_INTERACTION_RATE"

	//
	// The average amount of time(seconds) that a user interacts with a rich media ad.
	// <p>Corresponds to "Average interaction time" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_AVERAGE_INTERACTION_TIME Column = "RICH_MEDIA_AVERAGE_INTERACTION_TIME"

	//
	// The number of impressions where a user interacted with a rich media ad.
	// <p>Corresponds to "Interactive impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_INTERACTION_IMPRESSIONS Column = "RICH_MEDIA_INTERACTION_IMPRESSIONS"

	//
	// The number of times that a user manually closes a floating, expanding,
	// in-page with overlay, or in-page with floating ad.
	// <p>Corresponds to "Manual closes" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_MANUAL_CLOSES Column = "RICH_MEDIA_MANUAL_CLOSES"

	//
	// A metric that measures an impression only once when a user opens an ad in full screen mode.
	// <p>Corresponds to "Full-screen impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_FULL_SCREEN_IMPRESSIONS Column = "RICH_MEDIA_FULL_SCREEN_IMPRESSIONS"

	//
	// The number of times a user clicked on the graphical controls of a video player.
	// <p>Corresponds to "Total video interactions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_VIDEO_INTERACTIONS Column = "RICH_MEDIA_VIDEO_INTERACTIONS"

	//
	// The ratio of video interactions to video plays.
	// Represented as a percentage.
	// <p>Corresponds to "Video interaction rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_VIDEO_INTERACTION_RATE Column = "RICH_MEDIA_VIDEO_INTERACTION_RATE"

	//
	// The number of times a rich media video was muted.
	// <p>Corresponds to "Mute" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_VIDEO_MUTES Column = "RICH_MEDIA_VIDEO_MUTES"

	//
	// The number of times a rich media video was paused.
	// <p>Corresponds to "Pause" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_VIDEO_PAUSES Column = "RICH_MEDIA_VIDEO_PAUSES"

	//
	// The number of times a rich media video was played.
	// <p>Corresponds to "Plays" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_VIDEO_PLAYES Column = "RICH_MEDIA_VIDEO_PLAYES"

	//
	// The number of times a rich media video was played up to midpoint.
	// <p>Corresponds to "Midpoint" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_VIDEO_MIDPOINTS Column = "RICH_MEDIA_VIDEO_MIDPOINTS"

	//
	// The number of times a rich media video was fully played.
	// <p>Corresponds to "Complete" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_VIDEO_COMPLETES Column = "RICH_MEDIA_VIDEO_COMPLETES"

	//
	// The number of times a rich media video was restarted.
	// <p>Corresponds to "Replays" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_VIDEO_REPLAYS Column = "RICH_MEDIA_VIDEO_REPLAYS"

	//
	// The number of times a rich media video was stopped.
	// <p>Corresponds to "Stops" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_VIDEO_STOPS Column = "RICH_MEDIA_VIDEO_STOPS"

	//
	// The number of times a rich media video was unmuted.
	// <p>Corresponds to "Unmute" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_VIDEO_UNMUTES Column = "RICH_MEDIA_VIDEO_UNMUTES"

	//
	// The average amount of time(seconds) that a rich media video was viewed per view.
	// <p>Corresponds to "Average view time" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_VIDEO_VIEW_TIME Column = "RICH_MEDIA_VIDEO_VIEW_TIME"

	//
	// The percentage of a video watched by a user.
	// <p>Corresponds to "View rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_VIDEO_VIEW_RATE Column = "RICH_MEDIA_VIDEO_VIEW_RATE"

	//
	// The amount of time (seconds) that a user interacts with a rich media ad.
	// <p>Corresponds to "Custom event - time" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_CUSTOM_EVENT_TIME Column = "RICH_MEDIA_CUSTOM_EVENT_TIME"

	//
	// The number of times a user views and interacts with a specified part of a rich media ad.
	// <p>Corresponds to "Custom event - count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnRICH_MEDIA_CUSTOM_EVENT_COUNT Column = "RICH_MEDIA_CUSTOM_EVENT_COUNT"

	//
	// The number of impressions where the video was played.
	// <p>Corresponds to "Start" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_START Column = "VIDEO_VIEWERSHIP_START"

	//
	// The number of times the video played to 25% of its length.
	// <p>Corresponds to "First quartile" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_FIRST_QUARTILE Column = "VIDEO_VIEWERSHIP_FIRST_QUARTILE"

	//
	// The number of times the video reached its midpoint during play.
	// <p>Corresponds to "Midpoint" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_MIDPOINT Column = "VIDEO_VIEWERSHIP_MIDPOINT"

	//
	// The number of times the video played to 75% of its length.
	// <p>Corresponds to "Third quartile" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_THIRD_QUARTILE Column = "VIDEO_VIEWERSHIP_THIRD_QUARTILE"

	//
	// The number of times the video played to completion.
	// <p>Corresponds to "Complete" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_COMPLETE Column = "VIDEO_VIEWERSHIP_COMPLETE"

	//
	// Average percentage of the video watched by users.
	// <p>Corresponds to "Average view rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_AVERAGE_VIEW_RATE Column = "VIDEO_VIEWERSHIP_AVERAGE_VIEW_RATE"

	//
	// Average time(seconds) users watched the video.
	// <p>Corresponds to "Average view time" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_AVERAGE_VIEW_TIME Column = "VIDEO_VIEWERSHIP_AVERAGE_VIEW_TIME"

	//
	// Percentage of times the video played to the end.
	// <p>Corresponds to "Completion rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_COMPLETION_RATE Column = "VIDEO_VIEWERSHIP_COMPLETION_RATE"

	//
	// The number of times an error occurred, such as a VAST redirect error, a video playback error,
	// or an invalid response error.
	// <p>Corresponds to "Total error count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_TOTAL_ERROR_COUNT Column = "VIDEO_VIEWERSHIP_TOTAL_ERROR_COUNT"

	//
	// Duration of the video creative.
	// <p>Corresponds to "Video length" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_VIDEO_LENGTH Column = "VIDEO_VIEWERSHIP_VIDEO_LENGTH"

	//
	// The number of times a skip button is shown in video.
	// <p>Corresponds to "Skip button shown" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_SKIP_BUTTON_SHOWN Column = "VIDEO_VIEWERSHIP_SKIP_BUTTON_SHOWN"

	//
	// The number of engaged views i.e. ad is viewed to completion or for 30s, whichever comes first.
	// <p>Corresponds to "Engaged view" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_ENGAGED_VIEW Column = "VIDEO_VIEWERSHIP_ENGAGED_VIEW"

	//
	// View-through rate represented as a percentage.
	// <p>Corresponds to "View-through rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_VIEW_THROUGH_RATE Column = "VIDEO_VIEWERSHIP_VIEW_THROUGH_RATE"

	//
	// Number of times that the publisher specified a video ad played automatically.
	// <p>Corresponds to "Auto-plays" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_AUTO_PLAYS Column = "VIDEO_VIEWERSHIP_AUTO_PLAYS"

	//
	// Number of times that the publisher specified a video ad was clicked to play.
	// <p>Corresponds to "Click-to-plays" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_CLICK_TO_PLAYS Column = "VIDEO_VIEWERSHIP_CLICK_TO_PLAYS"

	//
	// Error rate is the percentage of video error count from (error count + total impressions).
	// <p>Corresponds to "Total error rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_VIEWERSHIP_TOTAL_ERROR_RATE Column = "VIDEO_VIEWERSHIP_TOTAL_ERROR_RATE"

	//
	// The drop-off rate.
	// <p>Corresponds to "Drop-off rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnDROPOFF_RATE Column = "DROPOFF_RATE"

	//
	// Number of times a video ad has been viewed to completion or watched to 30 seconds, whichever
	// happens first.
	// <p>Corresponds to "TrueView views" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_TRUEVIEW_VIEWS Column = "VIDEO_TRUEVIEW_VIEWS"

	//
	// Percentage of times a user clicked Skip.
	// <p>Corresponds to "TrueView skip rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_TRUEVIEW_SKIP_RATE Column = "VIDEO_TRUEVIEW_SKIP_RATE"

	//
	// TrueView views divided by TrueView impressions.
	// <p>Corresponds to "TrueView VTR" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_TRUEVIEW_VTR Column = "VIDEO_TRUEVIEW_VTR"

	//
	// Number of VAST video errors of type 100.
	// <p>Corresponds to "VAST error 100 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_100_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_100_COUNT"

	//
	// Number of VAST video errors of type 101.
	// <p>Corresponds to "VAST error 101 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_101_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_101_COUNT"

	//
	// Number of VAST video errors of type 102.
	// <p>Corresponds to "VAST error 102 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_102_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_102_COUNT"

	//
	// Number of VAST video errors of type 200.
	// <p>Corresponds to "VAST error 200 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_200_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_200_COUNT"

	//
	// Number of VAST video errors of type 201.
	// <p>Corresponds to "VAST error 201 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_201_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_201_COUNT"

	//
	// Number of VAST video errors of type 202.
	// <p>Corresponds to "VAST error 202 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_202_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_202_COUNT"

	//
	// Number of VAST video errors of type 203.
	// <p>Corresponds to "VAST error 203 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_203_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_203_COUNT"

	//
	// Number of VAST video errors of type 300.
	// <p>Corresponds to "VAST error 300 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_300_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_300_COUNT"

	//
	// Number of VAST video errors of type 301.
	// <p>Corresponds to "VAST error 301 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_301_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_301_COUNT"

	//
	// Number of VAST video errors of type 302.
	// <p>Corresponds to "VAST error 302 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_302_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_302_COUNT"

	//
	// Number of VAST video errors of type 303.
	// <p>Corresponds to "VAST error 303 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_303_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_303_COUNT"

	//
	// Number of VAST video errors of type 400.
	// <p>Corresponds to "VAST error 400 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_400_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_400_COUNT"

	//
	// Number of VAST video errors of type 401.
	// <p>Corresponds to "VAST error 401 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_401_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_401_COUNT"

	//
	// Number of VAST video errors of type 402.
	// <p>Corresponds to "VAST error 402 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_402_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_402_COUNT"

	//
	// Number of VAST video errors of type 403.
	// <p>Corresponds to "VAST error 403 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_403_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_403_COUNT"

	//
	// Number of VAST video errors of type 405.
	// <p>Corresponds to "VAST error 405 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_405_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_405_COUNT"

	//
	// Number of VAST video errors of type 500.
	// <p>Corresponds to "VAST error 500 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_500_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_500_COUNT"

	//
	// Number of VAST video errors of type 501.
	// <p>Corresponds to "VAST error 501 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_501_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_501_COUNT"

	//
	// Number of VAST video errors of type 502.
	// <p>Corresponds to "VAST error 502 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_502_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_502_COUNT"

	//
	// Number of VAST video errors of type 503.
	// <p>Corresponds to "VAST error 503 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_503_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_503_COUNT"

	//
	// Number of VAST video errors of type 600.
	// <p>Corresponds to "VAST error 600 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_600_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_600_COUNT"

	//
	// Number of VAST video errors of type 601.
	// <p>Corresponds to "VAST error 601 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_601_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_601_COUNT"

	//
	// Number of VAST video errors of type 602.
	// <p>Corresponds to "VAST error 602 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_602_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_602_COUNT"

	//
	// Number of VAST video errors of type 603.
	// <p>Corresponds to "VAST error 603 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_603_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_603_COUNT"

	//
	// Number of VAST video errors of type 604.
	// <p>Corresponds to "VAST error 604 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_604_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_604_COUNT"

	//
	// Number of VAST video errors of type 900.
	// <p>Corresponds to "VAST error 900 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_900_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_900_COUNT"

	//
	// Number of VAST video errors of type 901.
	// <p>Corresponds to "VAST error 901 count" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_ERRORS_VAST_ERROR_901_COUNT Column = "VIDEO_ERRORS_VAST_ERROR_901_COUNT"

	//
	// Video interaction event: The number of times user paused ad clip.
	// <p>Corresponds to "Pause" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_INTERACTION_PAUSE Column = "VIDEO_INTERACTION_PAUSE"

	//
	// Video interaction event: The number of times the user unpaused the video.
	// <p>Corresponds to "Resume" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_INTERACTION_RESUME Column = "VIDEO_INTERACTION_RESUME"

	//
	// Video interaction event: The number of times a user rewinds the video.
	// <p>Corresponds to "Rewind" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_INTERACTION_REWIND Column = "VIDEO_INTERACTION_REWIND"

	//
	// Video interaction event: The number of times video player was in mute state during play
	// of ad clip.
	// <p>Corresponds to "Mute" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_INTERACTION_MUTE Column = "VIDEO_INTERACTION_MUTE"

	//
	// Video interaction event: The number of times a user unmutes the video.
	// <p>Corresponds to "Unmute" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_INTERACTION_UNMUTE Column = "VIDEO_INTERACTION_UNMUTE"

	//
	// Video interaction event: The number of times a user collapses a video,
	// either to its original size or to a different size.
	// <p>Corresponds to "Collapse" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_INTERACTION_COLLAPSE Column = "VIDEO_INTERACTION_COLLAPSE"

	//
	// Video interaction event: The number of times a user expands a video.
	// <p>Corresponds to "Expand" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_INTERACTION_EXPAND Column = "VIDEO_INTERACTION_EXPAND"

	//
	// Video interaction event: The number of times ad clip played in full screen mode.
	// <p>Corresponds to "Full screen" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_INTERACTION_FULL_SCREEN Column = "VIDEO_INTERACTION_FULL_SCREEN"

	//
	// Video interaction event: The number of user interactions with a video, on average,
	// such as pause, full screen, mute, etc.
	// <p>Corresponds to "Average interaction rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_INTERACTION_AVERAGE_INTERACTION_RATE Column = "VIDEO_INTERACTION_AVERAGE_INTERACTION_RATE"

	//
	// Video interaction event: The number of times a skippable video is skipped.
	// <p>Corresponds to "Video skipped" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_INTERACTION_VIDEO_SKIPS Column = "VIDEO_INTERACTION_VIDEO_SKIPS"

	//
	// The number of control starts.
	// <p>Corresponds to "Control starts" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_CONTROL_STARTS Column = "VIDEO_OPTIMIZATION_CONTROL_STARTS"

	//
	// The number of optimized starts.
	// <p>Corresponds to "Optimized starts" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_OPTIMIZED_STARTS Column = "VIDEO_OPTIMIZATION_OPTIMIZED_STARTS"

	//
	// The number of control completes.
	// <p>Corresponds to "Control completes" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_CONTROL_COMPLETES Column = "VIDEO_OPTIMIZATION_CONTROL_COMPLETES"

	//
	// The number of optimized completes.
	// <p>Corresponds to "Optimized completes" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_OPTIMIZED_COMPLETES Column = "VIDEO_OPTIMIZATION_OPTIMIZED_COMPLETES"

	//
	// The rate of control completions.
	// <p>Corresponds to "Control completion rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_CONTROL_COMPLETION_RATE Column = "VIDEO_OPTIMIZATION_CONTROL_COMPLETION_RATE"

	//
	// The rate of optimized completions.
	// <p>Corresponds to "Optimized completion rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_OPTIMIZED_COMPLETION_RATE Column = "VIDEO_OPTIMIZATION_OPTIMIZED_COMPLETION_RATE"

	//
	// The percentage by which optimized completion rate is greater than the unoptimized completion
	// rate. This is calculated as (( {@link Column#VIDEO_OPTIMIZATION_OPTIMIZED_COMPLETION_RATE}/
	// {@link Column#VIDEO_OPTIMIZATION_CONTROL_COMPLETION_RATE}) - 1) * 100 for an ad for which the
	// optimization feature has been enabled.
	// <p>Corresponds to "Completion rate lift" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_COMPLETION_RATE_LIFT Column = "VIDEO_OPTIMIZATION_COMPLETION_RATE_LIFT"

	//
	// The number of control skip buttons shown.
	// <p>Corresponds to "Control skip button shown" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_CONTROL_SKIP_BUTTON_SHOWN Column = "VIDEO_OPTIMIZATION_CONTROL_SKIP_BUTTON_SHOWN"

	//
	// The number of optimized skip buttons shown.
	// <p>Corresponds to "Optimized skip button shown" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_OPTIMIZED_SKIP_BUTTON_SHOWN Column = "VIDEO_OPTIMIZATION_OPTIMIZED_SKIP_BUTTON_SHOWN"

	//
	// The number of control engaged views.
	// <p>Corresponds to "Control engaged view" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_CONTROL_ENGAGED_VIEW Column = "VIDEO_OPTIMIZATION_CONTROL_ENGAGED_VIEW"

	//
	// The number of optimized engaged views.
	// <p>Corresponds to "Optimized engaged view" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_OPTIMIZED_ENGAGED_VIEW Column = "VIDEO_OPTIMIZATION_OPTIMIZED_ENGAGED_VIEW"

	//
	// The control view-through rate.
	// <p>Corresponds to "Control view-through rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_CONTROL_VIEW_THROUGH_RATE Column = "VIDEO_OPTIMIZATION_CONTROL_VIEW_THROUGH_RATE"

	//
	// The optimized view-through rate.
	// <p>Corresponds to "Optimized view-through rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_OPTIMIZED_VIEW_THROUGH_RATE Column = "VIDEO_OPTIMIZATION_OPTIMIZED_VIEW_THROUGH_RATE"

	//
	// The percentage by which optimized view-through rate is greater than the unoptimized
	// view-through rate. This is calculated as (( {@link
	// Column#VIDEO_OPTIMIZATION_OPTIMIZED_VIEW_THROUGH_RATE}/ {@link
	// Column#VIDEO_OPTIMIZATION_CONTROL_VIEW_THROUGH_RATE}) - 1) * 100 for an ad for which the
	// optimization feature has been enabled.
	// <p>Corresponds to "View-through rate lift" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIDEO_OPTIMIZATION_VIEW_THROUGH_RATE_LIFT Column = "VIDEO_OPTIMIZATION_VIEW_THROUGH_RATE_LIFT"

	//
	// Total impressions from the Google Ad Manager server, AdSense, Ad Exchange, and yield group
	// partners.
	// <p>Corresponds to "Total impressions" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_IMPRESSIONS_REAL_TIME Column = "VIDEO_IMPRESSIONS_REAL_TIME"

	//
	// Total number of matched queries.
	// <p>Corresponds to "Total responses served" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_MATCHED_QUERIES_REAL_TIME Column = "VIDEO_MATCHED_QUERIES_REAL_TIME"

	//
	// Total number of unmatched queries.
	// <p>Corresponds to "Total unmatched ad requests" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_UNMATCHED_QUERIES_REAL_TIME Column = "VIDEO_UNMATCHED_QUERIES_REAL_TIME"

	//
	// Total number of ad requests.
	// <p>Corresponds to "Total ad requests" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_TOTAL_QUERIES_REAL_TIME Column = "VIDEO_TOTAL_QUERIES_REAL_TIME"

	//
	// Total number of creatives served.
	// <p>Corresponds to "Total creative serves" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_CREATIVE_SERVE_REAL_TIME Column = "VIDEO_CREATIVE_SERVE_REAL_TIME"

	//
	// Number of VAST video errors of type 100.
	// <p>Corresponds to "VAST error 100 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_100_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_100_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 101.
	// <p>Corresponds to "VAST error 101 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_101_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_101_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 102.
	// <p>Corresponds to "VAST error 102 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_102_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_102_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 200.
	// <p>Corresponds to "VAST error 200 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_200_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_200_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 201.
	// <p>Corresponds to "VAST error 201 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_201_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_201_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 202.
	// <p>Corresponds to "VAST error 202 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_202_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_202_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 203.
	// <p>Corresponds to "VAST error 203 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_203_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_203_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 300.
	// <p>Corresponds to "VAST error 300 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_300_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_300_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 301.
	// <p>Corresponds to "VAST error 301 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_301_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_301_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 302.
	// <p>Corresponds to "VAST error 302 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_302_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_302_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 303.
	// <p>Corresponds to "VAST error 303 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_303_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_303_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 400.
	// <p>Corresponds to "VAST error 400 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_400_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_400_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 401.
	// <p>Corresponds to "VAST error 401 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_401_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_401_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 402.
	// <p>Corresponds to "VAST error 402 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_402_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_402_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 403.
	// <p>Corresponds to "VAST error 403 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_403_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_403_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 405.
	// <p>Corresponds to "VAST error 405 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_405_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_405_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 500.
	// <p>Corresponds to "VAST error 500 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_500_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_500_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 501.
	// <p>Corresponds to "VAST error 501 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_501_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_501_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 502.
	// <p>Corresponds to "VAST error 502 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_502_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_502_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 503.
	// <p>Corresponds to "VAST error 503 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_503_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_503_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 600.
	// <p>Corresponds to "VAST error 600 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_600_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_600_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 601.
	// <p>Corresponds to "VAST error 601 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_601_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_601_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 602.
	// <p>Corresponds to "VAST error 602 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_602_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_602_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 603.
	// <p>Corresponds to "VAST error 603 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_603_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_603_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 604.
	// <p>Corresponds to "VAST error 604 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_604_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_604_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 900.
	// <p>Corresponds to "VAST error 900 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_900_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_900_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 901.
	// <p>Corresponds to "VAST error 901 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST3_ERROR_901_COUNT_REAL_TIME Column = "VIDEO_VAST3_ERROR_901_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 406.
	// <p>Corresponds to "VAST error 406 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST4_ERROR_406_COUNT_REAL_TIME Column = "VIDEO_VAST4_ERROR_406_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 407.
	// <p>Corresponds to "VAST error 407 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST4_ERROR_407_COUNT_REAL_TIME Column = "VIDEO_VAST4_ERROR_407_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 408.
	// <p>Corresponds to "VAST error 408 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST4_ERROR_408_COUNT_REAL_TIME Column = "VIDEO_VAST4_ERROR_408_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 409.
	// <p>Corresponds to "VAST error 409 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST4_ERROR_409_COUNT_REAL_TIME Column = "VIDEO_VAST4_ERROR_409_COUNT_REAL_TIME"

	//
	// Number of VAST video errors of type 410.
	// <p>Corresponds to "VAST error 410 count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST4_ERROR_410_COUNT_REAL_TIME Column = "VIDEO_VAST4_ERROR_410_COUNT_REAL_TIME"

	//
	// Number of total VAST video errors.
	// <p>Corresponds to "Total error count" in the Ad Manager UI. Compatible with the "Real-time video" report type.</p>
	//
	ColumnVIDEO_VAST_TOTAL_ERROR_COUNT_REAL_TIME Column = "VIDEO_VAST_TOTAL_ERROR_COUNT_REAL_TIME"

	//
	// The total number of impressions viewed on the user's screen.
	// <p>Corresponds to "Total Active View viewable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS Column = "TOTAL_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS"

	//
	// The total number of impressions that were sampled and measured by active view.
	// <p>Corresponds to "Total Active View measurable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS Column = "TOTAL_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS"

	//
	// The percentage of total impressions viewed on the user's screen (out of the total impressions
	// measurable by active view).
	//
	ColumnTOTAL_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE Column = "TOTAL_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE"

	//
	// Total number of impressions that were eligible to measure viewability.
	// <p>Corresponds to "Total Active View eligible impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS Column = "TOTAL_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS"

	//
	// The percentage of total impressions that were measurable by active view (out of all the total
	// impressions sampled for active view).
	// <p>Corresponds to "Total Active View % measurable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE Column = "TOTAL_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE"

	//
	// Active View total average time in seconds that specific impressions are reported as being
	// viewable.
	// <p>Corresponds to "Total Active View average viewable time (seconds)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME Column = "TOTAL_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME"

	//
	// The number of impressions delivered by the ad server viewed on the user's screen.
	// <p>Corresponds to "Ad server Active View viewable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS Column = "AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS"

	//
	// The number of impressions delivered by the ad server that were sampled, and measurable by
	// active view.
	// <p>Corresponds to "Ad server Active View measurable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS Column = "AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS"

	//
	// The percentage of impressions delivered by the ad server viewed on the user's screen (out of
	// the ad server impressions measurable by active view).
	// <p>Corresponds to "Ad server Active View % viewable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE Column = "AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE"

	//
	// Total number of impressions delivered by the ad server that were eligible to measure
	// viewability.
	// <p>Corresponds to "Ad server Active View eligible impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS Column = "AD_SERVER_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS"

	//
	// The percentage of impressions delivered by the ad server that were measurable by active view (
	// out of all the ad server impressions sampled for active view).
	// <p>Corresponds to "Ad server Active View % measurable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE Column = "AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE"

	//
	// Active View ad server revenue.
	// <p>Corresponds to "Ad server Active View revenue" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_ACTIVE_VIEW_REVENUE Column = "AD_SERVER_ACTIVE_VIEW_REVENUE"

	//
	// Active View ad server average time in seconds that specific impressions are reported as being
	// viewable.
	// <p>Corresponds to "Ad server Active View average viewable time (seconds)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_SERVER_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME Column = "AD_SERVER_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME"

	//
	// The number of impressions delivered by AdSense viewed on the user's screen,
	// <p>Corresponds to "AdSense Active View viewable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS Column = "ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS"

	//
	// The number of impressions delivered by AdSense that were sampled, and measurable by active
	// view.
	// <p>Corresponds to "AdSense Active View measurable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS Column = "ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS"

	//
	// The percentage of impressions delivered by AdSense viewed on the user's screen (out of AdSense
	// impressions measurable by active view).
	// <p>Corresponds to "AdSense Active View % viewable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE Column = "ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE"

	//
	// Total number of impressions delivered by AdSense that were eligible to measure viewability.
	// <p>Corresponds to "AdSense Active View eligible impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS Column = "ADSENSE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS"

	//
	// The percentage of impressions delivered by AdSense that were measurable by active view ( out of
	// all AdSense impressions sampled for active view).
	// <p>Corresponds to "AdSense Active View % measurable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE Column = "ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE"

	//
	// Active View AdSense average time in seconds that specific impressions are reported as being
	// viewable.
	// <p>Corresponds to "AdSense Active View average viewable time (seconds)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnADSENSE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME Column = "ADSENSE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME"

	//
	// The number of impressions delivered by Ad Exchange viewed on the user's screen,
	// <p>Corresponds to "Ad Exchange Active View viewable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS Column = "AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS"

	//
	// The number of impressions delivered by Ad Exchange that were sampled, and measurable by active
	// view.
	// <p>Corresponds to "Ad Exchange Active View measurable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS Column = "AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS"

	//
	// The percentage of impressions delivered by Ad Exchange viewed on the user's screen (out of Ad
	// Exchange impressions measurable by active view).
	// <p>Corresponds to "Ad Exchange Active View % viewable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE Column = "AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE"

	//
	// Total number of impressions delivered by Ad Exchange that were eligible to measure viewability.
	// <p>Corresponds to "Ad Exchange Active View eligible impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS Column = "AD_EXCHANGE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS"

	//
	// The percentage of impressions delivered by Ad Exchange that were measurable by active view (
	// out of all Ad Exchange impressions sampled for active view).
	// <p>Corresponds to "Ad Exchange Active View % measurable impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE Column = "AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE"

	//
	// Active View AdExchange average time in seconds that specific impressions are reported as being
	// viewable.
	// <p>Corresponds to "Ad Exchange Active View average viewable time (seconds)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME Column = "AD_EXCHANGE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME"

	//
	// The total number of queries sent to Ad Exchange.
	// <p>Corresponds to "Ad Exchange ad requests" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_TOTAL_REQUESTS Column = "AD_EXCHANGE_TOTAL_REQUESTS"

	//
	// The fraction of Ad Exchange queries that result in a matched query. Also known as "Coverage".
	// <p>Corresponds to "Ad Exchange match rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_MATCH_RATE Column = "AD_EXCHANGE_MATCH_RATE"

	//
	// The amount earned per click on Ad Exchange.
	// <p>Corresponds to "Ad Exchange CPC" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_COST_PER_CLICK Column = "AD_EXCHANGE_COST_PER_CLICK"

	//
	// The fraction of Ad Exchange requests that result in a click.
	// <p>Corresponds to "Ad Exchange ad request CTR" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_TOTAL_REQUEST_CTR Column = "AD_EXCHANGE_TOTAL_REQUEST_CTR"

	//
	// The fraction of Ad Exchange matched requests that result in a click.
	// <p>Corresponds to "Ad Exchange matched request CTR" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_MATCHED_REQUEST_CTR Column = "AD_EXCHANGE_MATCHED_REQUEST_CTR"

	//
	// The amount earned per thousand Ad Exchange requests.
	// <p>Corresponds to "Ad Exchange ad request eCPM" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_TOTAL_REQUEST_ECPM Column = "AD_EXCHANGE_TOTAL_REQUEST_ECPM"

	//
	// The amount earned per thousand Ad Exchange matched requests.
	// <p>Corresponds to "Ad Exchange matched request eCPM" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_MATCHED_REQUEST_ECPM Column = "AD_EXCHANGE_MATCHED_REQUEST_ECPM"

	//
	// The increase in Ad Exchange revenue gained for won impressions over the applicable minimum CPM
	// or the best price specified during dynamic allocation.
	// <p>Corresponds to "Ad Exchange lift" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnAD_EXCHANGE_LIFT_EARNINGS Column = "AD_EXCHANGE_LIFT_EARNINGS"

	//
	// Active View total revenue.
	// <p>Corresponds to "Total Active View revenue" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_ACTIVE_VIEW_REVENUE Column = "TOTAL_ACTIVE_VIEW_REVENUE"

	//
	// Number of view-through conversions.
	//
	ColumnVIEW_THROUGH_CONVERSIONS Column = "VIEW_THROUGH_CONVERSIONS"

	//
	// Number of view-through conversions per thousand impressions.
	// <p>Corresponds to "Conversions per thousand impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnCONVERSIONS_PER_THOUSAND_IMPRESSIONS Column = "CONVERSIONS_PER_THOUSAND_IMPRESSIONS"

	//
	// Number of click-through conversions.
	// <p>Corresponds to "Click-through conversions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnCLICK_THROUGH_CONVERSIONS Column = "CLICK_THROUGH_CONVERSIONS"

	//
	// Number of click-through conversions per click.
	// <p>Corresponds to "Conversions per click" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnCONVERSIONS_PER_CLICK Column = "CONVERSIONS_PER_CLICK"

	//
	// Revenue for view-through conversions.
	// <p>Corresponds to "Advertiser view-through sales" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnVIEW_THROUGH_REVENUE Column = "VIEW_THROUGH_REVENUE"

	//
	// Revenue for click-through conversions.
	// <p>Corresponds to "Advertiser click-through sales" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnCLICK_THROUGH_REVENUE Column = "CLICK_THROUGH_REVENUE"

	//
	// Total number of conversions.
	// <p>Corresponds to "Total conversions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_CONVERSIONS Column = "TOTAL_CONVERSIONS"

	//
	// Total revenue for conversions.
	// <p>Corresponds to "Total advertiser sales" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnTOTAL_CONVERSION_REVENUE Column = "TOTAL_CONVERSION_REVENUE"

	//
	// The number of impressions sent to Ad Exchange / AdSense, regardless of whether they
	// won or lost (total number of dynamic allocation impressions).
	// <p>Corresponds to "Impressions competing" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnDYNAMIC_ALLOCATION_OPPORTUNITY_IMPRESSIONS_COMPETING_TOTAL Column = "DYNAMIC_ALLOCATION_OPPORTUNITY_IMPRESSIONS_COMPETING_TOTAL"

	//
	// The number of unfilled queries that attempted dynamic allocation by Ad Exchange / AdSense.
	// <p>Corresponds to "Unfilled competing impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnDYNAMIC_ALLOCATION_OPPORTUNITY_UNFILLED_IMPRESSIONS_COMPETING Column = "DYNAMIC_ALLOCATION_OPPORTUNITY_UNFILLED_IMPRESSIONS_COMPETING"

	//
	// The number of Ad Exchange / AdSense and Ad Manager impressions.
	// <p>Corresponds to "Eligible impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnDYNAMIC_ALLOCATION_OPPORTUNITY_ELIGIBLE_IMPRESSIONS_TOTAL Column = "DYNAMIC_ALLOCATION_OPPORTUNITY_ELIGIBLE_IMPRESSIONS_TOTAL"

	//
	// The difference between eligible impressions and competing impressions in dynamic allocation.
	//
	ColumnDYNAMIC_ALLOCATION_OPPORTUNITY_IMPRESSIONS_NOT_COMPETING_TOTAL Column = "DYNAMIC_ALLOCATION_OPPORTUNITY_IMPRESSIONS_NOT_COMPETING_TOTAL"

	//
	// The percentage of eligible impressions that are not competing in dynamic allocation.
	// <p>Corresponds to "Impressions not competing (%)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnDYNAMIC_ALLOCATION_OPPORTUNITY_IMPRESSIONS_NOT_COMPETING_PERCENT_TOTAL Column = "DYNAMIC_ALLOCATION_OPPORTUNITY_IMPRESSIONS_NOT_COMPETING_PERCENT_TOTAL"

	//
	// The percent of eligible impressions participating in dynamic allocation.
	//
	ColumnDYNAMIC_ALLOCATION_OPPORTUNITY_SATURATION_RATE_TOTAL Column = "DYNAMIC_ALLOCATION_OPPORTUNITY_SATURATION_RATE_TOTAL"

	//
	// The percent of total dynamic allocation queries that won.
	// <p>Corresponds to "Dynamic allocation match rate" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnDYNAMIC_ALLOCATION_OPPORTUNITY_MATCH_RATE_TOTAL Column = "DYNAMIC_ALLOCATION_OPPORTUNITY_MATCH_RATE_TOTAL"

	//
	// The number of invoiced impressions.
	// <p>Corresponds to "Invoiced impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnINVOICED_IMPRESSIONS Column = "INVOICED_IMPRESSIONS"

	//
	// The number of invoiced unfilled impressions.
	// <p>Corresponds to "Invoiced unfilled impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnINVOICED_UNFILLED_IMPRESSIONS Column = "INVOICED_UNFILLED_IMPRESSIONS"

	//
	// The total number of impressions tracked for Nielsen Digital Ad Ratings measurement.
	// <p>Corresponds to "Impressions" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IMPRESSIONS Column = "NIELSEN_IMPRESSIONS"

	//
	// The total number of impressions for in-target demographic tracked for Nielsen Digital Ad
	// Ratings measurement.
	// <p>Corresponds to "In-target impressions" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IN_TARGET_IMPRESSIONS Column = "NIELSEN_IN_TARGET_IMPRESSIONS"

	//
	// The population in the demographic.
	// <p>Corresponds to "Population base" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_POPULATION_BASE Column = "NIELSEN_POPULATION_BASE"

	//
	// The total population for all in-target demographics.
	// <p>Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IN_TARGET_POPULATION_BASE Column = "NIELSEN_IN_TARGET_POPULATION_BASE"

	//
	// The total number of different people within the selected demographic who were reached.
	// <p>Corresponds to "Unique audience" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_UNIQUE_AUDIENCE Column = "NIELSEN_UNIQUE_AUDIENCE"

	//
	// The total number of different people within all in-target demographics who were reached.
	// <p>Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IN_TARGET_UNIQUE_AUDIENCE Column = "NIELSEN_IN_TARGET_UNIQUE_AUDIENCE"

	//
	// The unique audience reached as a percentage of the population base.
	// <p>Corresponds to "% audience reach" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_PERCENT_AUDIENCE_REACH Column = "NIELSEN_PERCENT_AUDIENCE_REACH"

	//
	// The unique audience reached as a percentage of the population base for all in-target
	// demographics.
	// <p>Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IN_TARGET_PERCENT_AUDIENCE_REACH Column = "NIELSEN_IN_TARGET_PERCENT_AUDIENCE_REACH"

	//
	// The average number of times that a person within the target audience sees an advertisement.
	// <p>Corresponds to "Average frequency" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_AVERAGE_FREQUENCY Column = "NIELSEN_AVERAGE_FREQUENCY"

	//
	// The average number of times that a person within the target audience sees an advertisement
	// for all in-target demographics.
	// <p>Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IN_TARGET_AVERAGE_FREQUENCY Column = "NIELSEN_IN_TARGET_AVERAGE_FREQUENCY"

	//
	// The unit of audience volume, which is based on the percentage of the reached target audience
	// population multiplied by the average frequency.
	// <p>Corresponds to "Gross rating points" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_GROSS_RATING_POINTS Column = "NIELSEN_GROSS_RATING_POINTS"

	//
	// The unit of audience volume, which is based on the percentage of the reached target audience
	// population multiplied by the average frequency, for all in-target demographics.
	// <p>Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IN_TARGET_GROSS_RATING_POINTS Column = "NIELSEN_IN_TARGET_GROSS_RATING_POINTS"

	//
	// The share of impressions that reached the target demographic.
	// <p>Corresponds to "% impression share" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_PERCENT_IMPRESSIONS_SHARE Column = "NIELSEN_PERCENT_IMPRESSIONS_SHARE"

	//
	// The share of impressions that reached all in-target demographics.
	// <p>Corresponds to "In-target % impression share" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IN_TARGET_PERCENT_IMPRESSIONS_SHARE Column = "NIELSEN_IN_TARGET_PERCENT_IMPRESSIONS_SHARE"

	//
	// The share of the total population represented by the population base.
	// <p>Corresponds to "% population share" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_PERCENT_POPULATION_SHARE Column = "NIELSEN_PERCENT_POPULATION_SHARE"

	//
	// The share of the total population for all in-target demographics represented by the
	// population base.
	// <p>Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IN_TARGET_PERCENT_POPULATION_SHARE Column = "NIELSEN_IN_TARGET_PERCENT_POPULATION_SHARE"

	//
	// The share of the unique audience in the demographic.
	// <p>Corresponds to "% audience share" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_PERCENT_AUDIENCE_SHARE Column = "NIELSEN_PERCENT_AUDIENCE_SHARE"

	//
	// The share of the unique audience for all in-target demographics.
	// <p>Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IN_TARGET_PERCENT_AUDIENCE_SHARE Column = "NIELSEN_IN_TARGET_PERCENT_AUDIENCE_SHARE"

	//
	// The relative unique audience in the demographic compared with its share of the overall
	// population.
	// <p>Corresponds to "Audience index" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_AUDIENCE_INDEX Column = "NIELSEN_AUDIENCE_INDEX"

	//
	// The relative unique audience for all in-target demographics compared with its share of the
	// overall population.
	// <p>Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IN_TARGET_AUDIENCE_INDEX Column = "NIELSEN_IN_TARGET_AUDIENCE_INDEX"

	//
	// The relative impressions per person in the demographic compared with the impressions per person
	// for the overall population.
	// <p>Corresponds to "Impressions index" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IMPRESSIONS_INDEX Column = "NIELSEN_IMPRESSIONS_INDEX"

	//
	// The relative impressions per person for all in-target demographics compared with the
	// impressions per person for the overall population.
	// <p>Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IN_TARGET_IMPRESSIONS_INDEX Column = "NIELSEN_IN_TARGET_IMPRESSIONS_INDEX"

	//
	// The adjusted in-target impression share used for pacing and billing, based on the GRP pacing
	// preferences indicated in your line item settings.
	// <p>Corresponds to "Processed Nielsen in-target rate" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	ColumnNIELSEN_IN_TARGET_RATIO Column = "NIELSEN_IN_TARGET_RATIO"

	//
	// Number of impressions delivered.
	// <p>Corresponds to "Impressions" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	ColumnDP_IMPRESSIONS Column = "DP_IMPRESSIONS"

	//
	// Number of clicks delivered
	// <p>Corresponds to "Clicks" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	ColumnDP_CLICKS Column = "DP_CLICKS"

	//
	// Number of requests.
	// <p>Corresponds to "Queries" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	ColumnDP_QUERIES Column = "DP_QUERIES"

	//
	// Number of requests where a buyer was matched with the Ad request.
	// <p>Corresponds to "Matched queries" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	ColumnDP_MATCHED_QUERIES Column = "DP_MATCHED_QUERIES"

	//
	// The revenue earned, calculated in publisher currency, for the ads delivered.
	// <p>Corresponds to "Cost" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	ColumnDP_COST Column = "DP_COST"

	//
	// The average estimated cost-per-thousand-impressions earned from ads delivered.
	// <p>Corresponds to "Total Average eCPM" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	ColumnDP_ECPM Column = "DP_ECPM"

	//
	// Total number of impressions delivered by the ad server that were eligible to measure
	// viewability.
	// <p>Corresponds to "Total Active View eligible impressions" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	ColumnDP_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS Column = "DP_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS"

	//
	// The number of impressions delivered that were sampled and measurable by active view.
	// <p>Corresponds to "Total Active View measurable impressions" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	ColumnDP_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS Column = "DP_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS"

	//
	// The number of impressions delivered that were viewed on the user's screen.
	// <p>Corresponds to "Total Active View viewable impressions" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	ColumnDP_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS Column = "DP_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS"

	//
	// The percentage of impressions delivered that were measurable by active view (out of all the
	// impressions sampled for active view).
	// <p>Corresponds to "Total Active View % measurable impressions" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	ColumnDP_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE Column = "DP_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE"

	//
	// The percentage of impressions delivered thar were viewed on the user's screen (out of the
	// impressions measurable by active view).
	// <p>Corresponds to "Total Active View % viewable impressions" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	ColumnDP_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE Column = "DP_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE"

	//
	// The host impressions in the partner management.
	// <p>Corresponds to "Host impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnPARTNER_MANAGEMENT_HOST_IMPRESSIONS Column = "PARTNER_MANAGEMENT_HOST_IMPRESSIONS"

	//
	// The host clicks in the partner management.
	// <p>Corresponds to "Host clicks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnPARTNER_MANAGEMENT_HOST_CLICKS Column = "PARTNER_MANAGEMENT_HOST_CLICKS"

	//
	// The host CTR in the partner management.
	// <p>Corresponds to "Host CTR" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnPARTNER_MANAGEMENT_HOST_CTR Column = "PARTNER_MANAGEMENT_HOST_CTR"

	//
	// The unfilled impressions in the partner management.
	// <p>Corresponds to "Unfilled impressions" in the Ad Manager UI. Compatible with any of the following report types: Historical, Partner finance.</p>
	//
	ColumnPARTNER_MANAGEMENT_UNFILLED_IMPRESSIONS Column = "PARTNER_MANAGEMENT_UNFILLED_IMPRESSIONS"

	//
	// The partner impressions in the partner management.
	// <p>Corresponds to "Partner impressions" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnPARTNER_MANAGEMENT_PARTNER_IMPRESSIONS Column = "PARTNER_MANAGEMENT_PARTNER_IMPRESSIONS"

	//
	// The partner clicks in the partner management.
	// <p>Corresponds to "Partner clicks" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnPARTNER_MANAGEMENT_PARTNER_CLICKS Column = "PARTNER_MANAGEMENT_PARTNER_CLICKS"

	//
	// The partner CTR in the partner management.
	// <p>Corresponds to "Partner CTR" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnPARTNER_MANAGEMENT_PARTNER_CTR Column = "PARTNER_MANAGEMENT_PARTNER_CTR"

	//
	// The gross revenue in the partner management.
	// <p>Corresponds to "Gross revenue" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	ColumnPARTNER_MANAGEMENT_GROSS_REVENUE Column = "PARTNER_MANAGEMENT_GROSS_REVENUE"

	//
	// Monthly host impressions for partner finance reports.
	// <p>Corresponds to "Host impressions" in the Ad Manager UI. Compatible with the "Partner finance" report type.</p>
	//
	ColumnPARTNER_FINANCE_HOST_IMPRESSIONS Column = "PARTNER_FINANCE_HOST_IMPRESSIONS"

	//
	// Monthly host revenue for partner finance reports.
	// <p>Corresponds to "Host revenue" in the Ad Manager UI. Compatible with the "Partner finance" report type.</p>
	//
	ColumnPARTNER_FINANCE_HOST_REVENUE Column = "PARTNER_FINANCE_HOST_REVENUE"

	//
	// Monthly host eCPM for partner finance reports.
	// <p>Corresponds to "Host eCPM" in the Ad Manager UI. Compatible with the "Partner finance" report type.</p>
	//
	ColumnPARTNER_FINANCE_HOST_ECPM Column = "PARTNER_FINANCE_HOST_ECPM"

	//
	// Monthly partner revenue for partner finance reports.
	// <p>Corresponds to "Partner revenue" in the Ad Manager UI. Compatible with the "Partner finance" report type.</p>
	//
	ColumnPARTNER_FINANCE_PARTNER_REVENUE Column = "PARTNER_FINANCE_PARTNER_REVENUE"

	//
	// Monthly partner eCPM for partner finance reports.
	// <p>Corresponds to "Partner eCPM" in the Ad Manager UI. Compatible with the "Partner finance" report type.</p>
	//
	ColumnPARTNER_FINANCE_PARTNER_ECPM Column = "PARTNER_FINANCE_PARTNER_ECPM"

	//
	// Monthly gross revenue for partner finance reports.
	// <p>Corresponds to "Gross revenue" in the Ad Manager UI. Compatible with the "Partner finance" report type.</p>
	//
	ColumnPARTNER_FINANCE_GROSS_REVENUE Column = "PARTNER_FINANCE_GROSS_REVENUE"

	//
	// The ratio of the number of impressions for which the creative load time is between 0 and 500 ms
	// to the total number of impressions that have ad latency data, represented as a percentage.
	// <p>Corresponds to "Creative load time 0 - 500ms (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnCREATIVE_LOAD_TIME_0_500_MS_PERCENT Column = "CREATIVE_LOAD_TIME_0_500_MS_PERCENT"

	//
	// The ratio of the number of impressions for which the creative load time is between 500
	// milliseconds and 1 second to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Creative load time 500ms - 1s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnCREATIVE_LOAD_TIME_500_1000_MS_PERCENT Column = "CREATIVE_LOAD_TIME_500_1000_MS_PERCENT"

	//
	// The ratio of the number of impressions for which the creative load time is between 1 second and
	// 2 seconds to the total number of impressions that have ad latency data, represented as a
	// percentage.
	// <p>Corresponds to "Creative load time 1s - 2s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnCREATIVE_LOAD_TIME_1_2_S_PERCENT Column = "CREATIVE_LOAD_TIME_1_2_S_PERCENT"

	//
	// The ratio of the number of impressions for which the creative load time is between 2 seconds
	// and 4 seconds to the total number of impressions that have ad latency data, represented as a
	// percentage.
	// <p>Corresponds to "Creative load time 2s - 4s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnCREATIVE_LOAD_TIME_2_4_S_PERCENT Column = "CREATIVE_LOAD_TIME_2_4_S_PERCENT"

	//
	// The ratio of the number of impressions for which the creative load time is between 4 seconds
	// and 8 seconds to the total number of impressions that have ad latency data, represented as a
	// percentage.
	// <p>Corresponds to "Creative load time 4s - 8s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnCREATIVE_LOAD_TIME_4_8_S_PERCENT Column = "CREATIVE_LOAD_TIME_4_8_S_PERCENT"

	//
	// The ratio of the number of impressions for which the creative load time is greater than 8
	// seconds to the total number of impressions that have ad latency data, represented as a
	// percentage.
	// <p>Corresponds to "Creative load time >8s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnCREATIVE_LOAD_TIME_GREATER_THAN_8_S_PERCENT Column = "CREATIVE_LOAD_TIME_GREATER_THAN_8_S_PERCENT"

	//
	// The ratio of the number of impressions which are unviewed because the ad slot never
	// entered the viewport to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Slot never entered viewport (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnUNVIEWED_REASON_SLOT_NEVER_ENTERED_VIEWPORT_PERCENT Column = "UNVIEWED_REASON_SLOT_NEVER_ENTERED_VIEWPORT_PERCENT"

	//
	// The ratio of the number of impressions which are unviewed because the user scrolled before
	// the ad filled to the total number of impressions that have ad latency data, represented as a
	// percentage.
	// <p>Corresponds to "User scrolled before ad filled (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnUNVIEWED_REASON_USER_SCROLLED_BEFORE_AD_FILLED_PERCENT Column = "UNVIEWED_REASON_USER_SCROLLED_BEFORE_AD_FILLED_PERCENT"

	//
	// The ratio of the number of impressions which are unviewed because the user scrolled or
	// navigated before the ad loaded to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "User scrolled/navigated before ad loaded (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnUNVIEWED_REASON_USER_SCROLLED_BEFORE_AD_LOADED_PERCENT Column = "UNVIEWED_REASON_USER_SCROLLED_BEFORE_AD_LOADED_PERCENT"

	//
	// The ratio of the number of impressions which are unviewed because the user scrolled or
	// navigated before one second to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "User scrolled/navigated before 1 second (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnUNVIEWED_REASON_USER_SCROLLED_BEFORE_1_S_PERCENT Column = "UNVIEWED_REASON_USER_SCROLLED_BEFORE_1_S_PERCENT"

	//
	// The ratio of the number of impressions which are unviewed because the of another
	// non-viewable-impression reason to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Other non-viewable impression reasons (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnUNVIEWED_REASON_OTHER_PERCENT Column = "UNVIEWED_REASON_OTHER_PERCENT"

	//
	// The ratio of the number of impressions for which the DOM load to tag log time is between 0 and
	// 500 milliseconds to the total number of impressions that have ad latency data, represented as a
	// percentage.
	// <p>Corresponds to "Page navigation to tag loaded time 0 - 500ms (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnPAGE_NAVIGATION_TO_TAG_LOADED_TIME_0_500_MS_PERCENT Column = "PAGE_NAVIGATION_TO_TAG_LOADED_TIME_0_500_MS_PERCENT"

	//
	// The ratio of the number of impressions for which the DOM load to tag log time is between 500
	// milliseconds and 1 second to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Page navigation to tag loaded time 500ms - 1s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnPAGE_NAVIGATION_TO_TAG_LOADED_TIME_500_1000_MS_PERCENT Column = "PAGE_NAVIGATION_TO_TAG_LOADED_TIME_500_1000_MS_PERCENT"

	//
	// The ratio of the number of impressions for which the DOM load to tag log time is between 1
	// second and 2 seconds to the total number of impressions that have ad latency data, represented
	// as a percentage.
	// <p>Corresponds to "Page navigation to tag loaded time 1s - 2s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnPAGE_NAVIGATION_TO_TAG_LOADED_TIME_1_2_S_PERCENT Column = "PAGE_NAVIGATION_TO_TAG_LOADED_TIME_1_2_S_PERCENT"

	//
	// The ratio of the number of impressions for which the DOM load to tag log time is between 2
	// seconds and 4 seconds to the total number of impressions that have ad latency data, represented
	// as a percentage.
	// <p>Corresponds to "Page navigation to tag loaded time 2s - 4s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnPAGE_NAVIGATION_TO_TAG_LOADED_TIME_2_4_S_PERCENT Column = "PAGE_NAVIGATION_TO_TAG_LOADED_TIME_2_4_S_PERCENT"

	//
	// The ratio of the number of impressions for which the DOM load to tag log time is between 4
	// seconds and 8 seconds to the total number of impressions that have ad latency data, represented
	// as a percentage.
	// <p>Corresponds to "Page navigation to tag loaded time 4s - 8s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnPAGE_NAVIGATION_TO_TAG_LOADED_TIME_4_8_S_PERCENT Column = "PAGE_NAVIGATION_TO_TAG_LOADED_TIME_4_8_S_PERCENT"

	//
	// The ratio of the number of impressions for which the DOM load to tag log time is greater than 8
	// seconds to the total number of impressions that have ad latency data, represented as a
	// percentage.
	// <p>Corresponds to "Page navigation to tag loaded time >8s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnPAGE_NAVIGATION_TO_TAG_LOADED_TIME_GREATER_THAN_8_S_PERCENT Column = "PAGE_NAVIGATION_TO_TAG_LOADED_TIME_GREATER_THAN_8_S_PERCENT"

	//
	// The ratio of the number of impressions for which the DOM load to first ad request time is
	// between 0 and 500 milliseconds to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Page navigation to first ad request time 0 - 500ms (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnPAGE_NAVIGATION_TO_FIRST_AD_REQUEST_TIME_0_500_MS_PERCENT Column = "PAGE_NAVIGATION_TO_FIRST_AD_REQUEST_TIME_0_500_MS_PERCENT"

	//
	// The ratio of the number of impressions for which the DOM load to first ad request time is
	// between 500 milliseconds and 1 second to the total number of impressions that have ad latency
	// data, represented as a percentage.
	// <p>Corresponds to "Page navigation to first ad request time 500ms - 1s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnPAGE_NAVIGATION_TO_FIRST_AD_REQUEST_TIME_500_1000_MS_PERCENT Column = "PAGE_NAVIGATION_TO_FIRST_AD_REQUEST_TIME_500_1000_MS_PERCENT"

	//
	// The ratio of the number of impressions for which the DOM load to first ad request time is
	// between 1 second and 2 seconds to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Page navigation to first ad request time 1s - 2s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnPAGE_NAVIGATION_TO_FIRST_AD_REQUEST_TIME_1_2_S_PERCENT Column = "PAGE_NAVIGATION_TO_FIRST_AD_REQUEST_TIME_1_2_S_PERCENT"

	//
	// The ratio of the number of impressions for which the DOM load to first ad request time is
	// between 2 seconds and 4 seconds to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Page navigation to first ad request time 2s - 4s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnPAGE_NAVIGATION_TO_FIRST_AD_REQUEST_TIME_2_4_S_PERCENT Column = "PAGE_NAVIGATION_TO_FIRST_AD_REQUEST_TIME_2_4_S_PERCENT"

	//
	// The ratio of the number of impressions for which the DOM load to first ad request time is
	// between 4 seconds and 8 seconds to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Page navigation to first ad request time 4s - 8s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnPAGE_NAVIGATION_TO_FIRST_AD_REQUEST_TIME_4_8_S_PERCENT Column = "PAGE_NAVIGATION_TO_FIRST_AD_REQUEST_TIME_4_8_S_PERCENT"

	//
	// The ratio of the number of impressions for which the DOM load to first ad request time is
	// greater than 8 seconds to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Page navigation to first ad request time >8s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnPAGE_NAVIGATION_TO_FIRST_AD_REQUEST_TIME_GREATER_THAN_8_S_PERCENT Column = "PAGE_NAVIGATION_TO_FIRST_AD_REQUEST_TIME_GREATER_THAN_8_S_PERCENT"

	//
	// The ratio of the number of impressions for which the tag load to first ad request time is
	// between 0 and 500 milliseconds to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Tag loaded to first ad request time 0 - 500ms (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnTAG_LOAD_TO_FIRST_AD_REQUEST_TIME_0_500_MS_PERCENT Column = "TAG_LOAD_TO_FIRST_AD_REQUEST_TIME_0_500_MS_PERCENT"

	//
	// The ratio of the number of impressions for which the tag load to first ad request time is
	// between 500 milliseconds and 1 second to the total number of impressions that have ad latency
	// data, represented as a percentage.
	// <p>Corresponds to "Tag loaded to first ad request time 500ms - 1s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnTAG_LOAD_TO_FIRST_AD_REQUEST_TIME_500_1000_MS_PERCENT Column = "TAG_LOAD_TO_FIRST_AD_REQUEST_TIME_500_1000_MS_PERCENT"

	//
	// The ratio of the number of impressions for which the tag load to first ad request time is
	// between 1 second and 2 seconds to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Tag loaded to first ad request time 1s - 2s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnTAG_LOAD_TO_FIRST_AD_REQUEST_TIME_1_2_S_PERCENT Column = "TAG_LOAD_TO_FIRST_AD_REQUEST_TIME_1_2_S_PERCENT"

	//
	// The ratio of the number of impressions for which the tag load to first ad request time is
	// between 2 seconds and 4 seconds to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Tag loaded to first ad request time 2s - 4s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnTAG_LOAD_TO_FIRST_AD_REQUEST_TIME_2_4_S_PERCENT Column = "TAG_LOAD_TO_FIRST_AD_REQUEST_TIME_2_4_S_PERCENT"

	//
	// The ratio of the number of impressions for which the tag load to first ad request time is
	// between 4 seconds and 8 seconds to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Tag loaded to first ad request time 4s - 8s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnTAG_LOAD_TO_FIRST_AD_REQUEST_TIME_4_8_S_PERCENT Column = "TAG_LOAD_TO_FIRST_AD_REQUEST_TIME_4_8_S_PERCENT"

	//
	// The ratio of the number of impressions for which the tag load to first ad request time is
	// greater than 8 seconds to the total number of impressions that have ad latency data,
	// represented as a percentage.
	// <p>Corresponds to "Tag loaded to first ad request time >8s (%)" in the Ad Manager UI. Compatible with the "Ad speed" report type.</p>
	//
	ColumnTAG_LOAD_TO_FIRST_AD_REQUEST_TIME_GREATER_THAN_8_S_PERCENT Column = "TAG_LOAD_TO_FIRST_AD_REQUEST_TIME_GREATER_THAN_8_S_PERCENT"
)

//
// Describes reasons for common errors
//

type CommonError_Reason string

const (

	//
	// Indicates that an attempt was made to retrieve an entity that does not
	// exist.
	//
	CommonError_ReasonNOT_FOUND CommonError_Reason = "NOT_FOUND"

	//
	// Indicates that an attempt was made to create an entity that already
	// exists.
	//
	CommonError_ReasonALREADY_EXISTS CommonError_Reason = "ALREADY_EXISTS"

	//
	// Indicates that a value is not applicable for given use case.
	//
	CommonError_ReasonNOT_APPLICABLE CommonError_Reason = "NOT_APPLICABLE"

	//
	// Indicates that two elements in the collection were identical.
	//
	CommonError_ReasonDUPLICATE_OBJECT CommonError_Reason = "DUPLICATE_OBJECT"

	//
	// Indicates that an attempt was made to change an immutable field.
	//
	CommonError_ReasonCANNOT_UPDATE CommonError_Reason = "CANNOT_UPDATE"

	//
	// Indicates that the requested operation is not supported.
	//
	CommonError_ReasonUNSUPPORTED_OPERATION CommonError_Reason = "UNSUPPORTED_OPERATION"

	//
	// Indicates that another request attempted to update the same data in the same network
	// at about the same time. Please wait and try the request again.
	//
	CommonError_ReasonCONCURRENT_MODIFICATION CommonError_Reason = "CONCURRENT_MODIFICATION"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	CommonError_ReasonUNKNOWN CommonError_Reason = "UNKNOWN"
)

//
// The reason behind the currency code error.
//

type CurrencyCodeError_Reason string

const (

	//
	// The currency code is invalid and does not follow ISO 4217.
	//
	CurrencyCodeError_ReasonINVALID CurrencyCodeError_Reason = "INVALID"

	//
	// The currency code is valid, but is not supported.
	//
	CurrencyCodeError_ReasonUNSUPPORTED CurrencyCodeError_Reason = "UNSUPPORTED"

	//
	// The currency has been used for entity creation after its deprecation
	//
	CurrencyCodeError_ReasonDEPRECATED_CURRENCY_USED CurrencyCodeError_Reason = "DEPRECATED_CURRENCY_USED"
)

//
// Represents a period of time.
//

type DateRangeType string

const (

	//
	// The current day.
	//
	DateRangeTypeTODAY DateRangeType = "TODAY"

	//
	// The previous day.
	//
	DateRangeTypeYESTERDAY DateRangeType = "YESTERDAY"

	//
	// The last week, from monday to sunday.
	//
	DateRangeTypeLAST_WEEK DateRangeType = "LAST_WEEK"

	//
	// The previous month.
	//
	DateRangeTypeLAST_MONTH DateRangeType = "LAST_MONTH"

	//
	// The last 3 full months. For example, if today is May 5, 2017, then LAST_3_MONTHS would go from
	// February 1 to April 30.
	//
	DateRangeTypeLAST_3_MONTHS DateRangeType = "LAST_3_MONTHS"

	//
	// This will report on the last 93 days for the following columns: {@link
	// Column#UNIQUE_REACH_IMPRESSIONS}, {@link Column#UNIQUE_REACH_FREQUENCY}, and {@link
	// Column#UNIQUE_REACH}.
	//
	DateRangeTypeREACH_LIFETIME DateRangeType = "REACH_LIFETIME"

	//
	// Specifying this value will enable the user to specify
	// {@link ReportQuery#startDate} and {@link ReportQuery#endDate}.
	//
	DateRangeTypeCUSTOM_DATE DateRangeType = "CUSTOM_DATE"

	//
	// The next day.
	//
	DateRangeTypeNEXT_DAY DateRangeType = "NEXT_DAY"

	//
	// The next ninety days.
	//
	DateRangeTypeNEXT_90_DAYS DateRangeType = "NEXT_90_DAYS"

	//
	// The next week, from monday to sunday.
	//
	DateRangeTypeNEXT_WEEK DateRangeType = "NEXT_WEEK"

	//
	// The next month.
	//
	DateRangeTypeNEXT_MONTH DateRangeType = "NEXT_MONTH"

	//
	// Beginning of the next day until the end of the next month.
	//
	DateRangeTypeCURRENT_AND_NEXT_MONTH DateRangeType = "CURRENT_AND_NEXT_MONTH"

	//
	// The next quarter.
	//
	DateRangeTypeNEXT_QUARTER DateRangeType = "NEXT_QUARTER"

	//
	// The next three months.
	//
	DateRangeTypeNEXT_3_MONTHS DateRangeType = "NEXT_3_MONTHS"

	//
	// The next twelve months.
	//
	DateRangeTypeNEXT_12_MONTHS DateRangeType = "NEXT_12_MONTHS"
)

//
// {@code Dimension} provides the break-down and filterable types available for
// running a {@link ReportJob}. Aggregate and percentage columns will be
// calculated based on these groupings.
//

type Dimension string

const (

	//
	// Breaks down reporting data by month and year in the network time zone. Can be used to filter on
	// month using ISO 4601 format 'YYYY-MM'.
	// <p>Corresponds to "Month and year" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Partner finance, YouTube consolidated.</p>
	//
	DimensionMONTH_AND_YEAR Dimension = "MONTH_AND_YEAR"

	//
	// Breaks down reporting data by week of the year in the network time zone. Cannot be used for
	// filtering.
	// <p>Corresponds to "Week" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, YouTube consolidated.</p>
	//
	DimensionWEEK Dimension = "WEEK"

	//
	// Breaks down reporting data by date in the network time zone. Can be used to filter by date
	// using ISO 8601's format 'YYYY-MM-DD'".
	// <p>Corresponds to "Date" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video, YouTube consolidated.</p>
	//
	DimensionDATE Dimension = "DATE"

	//
	// Breaks down reporting data by day of the week in the network time zone. Can
	// be used to filter by day of the week using the index of the day (from 1 for
	// Monday is 1 to 7 for Sunday).
	// <p>Corresponds to "Day of week" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, YouTube consolidated.</p>
	//
	DimensionDAY Dimension = "DAY"

	//
	// Breaks down reporting data by hour of the day in the network time zone. Can
	// be used to filter by hour of the day (from 0 to 23).
	// <p>Corresponds to "Hour" in the Ad Manager UI. Compatible with any of the following report types: Historical, Real-time video.</p>
	//
	DimensionHOUR Dimension = "HOUR"

	//
	// Breaks down reporting data by date in the PT time zone. Can be used to filter by date
	// using ISO 8601's format 'YYYY-MM-DD'". Can only be used when time zone type is PACIFIC.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionDATE_PT Dimension = "DATE_PT"

	//
	// Breaks down reporting data by week of the year in the PT time zone. Cannot be used for
	// filtering. Can only be used when time zone type is PACIFIC.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionWEEK_PT Dimension = "WEEK_PT"

	//
	// Breaks down reporting data by month and year in the PT time zone. Can be used to filter on
	// month using ISO 4601 format 'YYYY-MM'. Can only be used when time zone type is PACIFIC.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionMONTH_YEAR_PT Dimension = "MONTH_YEAR_PT"

	//
	// Breaks down reporting data by day of the week in the PT time zone. Can
	// be used to filter by day of the week using the index of the day (from 1 for
	// Monday is 1 to 7 for Sunday). Can only be used when time zone type is PACIFIC.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionDAY_OF_WEEK_PT Dimension = "DAY_OF_WEEK_PT"

	//
	// Breaks down reporting data by {@link LineItem#id}. Can be used to
	// filter by {@link LineItem#id}.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionLINE_ITEM_ID Dimension = "LINE_ITEM_ID"

	//
	// Breaks down reporting data by line item. {@link LineItem#name} and
	// {@link LineItem#id} are automatically included as columns in the report.
	// Can be used to filter by {@link LineItem#name}.
	// <p>Corresponds to "Line item" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionLINE_ITEM_NAME Dimension = "LINE_ITEM_NAME"

	//
	// Breaks down reporting data by {@link LineItem#lineItemType}. Can be used
	// to filter by line item type using {@link LineItemType} enumeration names.
	// <p>Corresponds to "Line item type" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionLINE_ITEM_TYPE Dimension = "LINE_ITEM_TYPE"

	//
	// Breaks down reporting data by {@link Order#id}. Can be used to filter by
	// {@link Order#id}.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed.</p>
	//
	DimensionORDER_ID Dimension = "ORDER_ID"

	//
	// Breaks down reporting data by order. {@link Order#name} and
	// {@link Order#id} are automatically included as columns in the report. Can
	// be used to filter by {@link Order#name}.
	// <p>Corresponds to "Order" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed.</p>
	//
	DimensionORDER_NAME Dimension = "ORDER_NAME"

	//
	// Delivery status of the order. Not available as a dimension to report on,
	// but exists as a dimension in order to filter on it using PQL.
	// Valid values are 'STARTED', 'NOT_STARTED' and 'COMPLETED'.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionORDER_DELIVERY_STATUS Dimension = "ORDER_DELIVERY_STATUS"

	//
	// Breaks down reporting data by advertising company {@link Company#id}. Can
	// be used to filter by {@link Company#id}.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed.</p>
	//
	DimensionADVERTISER_ID Dimension = "ADVERTISER_ID"

	//
	// Breaks down reporting data by advertising company. {@link Company#name} and
	// {@link Company#id} are automatically included as columns in the report.
	// Can be used to filter by {@link Company#name}.
	// <p>Corresponds to "Advertiser" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed.</p>
	//
	DimensionADVERTISER_NAME Dimension = "ADVERTISER_NAME"

	//
	// The network that provided the ad for SDK ad mediation.
	//
	// <p>If selected for a report, that report will include only SDK mediation ads and will not
	// contain non-SDK mediation ads.
	//
	// <p>SDK mediation ads are ads for mobile devices. They have a list of ad networks which can
	// provide ads to serve. Not every ad network will have an ad to serve so the device will try each
	// network one-by-one until it finds an ad network with an ad to serve. The ad network that ends
	// up serving the ad will appear here. Note that this id does not correlate to anything in the
	// companies table and is not the same id as is served by {@link #ADVERTISER_ID}.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionAD_NETWORK_ID Dimension = "AD_NETWORK_ID"

	//
	// The name of the network defined in {@link #AD_NETWORK_ID}.
	// <p>Corresponds to "Ad network name" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAD_NETWORK_NAME Dimension = "AD_NETWORK_NAME"

	//
	// Breaks down reporting data by salesperson {@link User#id}. Can be used to
	// filter by {@link User#id}.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, Reach.</p>
	//
	DimensionSALESPERSON_ID Dimension = "SALESPERSON_ID"

	//
	// Breaks down reporting data by salesperson. {@link User#name} and
	// {@link User#id} of the salesperson are automatically included as columns in
	// the report. Can be used to filter by {@link User#name}.
	// <p>Corresponds to "Salesperson" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach.</p>
	//
	DimensionSALESPERSON_NAME Dimension = "SALESPERSON_NAME"

	//
	// Breaks down reporting data by {@link Creative#id} or creative set id
	// (master's {@link Creative#id}) if the creative is part of a creative set.
	// Can be used to filter by {@link Creative#id}.
	// <p>Compatible with any of the following report types: Historical, Ad speed, Real-time video.</p>
	//
	DimensionCREATIVE_ID Dimension = "CREATIVE_ID"

	//
	// Breaks down reporting data by creative. {@link Creative#name} and
	// {@link Creative#id} are automatically included as columns in the report.
	// Can be used to filter by {@link Creative#name}.
	// <p>Corresponds to "Creative" in the Ad Manager UI. Compatible with any of the following report types: Historical, Ad speed, Real-time video.</p>
	//
	DimensionCREATIVE_NAME Dimension = "CREATIVE_NAME"

	//
	// Breaks down reporting data by creative type.
	// <p>Corresponds to "Creative type" in the Ad Manager UI. Compatible with any of the following report types: Historical, Ad speed.</p>
	//
	DimensionCREATIVE_TYPE Dimension = "CREATIVE_TYPE"

	//
	// Breaks down reporting data by creative billing type.
	// <p>Corresponds to "Creative billing type" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionCREATIVE_BILLING_TYPE Dimension = "CREATIVE_BILLING_TYPE"

	//
	// Breaks down reporting data by custom event ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionCUSTOM_EVENT_ID Dimension = "CUSTOM_EVENT_ID"

	//
	// Breaks down reporting data by custom event name.
	// <p>Corresponds to "Custom event" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionCUSTOM_EVENT_NAME Dimension = "CUSTOM_EVENT_NAME"

	//
	// Breaks down reporting data by custom event type (timer/exit/counter).
	// <p>Corresponds to "Custom event type" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionCUSTOM_EVENT_TYPE Dimension = "CUSTOM_EVENT_TYPE"

	//
	// Breaks down reporting data by {@link Creative#size}. Cannot be used for
	// filtering.
	// <p>Corresponds to "Creative size" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionCREATIVE_SIZE Dimension = "CREATIVE_SIZE"

	//
	// Breaks down reporting data by {@link AdUnit#id}. Can be used to filter by
	// {@link AdUnit#id}. {@link #AD_UNIT_NAME}, i.e. {@link AdUnit#name}, is
	// automatically included as a dimension in the report.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, Ad speed, Real-time video.</p>
	//
	DimensionAD_UNIT_ID Dimension = "AD_UNIT_ID"

	//
	// Breaks down reporting data by ad unit. {@link AdUnit#name} and
	// {@link AdUnit#id} are automatically included as columns in the report. Can
	// be used to filter by {@link AdUnit#name}.
	// <p>Corresponds to "Ad unit" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Ad speed, Real-time video.</p>
	//
	DimensionAD_UNIT_NAME Dimension = "AD_UNIT_NAME"

	//
	// Used to filter on all the descendants of an ad unit by {@link AdUnit#id}. Not available as a
	// dimension to report on.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionPARENT_AD_UNIT_ID Dimension = "PARENT_AD_UNIT_ID"

	//
	// Used to filter on all the descendants of an ad unit by {@link AdUnit#name}. Not available as a
	// dimension to report on.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionPARENT_AD_UNIT_NAME Dimension = "PARENT_AD_UNIT_NAME"

	//
	// Breaks down reporting data by {@link Placement#id}. Can be used to filter
	// by {@link Placement#id}.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, Reach.</p>
	//
	DimensionPLACEMENT_ID Dimension = "PLACEMENT_ID"

	//
	// Breaks down reporting data by placement. {@link Placement#name} and
	// {@link Placement#id} are automatically included as columns in the report.
	// Can be used to filter by {@link Placement#name}.
	// <p>Corresponds to "Placement" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach.</p>
	//
	DimensionPLACEMENT_NAME Dimension = "PLACEMENT_NAME"

	//
	// Status of the placement. Not available as a dimension to report on, but
	// exists as a dimension in order to filter on it using PQL. Can be used to
	// filter on {@link Placement#status} by using {@link InventoryStatus}
	// enumeration names.
	// <p>Compatible with any of the following report types: Historical, Future sell-through.</p>
	//
	DimensionPLACEMENT_STATUS Dimension = "PLACEMENT_STATUS"

	//
	// Breaks down reporting data by criteria predefined by Ad Manager like the
	// operating system, browser etc. Cannot be used for filtering.
	// <p>Corresponds to "Targeting" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionTARGETING Dimension = "TARGETING"

	//
	// Breaks down reporting data by browser criteria predefined by Ad Manager.
	// <p>Corresponds to "Browser" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionBROWSER_NAME Dimension = "BROWSER_NAME"

	//
	// The ID of the device category to which an ad is being targeted.
	//
	// Can be used to filter by device category ID.
	// <p>Compatible with any of the following report types: Historical, Ad speed, Real-time video.</p>
	//
	DimensionDEVICE_CATEGORY_ID Dimension = "DEVICE_CATEGORY_ID"

	//
	// The category of device (smartphone, feature phone, tablet, or desktop) to which an ad is being
	// targeted.
	//
	// Can be used to filter by device category name.
	// <p>Corresponds to "Device category" in the Ad Manager UI. Compatible with any of the following report types: Historical, Ad speed, Real-time video.</p>
	//
	DimensionDEVICE_CATEGORY_NAME Dimension = "DEVICE_CATEGORY_NAME"

	//
	// Breaks down reporting data by country criteria ID. Can be used to filter by
	// country criteria ID.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, YouTube consolidated.</p>
	//
	DimensionCOUNTRY_CRITERIA_ID Dimension = "COUNTRY_CRITERIA_ID"

	//
	// Breaks down reporting data by country code.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionCOUNTRY_CODE Dimension = "COUNTRY_CODE"

	//
	// Breaks down reporting data by country name. The country name and the
	// country criteria ID are automatically included as columns in the report.
	// Can be used to filter by country name using the US English name.
	// <p>Corresponds to "Country" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, YouTube consolidated.</p>
	//
	DimensionCOUNTRY_NAME Dimension = "COUNTRY_NAME"

	//
	// Breaks down reporting data by region criteria ID. Can be used to filter by
	// region criteria ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionREGION_CRITERIA_ID Dimension = "REGION_CRITERIA_ID"

	//
	// Breaks down reporting data by region name. The region name and the region
	// criteria ID are automatically included as columns in the report. Can be
	// used to filter by region name using the US English name.
	// <p>Corresponds to "Region" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionREGION_NAME Dimension = "REGION_NAME"

	//
	// Breaks down reporting data by city criteria ID. Can be used to filter by
	// city criteria ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionCITY_CRITERIA_ID Dimension = "CITY_CRITERIA_ID"

	//
	// Breaks down reporting data by city name. The city name and the city
	// criteria ID are automatically included as columns in the report. Can be
	// used to filter by city name using the US English name.
	// <p>Corresponds to "City" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionCITY_NAME Dimension = "CITY_NAME"

	//
	// Breaks down reporting data by metro criteria ID. Can be used to filter by
	// metro criteria ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionMETRO_CRITERIA_ID Dimension = "METRO_CRITERIA_ID"

	//
	// Breaks down reporting data by metro name. The metro name and the metro
	// criteria ID are automatically included as columns in the report. Can be
	// used to filter by metro name using the US English name.
	// <p>Corresponds to "Metro" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionMETRO_NAME Dimension = "METRO_NAME"

	//
	// Breaks down reporting data by postal code criteria ID. Can be used to
	// filter by postal code criteria ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionPOSTAL_CODE_CRITERIA_ID Dimension = "POSTAL_CODE_CRITERIA_ID"

	//
	// Breaks down reporting data by postal code. The postal code and the postal
	// code criteria ID are automatically included as columns in the report. Can
	// be used to filter by postal code.
	// <p>Corresponds to "Postal code" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionPOSTAL_CODE Dimension = "POSTAL_CODE"

	//
	// Breaks down reporting data by {@link CustomTargetingValue#id}. Can be used
	// to filter by {@link CustomTargetingValue#id}.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionCUSTOM_TARGETING_VALUE_ID Dimension = "CUSTOM_TARGETING_VALUE_ID"

	//
	// Breaks down reporting data by custom criteria. The {@link CustomTargetingValue} is
	// displayed in the form:
	// <ul>
	// <li>
	// car=honda when value match type is
	// {@link CustomTargetingValue.MatchType#EXACT}
	// </li>
	// <li>
	// car~honda when value match type is
	// {@link CustomTargetingValue.MatchType#BROAD}
	// </li>
	// <li>
	// car=*honda when value match type is
	// {@link CustomTargetingValue.MatchType#PREFIX}
	// </li>
	// <li>
	// car~*honda when value match type is
	// {@link CustomTargetingValue.MatchType#BROAD_PREFIX}
	// </li>
	// </ul>
	// {@link #CUSTOM_TARGETING_VALUE_ID}, i.e. {@link CustomTargetingValue#id} is
	// automatically included as a column in the report.
	// Cannot be used for filtering; use {@link #CUSTOM_TARGETING_VALUE_ID} instead.
	// <p>
	// When using this {@code Dimension}, metrics for freeform key values are only
	// reported on when they are registered with {@code CustomTargetingService}.
	// <p>Corresponds to "Key-values" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionCUSTOM_CRITERIA Dimension = "CUSTOM_CRITERIA"

	//
	// Breaks down reporting data by activity ID. Can be used to filter by
	// activity ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionACTIVITY_ID Dimension = "ACTIVITY_ID"

	//
	// Breaks down reporting data by activity. The activity name and the activity
	// ID are automatically included as columns in the report. Can be used to
	// filter by activity name.
	// <p>Corresponds to "Activity" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionACTIVITY_NAME Dimension = "ACTIVITY_NAME"

	//
	// Breaks down reporting data by activity group ID. Can be used to filter by
	// activity group ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionACTIVITY_GROUP_ID Dimension = "ACTIVITY_GROUP_ID"

	//
	// Breaks down reporting data by activity group. The activity group name and
	// the activity group ID are automatically included as columns in the report.
	// Can be used to filter by activity group name.
	// <p>Corresponds to "Activity group" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionACTIVITY_GROUP_NAME Dimension = "ACTIVITY_GROUP_NAME"

	//
	// Breaks down reporting data by {@link Content#id}. Can be used to filter by
	// {@link Content#id}.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, YouTube consolidated.</p>
	//
	DimensionCONTENT_ID Dimension = "CONTENT_ID"

	//
	// Breaks down reporting data by content. {@link Content#name} and
	// {@link Content#id} are automatically included as columns in the report. Can
	// be used to filter by {@link Content#name}.
	// <p>Corresponds to "Content" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, YouTube consolidated.</p>
	//
	DimensionCONTENT_NAME Dimension = "CONTENT_NAME"

	//
	// Breaks down reporting data by {@link ContentBundle#id}. Can be used to filter
	// by {@link ContentBundle#id}.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, YouTube consolidated.</p>
	//
	DimensionCONTENT_BUNDLE_ID Dimension = "CONTENT_BUNDLE_ID"

	//
	// Breaks down reporting data by content bundle. {@link ContentBundle#name} and
	// {@link ContentBundle#id} are automatically included as columns in the
	// report. Can be used to filter by {@link ContentBundle#name}.
	// <p>Corresponds to "Content bundle" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, YouTube consolidated.</p>
	//
	DimensionCONTENT_BUNDLE_NAME Dimension = "CONTENT_BUNDLE_NAME"

	//
	// Breaks down reporting data by {@link CustomTargetingKey#id}.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_METADATA_KEY_ID Dimension = "VIDEO_METADATA_KEY_ID"

	//
	// Breaks down reporting data by custom targeting key. {@link CustomTargetingKey#name} and
	// {@link CustomTargetingKey#id} are automatically included as columns in the
	// report.
	// <p>Corresponds to "Metadata key" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_METADATA_KEY_NAME Dimension = "VIDEO_METADATA_KEY_NAME"

	//
	// Breaks down reporting data by CMS metadata.
	// To use this dimension in API, a list of cms metadata key IDs must be specified in
	// {@link ReportQuery#cmsMetadataKeyIds}.
	// <p>
	// This dimension can be used as a filter in the {@link Statement} in PQL syntax:
	// CMS_METADATA_KEY[keyId]_ID =
	// {@link CmsMetadataValue#cmsMetadataValueId CMS metadata value ID}
	// <p>
	// For example: WHERE CMS_METADATA_KEY[4242]_ID = 53423
	//
	DimensionCMS_METADATA Dimension = "CMS_METADATA"

	//
	// Breaks down reporting data by the fallback position of the video ad, i.e.,
	// {@code NON_FALLBACK}, {@code FALLBACK_POSITION_1}, {@code FALLBACK_POSITION_2}, etc. Can be
	// used for filtering.
	// <p>Corresponds to "Fallback position" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_FALLBACK_POSITION Dimension = "VIDEO_FALLBACK_POSITION"

	//
	// Breaks down reporting data by the position of the video ad within the video stream, i.e.,
	// {@code UNKNOWN_POSITION}, {@code PREROLL}, {@code POSTROLL}, {@code UNKNOWN_MIDROLL},
	// {@code MIDROLL_1}, {@code MIDROLL_2}, etc. {@code UNKNOWN_MIDROLL} represents a midroll, but
	// which specific midroll is unknown. Can be used for filtering.
	// <p>Corresponds to "Position of pod" in the Ad Manager UI. Compatible with any of the following report types: Historical, Real-time video.</p>
	//
	DimensionPOSITION_OF_POD Dimension = "POSITION_OF_POD"

	//
	// Breaks down reporting data by the position of the video ad within the pod, i.e.,
	// {@code UNKNOWN_POSITION}, {@code POSITION_1}, {@code POSITION_2}, etc.
	// Can be used for filtering.
	// <p>Corresponds to "Position in pod" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionPOSITION_IN_POD Dimension = "POSITION_IN_POD"

	//
	// Breaks down reporting data by {@link AdSpot#id}. Can be used to filter by
	// {@link AdSpot#id}.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionCUSTOM_SPOT_ID Dimension = "CUSTOM_SPOT_ID"

	//
	// Breaks down reporting data by content. {@link AdSpot#name} and
	// {@link AdSpot#id} are automatically included as columns in the report. Can
	// be used to filter by {@link AdSpot#name}.
	// <p>Corresponds to "Custom spot" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionCUSTOM_SPOT_NAME Dimension = "CUSTOM_SPOT_NAME"

	//
	// Breaks down reporting data by video redirect vendor.
	// <p>Corresponds to "Video redirect third party" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_REDIRECT_THIRD_PARTY Dimension = "VIDEO_REDIRECT_THIRD_PARTY"

	//
	// The filter to break down reporting data by video break type.
	// Not available as a dimension to report on.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_BREAK_TYPE Dimension = "VIDEO_BREAK_TYPE"

	//
	// The filter to break down reporting data by video break type.
	// Can only be used with the following string values:
	// "Unknown", "Single ad video request", "Optimized pod video request".
	// Not available as a dimension to report on.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_BREAK_TYPE_NAME Dimension = "VIDEO_BREAK_TYPE_NAME"

	//
	// Breaks down reporting data by vast version type name.
	// <p>Corresponds to "VAST version" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_VAST_VERSION Dimension = "VIDEO_VAST_VERSION"

	//
	// Breaks down reporting data by video request duration bucket.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_AD_REQUEST_DURATION_ID Dimension = "VIDEO_AD_REQUEST_DURATION_ID"

	//
	// Breaks down reporting data by video request duration bucket name.
	// <p>Corresponds to "Video ad request duration" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_AD_REQUEST_DURATION Dimension = "VIDEO_AD_REQUEST_DURATION"

	//
	// Breaks down reporting data by video placement.
	// <p>Corresponds to "Video placement" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_PLACEMENT_NAME Dimension = "VIDEO_PLACEMENT_NAME"

	//
	// Breaks down reporting data by partner {@link Company#id}.
	// <p>Compatible with any of the following report types: Historical, Partner finance.</p>
	//
	DimensionPARTNER_MANAGEMENT_PARTNER_ID Dimension = "PARTNER_MANAGEMENT_PARTNER_ID"

	//
	// Breaks down reporting data by partner {@link Company#name} and {@link Company#id} are
	// automatically included as columns in the report.
	// <p>Corresponds to "Partner" in the Ad Manager UI. Compatible with any of the following report types: Historical, Partner finance.</p>
	//
	DimensionPARTNER_MANAGEMENT_PARTNER_NAME Dimension = "PARTNER_MANAGEMENT_PARTNER_NAME"

	//
	// Breaks down reporting data by partner label {@link Label#id}.
	// <p>Compatible with any of the following report types: Historical, Partner finance.</p>
	//
	DimensionPARTNER_MANAGEMENT_PARTNER_LABEL_ID Dimension = "PARTNER_MANAGEMENT_PARTNER_LABEL_ID"

	//
	// Breaks down reporting data by partner label. {@link Label#name} and {@link Label#id} are
	// automatically included as columns in the report.
	// <p>Corresponds to "Partner label" in the Ad Manager UI. Compatible with any of the following report types: Historical, Partner finance.</p>
	//
	DimensionPARTNER_MANAGEMENT_PARTNER_LABEL_NAME Dimension = "PARTNER_MANAGEMENT_PARTNER_LABEL_NAME"

	//
	// Breaks down reporting data by partner assignment id.
	// <p>Compatible with any of the following report types: Historical, Partner finance.</p>
	//
	DimensionPARTNER_MANAGEMENT_ASSIGNMENT_ID Dimension = "PARTNER_MANAGEMENT_ASSIGNMENT_ID"

	//
	// Breaks down reporting data by partner assignment name. PartnerAssignment name and id are
	// automatically included as columns in the report.
	// <p>Corresponds to "Assignment" in the Ad Manager UI. Compatible with any of the following report types: Historical, Partner finance.</p>
	//
	DimensionPARTNER_MANAGEMENT_ASSIGNMENT_NAME Dimension = "PARTNER_MANAGEMENT_ASSIGNMENT_NAME"

	//
	// Breaks down reporting data by inventory sharing assignment ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionINVENTORY_SHARE_ASSIGNMENT_ID Dimension = "INVENTORY_SHARE_ASSIGNMENT_ID"

	//
	// Breaks down reporting data by inventory sharing assignment name.
	// <p>Corresponds to "Inventory share assignment" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionINVENTORY_SHARE_ASSIGNMENT_NAME Dimension = "INVENTORY_SHARE_ASSIGNMENT_NAME"

	//
	// Breaks down reporting data by inventory sharing outcome.
	// <p>Corresponds to "Inventory share outcome" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionINVENTORY_SHARE_OUTCOME Dimension = "INVENTORY_SHARE_OUTCOME"

	//
	// Breaks down reporting data by gender and age group, i.e., MALE_13_TO_17, MALE_18_TO_24,
	// MALE_25_TO_34, MALE_35_TO_44, MALE_45_TO_54, MALE_55_TO_64, MALE_65_PLUS, FEMALE_13_TO_17,
	// FEMALE_18_TO_24, FEMALE_25_TO_34, FEMALE_35_TO_44, FEMALE_45_TO_54, FEMALE_55_TO_64,
	// FEMALE_65_PLUS, UNKNOWN_0_TO_17 and UNKNOWN. Whenever this dimension is selected, {@link
	// #COUNTRY_NAME} must be selected.
	//
	// <p>This dimension is supported only for GRP columns.
	// <p>Can correspond to any of the following in the Ad Manager UI: Demographics, comScore vCE demographics. Compatible with the "Reach" report type.</p>
	//
	DimensionGRP_DEMOGRAPHICS Dimension = "GRP_DEMOGRAPHICS"

	//
	// Breaks down reporting data by the ad unit sizes specified in ad requests.
	//
	// <p>Formatted as comma separated values, e.g. "300x250,300x250v,300x60".
	//
	// <p>This dimension is supported only for sell-through columns.
	// <p>Corresponds to "Ad request sizes" in the Ad Manager UI. Compatible with the "Future sell-through" report type.</p>
	//
	DimensionAD_REQUEST_AD_UNIT_SIZES Dimension = "AD_REQUEST_AD_UNIT_SIZES"

	//
	// Breaks down reporting data by the custom criteria specified in ad requests.
	//
	// <p>Formatted as comma separated
	// {@link CustomTargetingKey key}-{@link CustomTargetingValue values}, where a key-value is
	// formatted as {@code key1=value_1|...|value_n,key2=value_1|...|value_n,...}.
	//
	// <p>This dimension is supported only for sell-through columns.
	// <p>Corresponds to "Key-values" in the Ad Manager UI. Compatible with the "Future sell-through" report type.</p>
	//
	DimensionAD_REQUEST_CUSTOM_CRITERIA Dimension = "AD_REQUEST_CUSTOM_CRITERIA"

	//
	// Break down the report by a boolean indicator. It's TRUE for Ad Exchange traffic fulfilled by
	// First Look Deals. It can be used both as a dimension or dimension filter. As a filter, it can
	// only be used with the string values "true" and "false".
	// <p>Corresponds to "Is First Look" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionIS_FIRST_LOOK_DEAL Dimension = "IS_FIRST_LOOK_DEAL"

	//
	// Break down the report by a boolean indicator. It's TRUE for AdX Direct traffic. It can be used
	// both as a dimension or dimension filter. As a filter, it can only be used with the string
	// values "true" and "false".
	// <p>Corresponds to "Is AdX Direct" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionIS_ADX_DIRECT Dimension = "IS_ADX_DIRECT"

	//
	// Breaks down reporting data by yield group ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionYIELD_GROUP_ID Dimension = "YIELD_GROUP_ID"

	//
	// Breaks down reporting data by yield group name.
	// <p>Corresponds to "Yield group" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionYIELD_GROUP_NAME Dimension = "YIELD_GROUP_NAME"

	//
	// Breaks down reporting data by yield partner.
	// <p>Corresponds to "Yield partner" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionYIELD_PARTNER Dimension = "YIELD_PARTNER"

	//
	// Breaks down reporting data by the tag of a yield partner in a yield group.
	// <p>Corresponds to "Yield partner tag" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionYIELD_PARTNER_TAG Dimension = "YIELD_PARTNER_TAG"

	//
	// The ID of an exchange bidding deal.
	// <p>Corresponds to "Exchange bidding deal id" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionEXCHANGE_BIDDING_DEAL_ID Dimension = "EXCHANGE_BIDDING_DEAL_ID"

	//
	// The type of an exchange bidding deal.
	// <p>Corresponds to "Exchange bidding deal type" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionEXCHANGE_BIDDING_DEAL_TYPE Dimension = "EXCHANGE_BIDDING_DEAL_TYPE"

	//
	// The ID of a classified advertiser.
	// <p>Compatible with the "Ad speed" report type.</p>
	//
	DimensionCLASSIFIED_ADVERTISER_ID Dimension = "CLASSIFIED_ADVERTISER_ID"

	//
	// The name of a classified advertiser.
	// <p>Corresponds to "Advertiser (classified)" in the Ad Manager UI. Compatible with any of the following report types: Historical, Ad speed.</p>
	//
	DimensionCLASSIFIED_ADVERTISER_NAME Dimension = "CLASSIFIED_ADVERTISER_NAME"

	//
	// The ID of a classified brand.
	// <p>Compatible with the "Ad speed" report type.</p>
	//
	DimensionCLASSIFIED_BRAND_ID Dimension = "CLASSIFIED_BRAND_ID"

	//
	// The name of a classified brand.
	// <p>Corresponds to "Brand (classified)" in the Ad Manager UI. Compatible with any of the following report types: Historical, Ad speed.</p>
	//
	DimensionCLASSIFIED_BRAND_NAME Dimension = "CLASSIFIED_BRAND_NAME"

	//
	// Breaks down reporting data by mediation type.   A mediation type can be web, mobile app or
	// video.
	// <p>Corresponds to "Mediation type" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionMEDIATION_TYPE Dimension = "MEDIATION_TYPE"

	//
	// Breaks down reporting data by native template (also known as creative template) ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionNATIVE_TEMPLATE_ID Dimension = "NATIVE_TEMPLATE_ID"

	//
	// Breaks down reporting data by native template (also known as creative template) name.
	// <p>Corresponds to "Native ad format name" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionNATIVE_TEMPLATE_NAME Dimension = "NATIVE_TEMPLATE_NAME"

	//
	// Breaks down reporting data by native style ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionNATIVE_STYLE_ID Dimension = "NATIVE_STYLE_ID"

	//
	// Breaks down reporting data by native style name.
	// <p>Corresponds to "Native style name" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionNATIVE_STYLE_NAME Dimension = "NATIVE_STYLE_NAME"

	//
	// Breaks down reporting data by child network code in MCM "Manage Inventory".
	//
	// <p><b>This dimension only works for MCM "Manage Inventory" parent publishers.</b>
	// <p>Corresponds to "Child network code" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionCHILD_NETWORK_CODE Dimension = "CHILD_NETWORK_CODE"

	//
	// Breaks down reporting data by mobile app 'resolved' id - either the app store id or '(Not
	// applicable)' if the app is not registered in the app store. Note: app ids are not guaranteed to
	// be unique across different app stores. Can be used for filtering.
	// <p>Corresponds to "App ID" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionMOBILE_APP_RESOLVED_ID Dimension = "MOBILE_APP_RESOLVED_ID"

	//
	// Breaks down reporting data by mobile app name. Can be used for filtering.
	// <p>Corresponds to "App names" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionMOBILE_APP_NAME Dimension = "MOBILE_APP_NAME"

	//
	// Breaks down reporting data by device name. Can be used for filtering.
	// <p>Corresponds to "Devices" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionMOBILE_DEVICE_NAME Dimension = "MOBILE_DEVICE_NAME"

	//
	// Breaks down reporting data by inventory type. Can be used for filtering.
	// <p>Corresponds to "Inventory types" in the Ad Manager UI. Compatible with any of the following report types: Historical, Ad speed.</p>
	//
	DimensionMOBILE_INVENTORY_TYPE Dimension = "MOBILE_INVENTORY_TYPE"

	//
	// Breaks down reporting data by OS version id.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionOPERATING_SYSTEM_VERSION_ID Dimension = "OPERATING_SYSTEM_VERSION_ID"

	//
	// Breaks down reporting data by OS version name.
	// <p>Corresponds to "Operating system" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionOPERATING_SYSTEM_VERSION_NAME Dimension = "OPERATING_SYSTEM_VERSION_NAME"

	//
	// Breaks down reporting data by request type. Can be used for filtering.
	// <p>Corresponds to "Request type" in the Ad Manager UI. Compatible with any of the following report types: Historical, Ad speed.</p>
	//
	DimensionREQUEST_TYPE Dimension = "REQUEST_TYPE"

	//
	// Status of the ad unit. Not available as a dimension to report on,
	// but exists as a dimension in order to filter on it using PQL.
	// Valid values correspond to {@link InventoryStatus}.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, Ad speed, Real-time video.</p>
	//
	DimensionAD_UNIT_STATUS Dimension = "AD_UNIT_STATUS"

	//
	// Breaks down reporting data by {@link Creative#id}. This includes regular creatives,
	// and master and companions in case of creative sets.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionMASTER_COMPANION_CREATIVE_ID Dimension = "MASTER_COMPANION_CREATIVE_ID"

	//
	// Breaks down reporting data by creative. This includes regular creatives,
	// and master and companions in case of creative sets.
	// <p>Corresponds to "Master and Companion creative" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionMASTER_COMPANION_CREATIVE_NAME Dimension = "MASTER_COMPANION_CREATIVE_NAME"

	//
	// Breaks down reporting data by billable audience segment ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionAUDIENCE_SEGMENT_ID Dimension = "AUDIENCE_SEGMENT_ID"

	//
	// Breaks down reporting data by billable audience segment name.
	// <p>Corresponds to "Audience segment (billable)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAUDIENCE_SEGMENT_NAME Dimension = "AUDIENCE_SEGMENT_NAME"

	//
	// Breaks down reporting data by audience segment data provider name.
	// <p>Corresponds to "Data partner" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAUDIENCE_SEGMENT_DATA_PROVIDER_NAME Dimension = "AUDIENCE_SEGMENT_DATA_PROVIDER_NAME"

	//
	// Breaks down data by web property code.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionWEB_PROPERTY_CODE Dimension = "WEB_PROPERTY_CODE"

	//
	// Breaks down reporting data by agency.
	// <p>Corresponds to "Buying agency" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionBUYING_AGENCY_NAME Dimension = "BUYING_AGENCY_NAME"

	//
	// Breaks down reporting data by buyer network Id.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionBUYER_NETWORK_ID Dimension = "BUYER_NETWORK_ID"

	//
	// Breaks down reporting data by buyer network name.
	// <p>Corresponds to "Buyer network" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionBUYER_NETWORK_NAME Dimension = "BUYER_NETWORK_NAME"

	//
	// Breaks down reporting data by Bidder ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionBIDDER_ID Dimension = "BIDDER_ID"

	//
	// Breaks down reporting data by Bidder name.
	// <p>Corresponds to "Bidder" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionBIDDER_NAME Dimension = "BIDDER_NAME"

	//
	// Breaks down reporting data by advertiser domain.
	// <p>Corresponds to "Advertiser domain" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionADVERTISER_DOMAIN_NAME Dimension = "ADVERTISER_DOMAIN_NAME"

	//
	// Breaks down reporting data by optimization type.
	// <p>Corresponds to "Optimization type" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAD_EXCHANGE_OPTIMIZATION_TYPE Dimension = "AD_EXCHANGE_OPTIMIZATION_TYPE"

	//
	// Breaks down reporting data by advertiser vertical.
	// <p>Corresponds to "Advertiser vertical" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionADVERTISER_VERTICAL_NAME Dimension = "ADVERTISER_VERTICAL_NAME"

	//
	// Campaign date segment of Nielsen Digital Ad Ratings reporting.
	// <p>Corresponds to "Nielsen Digital Ad Ratings segment" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	DimensionNIELSEN_SEGMENT Dimension = "NIELSEN_SEGMENT"

	//
	// Breaks down reporting data by gender and age group, i.e., MALE_18_TO_20, MALE_21_TO_24,
	// MALE_25_TO_29, MALE_30_TO_35, MALE_35_TO_39, MALE_40_TO_44, MALE_45_TO_49, MALE_50_TO_54,
	// MALE_55_TO_64, MALE_65_PLUS, FEMALE_18_TO_20, FEMALE_21_TO_24, FEMALE_25_TO_29,
	// FEMALE_30_TO_34, FEMALE_35_TO_39, FEMALE_40_TO_44, FEMALE_45_TO_49, FEMALE_50_TO_54,
	// FEMALE_55_TO_64, FEMALE_65_PLUS, and OTHER.
	//
	DimensionNIELSEN_DEMOGRAPHICS Dimension = "NIELSEN_DEMOGRAPHICS"

	//
	// Data restatement date of Nielsen Digital Ad Ratings data.
	// <p>Corresponds to "Nielsen Digital Ad Ratings restatement date" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	DimensionNIELSEN_RESTATEMENT_DATE Dimension = "NIELSEN_RESTATEMENT_DATE"

	//
	// Breaks down reporting data by device type, i.e., Computer, Mobile and other types.
	//
	// <p>
	// This dimension is supported only for Nielsen columns.
	// <p>Compatible with the "Reach" report type.</p>
	//
	DimensionNIELSEN_DEVICE_ID Dimension = "NIELSEN_DEVICE_ID"

	//
	// Breaks down reporting data by device type, i.e., Computer, Mobile and other types.
	//
	// <p>
	// This dimension is supported only for Nielsen columns.
	// <p>Corresponds to "Nielsen Digital Ad Ratings device" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	DimensionNIELSEN_DEVICE_NAME Dimension = "NIELSEN_DEVICE_NAME"

	//
	// Breaks down reporting data by {@link ProposalMarketplaceInfo#buyerAccountId}.
	// <p>Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionPROGRAMMATIC_BUYER_ID Dimension = "PROGRAMMATIC_BUYER_ID"

	//
	// Breaks down reporting data by programmatic buyer name.
	// <p>Corresponds to "Programmatic buyer" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionPROGRAMMATIC_BUYER_NAME Dimension = "PROGRAMMATIC_BUYER_NAME"

	//
	// Breaks down reporting data by requested ad size(s).
	// This can be a chain of sizes or a single size.
	// <p>Corresponds to "Requested ad sizes" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionREQUESTED_AD_SIZES Dimension = "REQUESTED_AD_SIZES"

	//
	// Breaks down reporting data by the creative size the ad was delivered to.
	// <p>Corresponds to "Creative size (delivered)" in the Ad Manager UI. Compatible with any of the following report types: Historical, Ad speed.</p>
	//
	DimensionCREATIVE_SIZE_DELIVERED Dimension = "CREATIVE_SIZE_DELIVERED"

	//
	// Breaks down reporting data by the type of transaction that occurred in Ad Exchange.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionPROGRAMMATIC_CHANNEL_ID Dimension = "PROGRAMMATIC_CHANNEL_ID"

	//
	// Breaks down reporting data by the type of transaction that occurred in Ad Exchange.
	// <p>Corresponds to "Programmatic channel" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionPROGRAMMATIC_CHANNEL_NAME Dimension = "PROGRAMMATIC_CHANNEL_NAME"

	//
	// Breaks down data by detected yield partner name.
	// <p>Corresponds to "Yield partner (classified)" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionCLASSIFIED_YIELD_PARTNER_NAME Dimension = "CLASSIFIED_YIELD_PARTNER_NAME"

	//
	// Breaks down Demand reporting data by date in the network time zone. Can be used to
	// filter by date using ISO 8601's format 'YYYY-MM-DD'".
	// <p>Corresponds to "Date" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_DATE Dimension = "DP_DATE"

	//
	// Breaks down Demand reporting data by week of the year in the network time zone. Cannot be used
	// for filtering.
	// <p>Corresponds to "Week" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_WEEK Dimension = "DP_WEEK"

	//
	// Breaks down Demand reporting data by month and year in the network time zone. Cannot be used to
	// filter.
	// <p>Corresponds to "Month and year" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_MONTH_YEAR Dimension = "DP_MONTH_YEAR"

	//
	// Breaks down Demand reporting data by country criteria ID. Can be used to filter by
	// country criteria ID.
	// <p>Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_COUNTRY_CRITERIA_ID Dimension = "DP_COUNTRY_CRITERIA_ID"

	//
	// Breaks down Demand reporting data by country name. The country name and the
	// country criteria ID are automatically included as columns in the report.
	// Can be used to filter by country name using the US English name.
	// <p>Corresponds to "Country" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_COUNTRY_NAME Dimension = "DP_COUNTRY_NAME"

	//
	// Breaks down Demand reporting data by inventory type.
	// <p>Corresponds to "Inventory type" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_INVENTORY_TYPE Dimension = "DP_INVENTORY_TYPE"

	//
	// Breaks down Demand reporting data by the creative size the ad was delivered to.
	// <p>Corresponds to "Creative size" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_CREATIVE_SIZE Dimension = "DP_CREATIVE_SIZE"

	//
	// Breaks down Demand reporting data by the brand name that bids on ads.
	// <p>Corresponds to "Brand" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_BRAND_NAME Dimension = "DP_BRAND_NAME"

	//
	// Breaks down Demand reporting data by the advertiser name that bid on ads.
	// <p>Corresponds to "Advertiser" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_ADVERTISER_NAME Dimension = "DP_ADVERTISER_NAME"

	//
	// Breaks down Demand reporting data by Ad Exchange ad network name. Example:
	// Google Adwords.
	// <p>Corresponds to "Buyer network" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_ADX_BUYER_NETWORK_NAME Dimension = "DP_ADX_BUYER_NETWORK_NAME"

	//
	// Breaks down reporting data by device name.
	// <p>Corresponds to "Device" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_MOBILE_DEVICE_NAME Dimension = "DP_MOBILE_DEVICE_NAME"

	//
	// Breaks down reporting data by the category of device (smartphone, feature phone, tablet,
	// or desktop).
	// <p>Corresponds to "Device category" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_DEVICE_CATEGORY_NAME Dimension = "DP_DEVICE_CATEGORY_NAME"

	//
	// Breaks down reporting data by the tag id provided by the publisher in the ad request.
	// <p>Corresponds to "Tag ID" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_TAG_ID Dimension = "DP_TAG_ID"

	//
	// Breaks down reporting data by the deal id provided by the publisher in the ad request.
	// <p>Corresponds to "Deal IDs" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_DEAL_ID Dimension = "DP_DEAL_ID"

	//
	// Breaks down reporting data by mobile app ID.
	// <p>Corresponds to "App ID" in the Ad Manager UI. Compatible with the "Ad Connector" report type.</p>
	//
	DimensionDP_APP_ID Dimension = "DP_APP_ID"

	//
	// Breaks down reporting data by the {@link CustomTargetingKey}s marked as dimensions in inventory
	// key-values setup.  To use this dimension, a list of custom targeting key IDs must be specified
	// in {@link ReportQuery#customDimensionKeyIds}.
	//
	DimensionCUSTOM_DIMENSION Dimension = "CUSTOM_DIMENSION"

	//
	// Breaks down reporting data by demand channels.
	// <p>Compatible with any of the following report types: Historical, Reach, Ad speed.</p>
	//
	DimensionDEMAND_CHANNEL_ID Dimension = "DEMAND_CHANNEL_ID"

	//
	// Breaks down reporting data by demand channel name.
	// <p>Corresponds to "Demand channel" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach, Ad speed.</p>
	//
	DimensionDEMAND_CHANNEL_NAME Dimension = "DEMAND_CHANNEL_NAME"

	//
	// Breaks down reporting data by top private domain.
	// <p>Corresponds to "Domain" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionDOMAIN Dimension = "DOMAIN"

	//
	// Breaks down reporting data by serving restriction id.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionSERVING_RESTRICTION_ID Dimension = "SERVING_RESTRICTION_ID"

	//
	// Breaks down reporting data by serving restriction name.
	// <p>Corresponds to "Serving restriction" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionSERVING_RESTRICTION_NAME Dimension = "SERVING_RESTRICTION_NAME"

	//
	// Breaks down reporting data by unified pricing rule id.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionUNIFIED_PRICING_RULE_ID Dimension = "UNIFIED_PRICING_RULE_ID"

	//
	// Breaks down reporting data by unified pricing rule name.
	// <p>Corresponds to "Unified pricing rule" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionUNIFIED_PRICING_RULE_NAME Dimension = "UNIFIED_PRICING_RULE_NAME"

	//
	// Breaks down reporting data by first price pricing rule id.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionFIRST_LOOK_PRICING_RULE_ID Dimension = "FIRST_LOOK_PRICING_RULE_ID"

	//
	// Breaks down reporting data by first price pricing rule name.
	// <p>Corresponds to "First look pricing rule" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionFIRST_LOOK_PRICING_RULE_NAME Dimension = "FIRST_LOOK_PRICING_RULE_NAME"

	//
	// Breaks down reporting data by the range within which the bid falls, divided into $0.10 buckets.
	// <p>Corresponds to "Bid range" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionBID_RANGE Dimension = "BID_RANGE"

	//
	// Breaks down reporting data by the ID of the reason the bid lost or did not participate in the
	// auction.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionBID_REJECTION_REASON Dimension = "BID_REJECTION_REASON"

	//
	// Breaks down reporting data by the reason the bid lost or did not participate in the auction.
	// <p>Corresponds to "Bid rejection reason" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionBID_REJECTION_REASON_NAME Dimension = "BID_REJECTION_REASON_NAME"

	//
	// Breaks down reporting data by the domain of the ad technology provider (ATP) associated with
	// the bid.
	// <p>Corresponds to "Ad technology provider domain" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAD_TECHNOLOGY_PROVIDER_DOMAIN Dimension = "AD_TECHNOLOGY_PROVIDER_DOMAIN"

	//
	// Breaks down reporting data by programmatic deal ID.
	// <p>Corresponds to "Programmatic deal ID" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionPROGRAMMATIC_DEAL_ID Dimension = "PROGRAMMATIC_DEAL_ID"

	//
	// Breaks down reporting data by programmatic deal name.
	// <p>Corresponds to "Programmatic deal name" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionPROGRAMMATIC_DEAL_NAME Dimension = "PROGRAMMATIC_DEAL_NAME"

	//
	// Breaks down reporting data by the ID of the ad technology provider (ATP) associated with the
	// bid.
	// <p>Corresponds to "Ad technology provider ID" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAD_TECHNOLOGY_PROVIDER_ID Dimension = "AD_TECHNOLOGY_PROVIDER_ID"

	//
	// Breaks down reporting data by the ad technology provider (ATP) associated with the bid.
	// <p>Corresponds to "Ad technology provider" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAD_TECHNOLOGY_PROVIDER_NAME Dimension = "AD_TECHNOLOGY_PROVIDER_NAME"

	//
	// Breaks down reporting data by the ID of the ad technology provider as it appears on the Global
	// Vendor List (GVL).
	// <p>Corresponds to "TCF vendor ID" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionTCF_VENDOR_ID Dimension = "TCF_VENDOR_ID"

	//
	// Breaks down reporting data by the name of the ad technology provider as it appears on the
	// Global Vendor List (GVL).
	// <p>Corresponds to "TCF vendor" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionTCF_VENDOR_NAME Dimension = "TCF_VENDOR_NAME"

	//
	// Breaks down reporting data by site.
	// <p>Corresponds to "Site" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionSITE_NAME Dimension = "SITE_NAME"

	//
	// Breaks down reporting data by channels.
	// <p>Corresponds to "Channel" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionCHANNEL_NAME Dimension = "CHANNEL_NAME"

	//
	// Breaks down reporting data by URL ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionURL_ID Dimension = "URL_ID"

	//
	// Breaks down reporting data by URL name.
	// <p>Corresponds to "URL" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionURL_NAME Dimension = "URL_NAME"

	//
	// Breaks down reporting data by video ad duration.
	// <p>Corresponds to "Video ad duration" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_AD_DURATION Dimension = "VIDEO_AD_DURATION"

	//
	// Breaks down reporting data by video ad type Id.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_AD_TYPE_ID Dimension = "VIDEO_AD_TYPE_ID"

	//
	// Breaks down reporting data by video ad type.
	// <p>Corresponds to "Video ad type" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionVIDEO_AD_TYPE_NAME Dimension = "VIDEO_AD_TYPE_NAME"

	//
	// Breaks down reporting data by Ad Exchange product code.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionAD_EXCHANGE_PRODUCT_CODE Dimension = "AD_EXCHANGE_PRODUCT_CODE"

	//
	// Breaks down reporting data by Ad Exchange product.
	// <p>Corresponds to "Ad Exchange product" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAD_EXCHANGE_PRODUCT_NAME Dimension = "AD_EXCHANGE_PRODUCT_NAME"

	//
	// Breaks down reporting data by Dynamic allocation ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionDYNAMIC_ALLOCATION_ID Dimension = "DYNAMIC_ALLOCATION_ID"

	//
	// Breaks down reporting data by Dynamic allocation.
	// <p>Corresponds to "Dynamic allocation" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionDYNAMIC_ALLOCATION_NAME Dimension = "DYNAMIC_ALLOCATION_NAME"

	//
	// Breaks down reporting data by Ad type ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionAD_TYPE_ID Dimension = "AD_TYPE_ID"

	//
	// Breaks down reporting data by Ad type.
	// <p>Corresponds to "Ad type" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAD_TYPE_NAME Dimension = "AD_TYPE_NAME"

	//
	// Breaks down reporting data by Ad location ID.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionAD_LOCATION_ID Dimension = "AD_LOCATION_ID"

	//
	// Breaks down reporting data by Ad location.
	// <p>Corresponds to "Ad location" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAD_LOCATION_NAME Dimension = "AD_LOCATION_NAME"

	//
	// Breaks down reporting data by Targeting type code.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionTARGETING_TYPE_CODE Dimension = "TARGETING_TYPE_CODE"

	//
	// Breaks down reporting data by Targeting type.
	// <p>Corresponds to "Targeting type" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionTARGETING_TYPE_NAME Dimension = "TARGETING_TYPE_NAME"

	//
	// Breaks down reporting data by Branding type code.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionBRANDING_TYPE_CODE Dimension = "BRANDING_TYPE_CODE"

	//
	// Breaks down reporting data by Branding type.
	// <p>Corresponds to "Branding type" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionBRANDING_TYPE_NAME Dimension = "BRANDING_TYPE_NAME"

	//
	// Breaks down reporting data by Bandwidth Id.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionBANDWIDTH_ID Dimension = "BANDWIDTH_ID"

	//
	// Breaks down reporting data by Bandwidth name.
	// <p>Corresponds to "Bandwidth" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionBANDWIDTH_NAME Dimension = "BANDWIDTH_NAME"

	//
	// Breaks down reporting data by Carrier Id.
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionCARRIER_ID Dimension = "CARRIER_ID"

	//
	// Breaks down reporting data by Carrier name.
	// <p>Corresponds to "Carrier" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionCARRIER_NAME Dimension = "CARRIER_NAME"
)

//
// {@code DimensionAttribute} provides additional fields associated with a {@link Dimension}. It can
// only be selected with its corresponding {@link Dimension}. For example, {@link
// DimensionAttribute#ORDER_PO_NUMBER} can only be used if the {@link ReportQuery#dimensions}
// contains {@link Dimension#ORDER_NAME}.
//

type DimensionAttribute string

const (

	//
	// Represents {@link LineItem#effectiveAppliedLabels} as a comma separated list of {@link
	// Label#name} for {@link Dimension#LINE_ITEM_NAME}.
	// <p>Corresponds to "Line item labels" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeLINE_ITEM_LABELS DimensionAttribute = "LINE_ITEM_LABELS"

	//
	// Represents {@link LineItem#effectiveAppliedLabels} as a comma separated list of {@link
	// Label#id} for {@link Dimension#LINE_ITEM_NAME}.
	// <p>Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeLINE_ITEM_LABEL_IDS DimensionAttribute = "LINE_ITEM_LABEL_IDS"

	//
	// Generated as {@code true} for {@link Dimension#LINE_ITEM_NAME} which is eligible for
	// optimization, {@code false} otherwise. Can be used for filtering.
	// <p>Corresponds to "Optimizable" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeLINE_ITEM_OPTIMIZABLE DimensionAttribute = "LINE_ITEM_OPTIMIZABLE"

	//
	// Indicates the progress made for the delivery of the {@link Dimension#LINE_ITEM_NAME}.
	//
	// <table>
	// <tr>
	// <th scope="col">Progress</th> <th scope="col">Definition</th>
	// </tr>
	// <tr>
	// <td>100%</td>
	// <td>The {@link LineItem} is on track to deliver in full as per
	// {@link LineItem#unitsBought}.</td>
	// </tr>
	// <tr>
	// <td>&gt; 100%</td>
	// <td>The {@link LineItem} is on track to overdeliver.</td>
	// </tr>
	// <tr>
	// <td>&lt; 100%</td>
	// <td>The {@link LineItem} is on track to underdeliver.</td>
	// </tr>
	// <tr>
	// <td>N/A</td>
	// <td>The {@link LineItem} does not have any quantity goals, or there is
	// insufficient information about the {@link LineItem}.</td>
	// </tr>
	// </table>
	// <p>Corresponds to "Delivery Indicator" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach, Real-time video.</p>
	//
	DimensionAttributeLINE_ITEM_DELIVERY_INDICATOR DimensionAttribute = "LINE_ITEM_DELIVERY_INDICATOR"

	//
	// Represents {@link LineItem#deliveryRateType} for {@link Dimension#LINE_ITEM_NAME}.
	// <p>Corresponds to "Delivery pacing" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionAttributeLINE_ITEM_DELIVERY_PACING DimensionAttribute = "LINE_ITEM_DELIVERY_PACING"

	//
	// Represents {@link LineItem#frequencyCaps} as a comma separated list of "{@link
	// FrequencyCap#maxImpressions} impressions per/every {@link FrequencyCap#numTimeUnits} {@link
	// FrequencyCap#timeUnit}" (e.g. "10 impressions every day,500 impressions per lifetime") for
	// {@link Dimension#LINE_ITEM_NAME}.
	// <p>Corresponds to "Frequency cap" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeLINE_ITEM_FREQUENCY_CAP DimensionAttribute = "LINE_ITEM_FREQUENCY_CAP"

	//
	// Represents the monthly reconciliation status of the line item for {@link
	// Dimension#LINE_ITEM_NAME} and {@link Dimension#MONTH_YEAR}.
	// <p>Corresponds to "Line item reconciliation status" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach.</p>
	//
	DimensionAttributeLINE_ITEM_RECONCILIATION_STATUS DimensionAttribute = "LINE_ITEM_RECONCILIATION_STATUS"

	//
	// Represents the monthly last reconciliation date time of the line item for {@link
	// Dimension#LINE_ITEM_NAME} and {@link Dimension#MONTH_YEAR}.
	// <p>Corresponds to "Line item last reconciliation time" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach.</p>
	//
	DimensionAttributeLINE_ITEM_LAST_RECONCILIATION_DATE_TIME DimensionAttribute = "LINE_ITEM_LAST_RECONCILIATION_DATE_TIME"

	//
	// Represents {@link Company#externalId} for {@link Dimension#ADVERTISER_NAME}.
	// <p>Corresponds to "External advertiser ID" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeADVERTISER_EXTERNAL_ID DimensionAttribute = "ADVERTISER_EXTERNAL_ID"

	//
	// Represents {@link Company#type} for {@link Dimension#ADVERTISER_NAME}. Can be used for
	// filtering.
	// <p>Corresponds to "Advertiser type" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed.</p>
	//
	DimensionAttributeADVERTISER_TYPE DimensionAttribute = "ADVERTISER_TYPE"

	//
	// Represents {@link Company#creditStatus} for {@link Dimension#ADVERTISER_NAME}. Can be used for
	// filtering.
	// <p>Corresponds to "Advertiser credit status" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed.</p>
	//
	DimensionAttributeADVERTISER_CREDIT_STATUS DimensionAttribute = "ADVERTISER_CREDIT_STATUS"

	//
	// Represents name and email address in the form of name(email) of primary contact for {@link
	// Dimension#ADVERTISER_NAME}.
	// <p>Corresponds to "Advertiser primary contact" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeADVERTISER_PRIMARY_CONTACT DimensionAttribute = "ADVERTISER_PRIMARY_CONTACT"

	//
	// Represents the start date (in YYYY-MM-DD format) for {@link Dimension#ORDER_NAME}. Can be used
	// for filtering.
	// <p>Corresponds to "Order start date" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed.</p>
	//
	DimensionAttributeORDER_START_DATE_TIME DimensionAttribute = "ORDER_START_DATE_TIME"

	//
	// Represents the end date (in YYYY-MM-DD format) for {@link Dimension#ORDER_NAME}. Can be used
	// for filtering.
	// <p>Corresponds to "Order end date" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed.</p>
	//
	DimensionAttributeORDER_END_DATE_TIME DimensionAttribute = "ORDER_END_DATE_TIME"

	//
	// Represents {@link Order#externalOrderId} for {@link Dimension#ORDER_NAME}.
	// <p>Corresponds to "External order ID" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_EXTERNAL_ID DimensionAttribute = "ORDER_EXTERNAL_ID"

	//
	// Represents {@link Order#poNumber} for {@link Dimension#ORDER_NAME}. Can be used for filtering.
	// <p>Corresponds to "Order PO number" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed.</p>
	//
	DimensionAttributeORDER_PO_NUMBER DimensionAttribute = "ORDER_PO_NUMBER"

	//
	// Represents {@link Order#orderIsProgrammatic} for {@link Dimension#ORDER_NAME}. Can be used for
	// filtering.
	// <p>Corresponds to "Programmatic order" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_IS_PROGRAMMATIC DimensionAttribute = "ORDER_IS_PROGRAMMATIC"

	//
	// Represents the name of {@link Order#agencyId} for {@link Dimension#ORDER_NAME}.
	// <p>Corresponds to "Agency" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_AGENCY DimensionAttribute = "ORDER_AGENCY"

	//
	// Represents {@link Order#agencyId} for {@link Dimension#ORDER_NAME}. Can be used for filtering.
	// <p>Corresponds to "Agency ID" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_AGENCY_ID DimensionAttribute = "ORDER_AGENCY_ID"

	//
	// Represents {@link Order#effectiveAppliedLabels} as a comma separated list of {@link Label#name}
	// for {@link Dimension#ORDER_NAME}.
	// <p>Corresponds to "Order labels" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_LABELS DimensionAttribute = "ORDER_LABELS"

	//
	// Represents {@link Order#effectiveAppliedLabels} as a comma separated list of {@link Label#id}
	// for {@link Dimension#ORDER_NAME}.
	// <p>Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_LABEL_IDS DimensionAttribute = "ORDER_LABEL_IDS"

	//
	// The name and email address in the form of name(email) of the trafficker for {@link
	// Dimension#ORDER_NAME}
	// <p>Corresponds to "Trafficker" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_TRAFFICKER DimensionAttribute = "ORDER_TRAFFICKER"

	//
	// Represents {@link Order#traffickerId} for {@link Dimension#ORDER_NAME}. Can be used for
	// filtering.
	// <p>Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_TRAFFICKER_ID DimensionAttribute = "ORDER_TRAFFICKER_ID"

	//
	// The names and email addresses as a comma separated list of name(email) of the {@link
	// Order#secondaryTraffickerIds} for {@link Dimension#ORDER_NAME}.
	// <p>Corresponds to "Secondary traffickers" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_SECONDARY_TRAFFICKERS DimensionAttribute = "ORDER_SECONDARY_TRAFFICKERS"

	//
	// The name and email address in the form of name(email) of the {@link Order#salespersonId} for
	// {@link Dimension#ORDER_NAME}.
	// <p>Corresponds to "Salesperson" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_SALESPERSON DimensionAttribute = "ORDER_SALESPERSON"

	//
	// The names and email addresses as a comma separated list of name(email) of the {@link
	// Order#secondarySalespersonIds} for {@link Dimension#ORDER_NAME}.
	// <p>Corresponds to "Secondary salespeople" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_SECONDARY_SALESPEOPLE DimensionAttribute = "ORDER_SECONDARY_SALESPEOPLE"

	//
	// The total number of impressions delivered over the lifetime of an {@link Dimension#ORDER_NAME}.
	// <p>Corresponds to "Order lifetime impressions" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed.</p>
	//
	DimensionAttributeORDER_LIFETIME_IMPRESSIONS DimensionAttribute = "ORDER_LIFETIME_IMPRESSIONS"

	//
	// The total number of clicks delivered over the lifetime of an {@link Dimension#ORDER_NAME}.
	// <p>Corresponds to "Order lifetime clicks" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed.</p>
	//
	DimensionAttributeORDER_LIFETIME_CLICKS DimensionAttribute = "ORDER_LIFETIME_CLICKS"

	//
	// The cost of booking all the CPM ads for {@link Dimension#ORDER_NAME}.
	// <p>Corresponds to "Booked CPM" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_BOOKED_CPM DimensionAttribute = "ORDER_BOOKED_CPM"

	//
	// The cost of booking all the CPC ads for {@link Dimension#ORDER_NAME}.
	// <p>Corresponds to "Booked CPC" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeORDER_BOOKED_CPC DimensionAttribute = "ORDER_BOOKED_CPC"

	//
	// Represents the start date (in YYYY-MM-DD format) for {@link Dimension#LINE_ITEM_NAME}. Can be
	// used for filtering.
	// <p>Corresponds to "Line item start date" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionAttributeLINE_ITEM_START_DATE_TIME DimensionAttribute = "LINE_ITEM_START_DATE_TIME"

	//
	// Represents the end date (in YYYY-MM-DD format) for {@link Dimension#LINE_ITEM_NAME}. Can be
	// used for filtering.
	// <p>Corresponds to "Line item end date" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionAttributeLINE_ITEM_END_DATE_TIME DimensionAttribute = "LINE_ITEM_END_DATE_TIME"

	//
	// Represents {@link LineItem#externalId} for {@link Dimension#LINE_ITEM_NAME}. Can be used for
	// filtering.
	// <p>Corresponds to "External Line Item ID" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeLINE_ITEM_EXTERNAL_ID DimensionAttribute = "LINE_ITEM_EXTERNAL_ID"

	//
	// Represents {@link LineItem#costType} for {@link Dimension#LINE_ITEM_NAME}. Can be used for
	// filtering.
	// <p>Corresponds to "Cost type" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionAttributeLINE_ITEM_COST_TYPE DimensionAttribute = "LINE_ITEM_COST_TYPE"

	//
	// Represents {@link LineItem#costPerUnit} for {@link Dimension#LINE_ITEM_NAME}.
	// <p>Corresponds to "Rate" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionAttributeLINE_ITEM_COST_PER_UNIT DimensionAttribute = "LINE_ITEM_COST_PER_UNIT"

	//
	// Represents the 3 letter currency code for {@link Dimension#LINE_ITEM_NAME}.
	// <p>Corresponds to "Currency code" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionAttributeLINE_ITEM_CURRENCY_CODE DimensionAttribute = "LINE_ITEM_CURRENCY_CODE"

	//
	// The total number of impressions, clicks or days that is reserved for {@link
	// Dimension#LINE_ITEM_NAME}.
	// <p>Corresponds to "Goal quantity" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionAttributeLINE_ITEM_GOAL_QUANTITY DimensionAttribute = "LINE_ITEM_GOAL_QUANTITY"

	//
	// <p>Corresponds to "Nielsen Average Number Of Viewers" in the Ad Manager UI. Compatible with the "Reach" report type.</p>
	//
	DimensionAttributeLINE_ITEM_AVERAGE_NUMBER_OF_VIEWERS DimensionAttribute = "LINE_ITEM_AVERAGE_NUMBER_OF_VIEWERS"

	//
	// The ratio between the goal quantity for {@link Dimension#LINE_ITEM_NAME} of {@link
	// LineItemType#SPONSORSHIP} and the {@link #LINE_ITEM_GOAL_QUANTITY}. Represented as a number
	// between 0..100.
	// <p>Corresponds to "Sponsorship goal (%)" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeLINE_ITEM_SPONSORSHIP_GOAL_PERCENTAGE DimensionAttribute = "LINE_ITEM_SPONSORSHIP_GOAL_PERCENTAGE"

	//
	// The total number of impressions delivered over the lifetime of a {@link
	// Dimension#LINE_ITEM_NAME}.
	// <p>Corresponds to "Line item lifetime impressions" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionAttributeLINE_ITEM_LIFETIME_IMPRESSIONS DimensionAttribute = "LINE_ITEM_LIFETIME_IMPRESSIONS"

	//
	// The total number of clicks delivered over the lifetime of a {@link Dimension#LINE_ITEM_NAME}.
	// <p>Corresponds to "Line item lifetime clicks" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionAttributeLINE_ITEM_LIFETIME_CLICKS DimensionAttribute = "LINE_ITEM_LIFETIME_CLICKS"

	//
	// Represents {@link LineItem#priority} for {@link Dimension#LINE_ITEM_NAME} as a value between 1
	// and 16. Can be used for filtering.
	// <p>Corresponds to "Line item priority" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionAttributeLINE_ITEM_PRIORITY DimensionAttribute = "LINE_ITEM_PRIORITY"

	//
	// Describes the computed {@link LineItem} status that is derived from the current state of the
	// line item.
	// <p>Compatible with any of the following report types: Historical, Future sell-through, Reach, Ad speed, Real-time video.</p>
	//
	DimensionAttributeLINE_ITEM_COMPUTED_STATUS DimensionAttribute = "LINE_ITEM_COMPUTED_STATUS"

	//
	// Indicates if a creative is a regular creative or creative set. Values will be 'Creative' or
	// 'Creative set'
	// <p>Compatible with the "Historical" report type.</p>
	//
	DimensionAttributeCREATIVE_OR_CREATIVE_SET DimensionAttribute = "CREATIVE_OR_CREATIVE_SET"

	//
	// The type of creative in a creative set - master or companion.
	// <p>Corresponds to "Master or Companion" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAttributeMASTER_COMPANION_TYPE DimensionAttribute = "MASTER_COMPANION_TYPE"

	//
	// Represents the {@link LineItem#contractedUnitsBought} quantity for {@link
	// Dimension#LINE_ITEM_NAME}.
	// <p>Corresponds to "Contracted quantity" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeLINE_ITEM_CONTRACTED_QUANTITY DimensionAttribute = "LINE_ITEM_CONTRACTED_QUANTITY"

	//
	// Represents the {@link LineItem#discount} for {@link Dimension#LINE_ITEM_NAME}. The number is
	// either a percentage or an absolute value depending on {@link LineItem#discountType}.
	// <p>Corresponds to "Discount" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeLINE_ITEM_DISCOUNT DimensionAttribute = "LINE_ITEM_DISCOUNT"

	//
	// The cost of booking for a non-CPD {@link Dimension#LINE_ITEM_NAME}.
	// <p>Corresponds to "Booked revenue (exclude CPD)" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeLINE_ITEM_NON_CPD_BOOKED_REVENUE DimensionAttribute = "LINE_ITEM_NON_CPD_BOOKED_REVENUE"

	//
	// Represents {@link Company#appliedLabels} as a comma separated list of {@link Label#name} for
	// {@link Dimension#ADVERTISER_NAME}.
	// <p>Corresponds to "Advertiser labels" in the Ad Manager UI. Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeADVERTISER_LABELS DimensionAttribute = "ADVERTISER_LABELS"

	//
	// Represents {@link Company#appliedLabels} as a comma separated list of {@link Label#id} for
	// {@link Dimension#ADVERTISER_NAME}.
	// <p>Compatible with any of the following report types: Historical, Reach.</p>
	//
	DimensionAttributeADVERTISER_LABEL_IDS DimensionAttribute = "ADVERTISER_LABEL_IDS"

	//
	// Represents the click-through URL for {@link Dimension#CREATIVE_NAME}.
	// <p>Corresponds to "Click-through URL" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAttributeCREATIVE_CLICK_THROUGH_URL DimensionAttribute = "CREATIVE_CLICK_THROUGH_URL"

	//
	// Represents whether a creative is SSL-compliant.
	// <p>Corresponds to "Creative SSL scan result" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAttributeCREATIVE_SSL_SCAN_RESULT DimensionAttribute = "CREATIVE_SSL_SCAN_RESULT"

	//
	// Represents whether a creative's SSL status was overridden.
	// <p>Corresponds to "Creative SSL compliance override" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAttributeCREATIVE_SSL_COMPLIANCE_OVERRIDE DimensionAttribute = "CREATIVE_SSL_COMPLIANCE_OVERRIDE"

	//
	// Represents a {@link LineItemCreativeAssociation#startDateTime} for a {@link
	// Dimension#LINE_ITEM_NAME} and a {@link Dimension#CREATIVE_NAME}. Includes the date without the
	// time.
	// <p>Corresponds to "Creative start date" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAttributeLINE_ITEM_CREATIVE_START_DATE DimensionAttribute = "LINE_ITEM_CREATIVE_START_DATE"

	//
	// Represents a {@link LineItemCreativeAssociation#endDateTime} for a {@link
	// Dimension#LINE_ITEM_NAME} and a {@link Dimension#CREATIVE_NAME}. Includes the date without the
	// time.
	// <p>Corresponds to "Creative end date" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAttributeLINE_ITEM_CREATIVE_END_DATE DimensionAttribute = "LINE_ITEM_CREATIVE_END_DATE"

	//
	// Represents the {@link CmsContent#displayName} within the first element of {@link
	// Content#cmsContent} for {@link Dimension#CONTENT_NAME}.
	// <p>Corresponds to "Content source name" in the Ad Manager UI. Compatible with any of the following report types: Historical, YouTube consolidated.</p>
	//
	DimensionAttributeCONTENT_CMS_NAME DimensionAttribute = "CONTENT_CMS_NAME"

	//
	// Represents the {@link CmsContent#cmsContentId} within the first element of {@link
	// Content#cmsContent} for {@link Dimension#CONTENT_NAME}.
	// <p>Corresponds to "ID of the video in the content source" in the Ad Manager UI. Compatible with any of the following report types: Historical, YouTube consolidated.</p>
	//
	DimensionAttributeCONTENT_CMS_VIDEO_ID DimensionAttribute = "CONTENT_CMS_VIDEO_ID"

	//
	// Breaks down reporting data by child partner name in MCM "Manage Inventory". By default, this
	// attribute is ordered by {@link Dimension#CHILD_NETWORK_CODE}.
	//
	// <p><b>This dimension only works for MCM "Manage Inventory" parent publishers.</b>
	// <p>Corresponds to "Child partner name" in the Ad Manager UI. Compatible with the "Historical" report type.</p>
	//
	DimensionAttributeCHILD_PARTNER_NAME DimensionAttribute = "CHILD_PARTNER_NAME"

	//
	// Represents {@link AdUnit#adUnitCode} for {@link Dimension#AD_UNIT_NAME}.
	// <p>Corresponds to "Ad unit code" in the Ad Manager UI. Compatible with any of the following report types: Historical, Future sell-through, Ad speed, Real-time video.</p>
	//
	DimensionAttributeAD_UNIT_CODE DimensionAttribute = "AD_UNIT_CODE"
)

//
// The file formats available for creating the report.
//

type ExportFormat string

const (

	//
	// The report file is generated as a list of Tab Separated Values.
	//
	ExportFormatTSV ExportFormat = "TSV"

	//
	// The report file is generated as a list of tab-separated values for Excel.
	//
	ExportFormatTSV_EXCEL ExportFormat = "TSV_EXCEL"

	//
	// The report file is generated as a list of Comma Separated Values,
	// to be used with automated machine processing.
	// <p>
	// <ul>
	// <li>There is no pretty printing for the output, and no total row.</li>
	// <li>Column headers are the qualified name e.g. "Dimension.ORDER_NAME".</li>
	// <li>Network currency Monetary amounts are represented as micros in the
	// {@link Network#currencyCode currency of the network}.</li>
	// <li>Starting from v201705, local currency Monetary amounts are represented
	// as currency symbol + ' ' + micros. </li>
	// <li>Dates are formatted according to the ISO 8601 standard YYYY-MM-DD</li>
	// <li>DateTimes are formatted according to the ISO 8601 standard
	// YYYY-MM-DDThh:mm:ss[+-]hh:mm</li>
	// </ul>
	//
	ExportFormatCSV_DUMP ExportFormat = "CSV_DUMP"

	//
	// The report file is generated as XML.
	//
	ExportFormatXML ExportFormat = "XML"

	//
	// The report file is generated as an Office Open XML spreadsheet
	// designed for Excel 2007+.
	//
	ExportFormatXLSX ExportFormat = "XLSX"
)

type FeatureError_Reason string

const (

	//
	// A feature is being used that is not enabled on the current network.
	//
	FeatureError_ReasonMISSING_FEATURE FeatureError_Reason = "MISSING_FEATURE"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	FeatureError_ReasonUNKNOWN FeatureError_Reason = "UNKNOWN"
)

//
// The single reason for the internal API error.
//

type InternalApiError_Reason string

const (

	//
	// API encountered an unexpected internal error.
	//
	InternalApiError_ReasonUNEXPECTED_INTERNAL_API_ERROR InternalApiError_Reason = "UNEXPECTED_INTERNAL_API_ERROR"

	//
	// A temporary error occurred during the request. Please retry.
	//
	InternalApiError_ReasonTRANSIENT_ERROR InternalApiError_Reason = "TRANSIENT_ERROR"

	//
	// The cause of the error is not known or only defined in newer versions.
	//
	InternalApiError_ReasonUNKNOWN InternalApiError_Reason = "UNKNOWN"

	//
	// The API is currently unavailable for a planned downtime.
	//
	InternalApiError_ReasonDOWNTIME InternalApiError_Reason = "DOWNTIME"

	//
	// Mutate succeeded but server was unable to build response. Client should not retry mutate.
	//
	InternalApiError_ReasonERROR_GENERATING_RESPONSE InternalApiError_Reason = "ERROR_GENERATING_RESPONSE"
)

//
// The reasons for the target error.
//

type NotNullError_Reason string

const (

	//
	// Assuming that a method will not have more than 3 arguments, if it does,
	// return NULL
	//
	NotNullError_ReasonARG1_NULL NotNullError_Reason = "ARG1_NULL"

	NotNullError_ReasonARG2_NULL NotNullError_Reason = "ARG2_NULL"

	NotNullError_ReasonARG3_NULL NotNullError_Reason = "ARG3_NULL"

	NotNullError_ReasonNULL NotNullError_Reason = "NULL"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	NotNullError_ReasonUNKNOWN NotNullError_Reason = "UNKNOWN"
)

//
// The reasons for the target error.
//

type ParseError_Reason string

const (

	//
	// Indicates an error in parsing an attribute.
	//
	ParseError_ReasonUNPARSABLE ParseError_Reason = "UNPARSABLE"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	ParseError_ReasonUNKNOWN ParseError_Reason = "UNKNOWN"
)

//
// Describes reasons for permission errors.
//

type PermissionError_Reason string

const (

	//
	// User does not have the required permission for the request.
	//
	PermissionError_ReasonPERMISSION_DENIED PermissionError_Reason = "PERMISSION_DENIED"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	PermissionError_ReasonUNKNOWN PermissionError_Reason = "UNKNOWN"
)

//
// The reasons for the target error.
//

type PublisherQueryLanguageContextError_Reason string

const (

	//
	// Indicates that there was an error executing the PQL.
	//
	PublisherQueryLanguageContextError_ReasonUNEXECUTABLE PublisherQueryLanguageContextError_Reason = "UNEXECUTABLE"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	PublisherQueryLanguageContextError_ReasonUNKNOWN PublisherQueryLanguageContextError_Reason = "UNKNOWN"
)

//
// The reasons for the target error.
//

type PublisherQueryLanguageSyntaxError_Reason string

const (

	//
	// Indicates that there was a PQL syntax error.
	//
	PublisherQueryLanguageSyntaxError_ReasonUNPARSABLE PublisherQueryLanguageSyntaxError_Reason = "UNPARSABLE"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	PublisherQueryLanguageSyntaxError_ReasonUNKNOWN PublisherQueryLanguageSyntaxError_Reason = "UNKNOWN"
)

type QuotaError_Reason string

const (

	//
	// The number of requests made per second is too high and has exceeded the
	// allowable limit. The recommended approach to handle this error is to wait
	// about 5 seconds and then retry the request. Note that this does not
	// guarantee the request will succeed. If it fails again, try increasing the
	// wait time.
	// <p>Another way to mitigate this error is to limit requests to 8 per second for Ad Manager
	// 360 accounts, or 2 per second for Ad Manager accounts. Once again
	// this does not guarantee that every request will succeed, but may help
	// reduce the number of times you receive this error.
	//
	QuotaError_ReasonEXCEEDED_QUOTA QuotaError_Reason = "EXCEEDED_QUOTA"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	QuotaError_ReasonUNKNOWN QuotaError_Reason = "UNKNOWN"

	//
	// This user has exceeded the allowed number of new report requests per hour
	// (this includes both reports run via the UI and reports
	// run via {@link ReportService#runReportJob}).
	// The recommended approach to handle this error is to wait about 10 minutes
	// and then retry the request. Note that this does not guarantee the request
	// will succeed. If it fails again, try increasing the wait time.
	// <p>Another way to mitigate this error is to limit the number of new report
	// requests to 250 per hour per user. Once again, this does not guarantee that
	// every request will succeed, but may help reduce the number of times you
	// receive this error.
	//
	QuotaError_ReasonREPORT_JOB_LIMIT QuotaError_Reason = "REPORT_JOB_LIMIT"

	//
	// This network has exceeded the allowed number of identifiers uploaded within a 24 hour period.
	// The recommended approach to handle this error is to wait 30 minutes and then retry the
	// request. Note that this does not guarantee the request will succeed. If it fails again, try
	// increasing the wait time.
	//
	QuotaError_ReasonSEGMENT_POPULATION_LIMIT QuotaError_Reason = "SEGMENT_POPULATION_LIMIT"
)

//
// The reasons for report error.
//

type ReportError_Reason string

const (

	//
	// Default {@code ReportError} when the reason is not among any already defined.
	//
	ReportError_ReasonDEFAULT ReportError_Reason = "DEFAULT"

	//
	// User does not have permission to access the report.
	//
	ReportError_ReasonREPORT_ACCESS_NOT_ALLOWED ReportError_Reason = "REPORT_ACCESS_NOT_ALLOWED"

	//
	// User does not have permission to view one or more {@link Dimension}.
	//
	ReportError_ReasonDIMENSION_VIEW_NOT_ALLOWED ReportError_Reason = "DIMENSION_VIEW_NOT_ALLOWED"

	//
	// User has no permission to view one or more attributes.
	//
	ReportError_ReasonATTRIBUTE_VIEW_NOT_ALLOWED ReportError_Reason = "ATTRIBUTE_VIEW_NOT_ALLOWED"

	//
	// User does not have permission to view one or more {@link Column}.
	//
	ReportError_ReasonCOLUMN_VIEW_NOT_ALLOWED ReportError_Reason = "COLUMN_VIEW_NOT_ALLOWED"

	//
	// The report query exceeds the maximum allowed number of characters.
	//
	ReportError_ReasonREPORT_QUERY_TOO_LONG ReportError_Reason = "REPORT_QUERY_TOO_LONG"

	//
	// Invalid report job state for the given operation.
	//
	ReportError_ReasonINVALID_OPERATION_FOR_REPORT_STATE ReportError_Reason = "INVALID_OPERATION_FOR_REPORT_STATE"

	//
	// Invalid {@link Dimension} objects specified.
	//
	ReportError_ReasonINVALID_DIMENSIONS ReportError_Reason = "INVALID_DIMENSIONS"

	//
	// The attribute ID(s) are not valid.
	//
	ReportError_ReasonINVALID_ATTRIBUTES ReportError_Reason = "INVALID_ATTRIBUTES"

	//
	// The API error when running the report with {@link CmsMetadataKeyDimension}. There are three
	// reasons for this error.
	//
	// <ol>
	// <li>{@link ReportQuery#dimensions} contains {@link Dimension#CONTENT_CMS_METADATA}, but
	// {@link ReportQuery#cmsMetadataKeyIds} is empty.
	// <li>{@link ReportQuery#cmsMetadataKeyIds} is non-empty, but {@link ReportQuery#dimensions}
	// does not contain {@link Dimension#CONTENT_CMS_METADATA}.
	// <li>The {@link ReportQuery#cmsMetadataKeyIds} specified along with the {@link
	// Dimension#CONTENT_CMS_METADATA} are not valid, i.e., these IDs are not reportable cms
	// metadata key defined by the publisher.
	// </ol>
	//
	ReportError_ReasonINVALID_CMS_METADATA_DIMENSIONS ReportError_Reason = "INVALID_CMS_METADATA_DIMENSIONS"

	//
	// Invalid {@link Column} objects specified.
	//
	ReportError_ReasonINVALID_COLUMNS ReportError_Reason = "INVALID_COLUMNS"

	//
	// Invalid {@link DimensionFilter} objects specified.
	//
	ReportError_ReasonINVALID_DIMENSION_FILTERS ReportError_Reason = "INVALID_DIMENSION_FILTERS"

	//
	// Invalid date.
	//
	ReportError_ReasonINVALID_DATE ReportError_Reason = "INVALID_DATE"

	//
	// The start date for running the report should not be later than the end date.
	//
	ReportError_ReasonEND_DATE_TIME_NOT_AFTER_START_TIME ReportError_Reason = "END_DATE_TIME_NOT_AFTER_START_TIME"

	//
	// The start date for running the report should not be more than three years before now.
	//
	ReportError_ReasonSTART_DATE_MORE_THAN_THREE_YEARS_AGO ReportError_Reason = "START_DATE_MORE_THAN_THREE_YEARS_AGO"

	//
	// The list of {@link Dimension} and {@link Column} objects cannot be empty.
	//
	ReportError_ReasonNOT_NULL ReportError_Reason = "NOT_NULL"

	//
	// Attribute has to be selected in combination with dimensions.
	//
	ReportError_ReasonATTRIBUTES_NOT_SUPPORTED_FOR_REQUEST ReportError_Reason = "ATTRIBUTES_NOT_SUPPORTED_FOR_REQUEST"

	//
	// The provided report violates one or more constraints, which govern incompatibilities and
	// requirements between different report properties. Some reasons for constraint violations
	// include:
	//
	// <ul>
	// <li>Not all {@link Column} objects requested are supported for the given set of {@link
	// Dimension} objects.
	// <li>The report's date range is not compatible with the given set of {@link Column} objects.
	// <li>The report's {@link TimeZoneType} is not compatible with the given set of {@link
	// Column} and {@link Dimension} objects (version 201802 and later).
	// <li>The report's currency is not compatible with the given set of {@link Column} objects.
	// </ul>
	//
	// For versions 201911 and later, this is only returned when some or all of the {@link Column}
	// objects are not supported for the requested {@link Dimension} objects.
	//
	ReportError_ReasonCOLUMNS_NOT_SUPPORTED_FOR_REQUESTED_DIMENSIONS ReportError_Reason = "COLUMNS_NOT_SUPPORTED_FOR_REQUESTED_DIMENSIONS"

	//
	// The report's date range is not compatible with the requested {@link Dimension} and {@link
	// Column} objects.
	//
	ReportError_ReasonDATE_RANGE_NOT_SUPPORTED_FOR_REQUESTED_REPORT ReportError_Reason = "DATE_RANGE_NOT_SUPPORTED_FOR_REQUESTED_REPORT"

	//
	// The report's {@link TimeZoneType} is not compatible with the requested {@link Column} and
	// {@link Dimension} objects.
	//
	ReportError_ReasonTIME_ZONE_TYPE_NOT_SUPPORTED_FOR_REQUESTED_REPORT ReportError_Reason = "TIME_ZONE_TYPE_NOT_SUPPORTED_FOR_REQUESTED_REPORT"

	//
	// The report's currency is not compatible with the requested {@link Column} objects.
	//
	ReportError_ReasonCURRENCY_CODE_NOT_SUPPORTED_FOR_REQUESTED_REPORT ReportError_Reason = "CURRENCY_CODE_NOT_SUPPORTED_FOR_REQUESTED_REPORT"

	//
	// Failed to store/cache a report.
	//
	ReportError_ReasonFAILED_TO_STORE_REPORT ReportError_Reason = "FAILED_TO_STORE_REPORT"

	//
	// The requested report does not exist.
	//
	ReportError_ReasonREPORT_NOT_FOUND ReportError_Reason = "REPORT_NOT_FOUND"

	//
	// User has no permission to view in another network.
	//
	ReportError_ReasonSR_CANNOT_RUN_REPORT_IN_ANOTHER_NETWORK ReportError_Reason = "SR_CANNOT_RUN_REPORT_IN_ANOTHER_NETWORK"

	//
	// The report's {@link AdUnitView} is not compatible with the requested {@link Dimension} and
	// {@link Column} objects.
	//
	ReportError_ReasonAD_UNIT_VIEW_NOT_SUPPORTED_FOR_REQUESTED_REPORT ReportError_Reason = "AD_UNIT_VIEW_NOT_SUPPORTED_FOR_REQUESTED_REPORT"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	ReportError_ReasonUNKNOWN ReportError_Reason = "UNKNOWN"
)

//
// Represents the status of a {@link ReportJob} running on the server.
//

type ReportJobStatus string

const (

	//
	// The {@link ReportJob} has completed successfully and is ready to download.
	//
	ReportJobStatusCOMPLETED ReportJobStatus = "COMPLETED"

	//
	// The {@link ReportJob} is still being executed.
	//
	ReportJobStatusIN_PROGRESS ReportJobStatus = "IN_PROGRESS"

	//
	// The {@link ReportJob} has failed to run to completion.
	//
	ReportJobStatusFAILED ReportJobStatus = "FAILED"
)

type RequiredCollectionError_Reason string

const (

	//
	// A required collection is missing.
	//
	RequiredCollectionError_ReasonREQUIRED RequiredCollectionError_Reason = "REQUIRED"

	//
	// Collection size is too large.
	//
	RequiredCollectionError_ReasonTOO_LARGE RequiredCollectionError_Reason = "TOO_LARGE"

	//
	// Collection size is too small.
	//
	RequiredCollectionError_ReasonTOO_SMALL RequiredCollectionError_Reason = "TOO_SMALL"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	RequiredCollectionError_ReasonUNKNOWN RequiredCollectionError_Reason = "UNKNOWN"
)

//
// The reasons for the target error.
//

type RequiredError_Reason string

const (

	//
	// Missing required field.
	//
	RequiredError_ReasonREQUIRED RequiredError_Reason = "REQUIRED"
)

//
// Describes reasons for server errors
//

type ServerError_Reason string

const (

	//
	// Indicates that an unexpected error occured.
	//
	ServerError_ReasonSERVER_ERROR ServerError_Reason = "SERVER_ERROR"

	//
	// Indicates that the server is currently experiencing a high load. Please
	// wait and try your request again.
	//
	ServerError_ReasonSERVER_BUSY ServerError_Reason = "SERVER_BUSY"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	ServerError_ReasonUNKNOWN ServerError_Reason = "UNKNOWN"
)

type StatementError_Reason string

const (

	//
	// A bind variable has not been bound to a value.
	//
	StatementError_ReasonVARIABLE_NOT_BOUND_TO_VALUE StatementError_Reason = "VARIABLE_NOT_BOUND_TO_VALUE"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	StatementError_ReasonUNKNOWN StatementError_Reason = "UNKNOWN"
)

//
// The reasons for the target error.
//

type StringFormatError_Reason string

const (
	StringFormatError_ReasonUNKNOWN StringFormatError_Reason = "UNKNOWN"

	//
	// The input string value contains disallowed characters.
	//
	StringFormatError_ReasonILLEGAL_CHARS StringFormatError_Reason = "ILLEGAL_CHARS"

	//
	// The input string value is invalid for the associated field.
	//
	StringFormatError_ReasonINVALID_FORMAT StringFormatError_Reason = "INVALID_FORMAT"
)

type StringLengthError_Reason string

const (
	StringLengthError_ReasonTOO_LONG StringLengthError_Reason = "TOO_LONG"

	StringLengthError_ReasonTOO_SHORT StringLengthError_Reason = "TOO_SHORT"

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	StringLengthError_ReasonUNKNOWN StringLengthError_Reason = "UNKNOWN"
)

//
// Enumerates all allowed time zones that can be used in reports. Note that some time zones are only
// compatible with specific fields.
//

type TimeZoneType string

const (

	//
	// The value returned if the actual value is not exposed by the requested API version.
	//
	TimeZoneTypeUNKNOWN TimeZoneType = "UNKNOWN"

	//
	// Use the publisher's time zone. For Ad Manager reports, this time zone is compatible with all
	// metrics. For Ad Exchange reports, this time zone is not compatible with "Bids" and "Deals"
	// metrics.
	//
	// <p><b>Note:</b> if your report includes "time unit" dimensions, only the Ad Manager "time unit"
	// dimensions are compatible with this timezone, e.g.:
	// <ul>
	// <li> {@link com.google.ads.publisher.api.service.reports.Dimension.DATE}
	// <li> {@link com.google.ads.publisher.api.service.reports.Dimension.WEEK}
	// <li> {@link com.google.ads.publisher.api.service.reports.Dimension.MONTH_AND_YEAR}
	// </ul>
	//
	TimeZoneTypePUBLISHER TimeZoneType = "PUBLISHER"

	//
	// Use the PT time zone. This time zone is only compatible with Ad Exchange metrics in Historical
	// report type.
	//
	// <p><b>Note:</b> if your report includes "time unit" dimensions, only the PT "time unit"
	// dimensions are compatible with this timezone, e.g.:
	//
	// <ul>
	// <li>{@link com.google.ads.publisher.api.service.reports.Dimension.DATE_PT}
	// <li>{@link com.google.ads.publisher.api.service.reports.Dimension.WEEK_PT}
	// <li>{@link com.google.ads.publisher.api.service.reports.Dimension.MONTH_YEAR_PT}
	// <li>{@link com.google.ads.publisher.api.service.reports.Dimension.DAY_PT}
	// </ul>
	//
	TimeZoneTypePACIFIC TimeZoneType = "PACIFIC"
)

type GetReportDownloadURL struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getReportDownloadURL"`

	ReportJobId int64 `xml:"reportJobId,omitempty" json:"reportJobId,omitempty"`

	ExportFormat *ExportFormat `xml:"exportFormat,omitempty" json:"exportFormat,omitempty"`
}

type GetReportDownloadURLResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getReportDownloadURLResponse"`

	Rval string `xml:"rval,omitempty" json:"rval,omitempty"`
}

type ApiExceptionFault ApiException

type GetReportDownloadUrlWithOptions struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getReportDownloadUrlWithOptions"`

	ReportJobId int64 `xml:"reportJobId,omitempty" json:"reportJobId,omitempty"`

	ReportDownloadOptions *ReportDownloadOptions `xml:"reportDownloadOptions,omitempty" json:"reportDownloadOptions,omitempty"`
}

type GetReportDownloadUrlWithOptionsResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getReportDownloadUrlWithOptionsResponse"`

	Rval string `xml:"rval,omitempty" json:"rval,omitempty"`
}

type GetReportJobStatus struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getReportJobStatus"`

	ReportJobId int64 `xml:"reportJobId,omitempty" json:"reportJobId,omitempty"`
}

type GetReportJobStatusResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getReportJobStatusResponse"`

	Rval *ReportJobStatus `xml:"rval,omitempty" json:"rval,omitempty"`
}

type GetSavedQueriesByStatement struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getSavedQueriesByStatement"`

	FilterStatement *Statement `xml:"filterStatement,omitempty" json:"filterStatement,omitempty"`
}

type GetSavedQueriesByStatementResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 getSavedQueriesByStatementResponse"`

	Rval *SavedQueryPage `xml:"rval,omitempty" json:"rval,omitempty"`
}

type RunReportJob struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 runReportJob"`

	ReportJob *ReportJob `xml:"reportJob,omitempty" json:"reportJob,omitempty"`
}

type RunReportJobResponse struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 runReportJobResponse"`

	Rval *ReportJob `xml:"rval,omitempty" json:"rval,omitempty"`
}

type RequestHeader SoapRequestHeader

type ResponseHeader SoapResponseHeader

type ObjectValue struct {
	*_Value
}

type ApiError struct {

	//
	// The OGNL field path to identify cause of error.
	//
	FieldPath string `xml:"fieldPath,omitempty" json:"fieldPath,omitempty"`

	//
	// A parsed copy of the field path. For example, the field path "operations[1].operand"
	// corresponds to this list: {FieldPathElement(field = "operations", index = 1),
	// FieldPathElement(field = "operand", index = null)}.
	//
	FieldPathElements []*FieldPathElement `xml:"fieldPathElements,omitempty" json:"fieldPathElements,omitempty"`

	//
	// The data that caused the error.
	//
	Trigger string `xml:"trigger,omitempty" json:"trigger,omitempty"`

	//
	// A simple string representation of the error and reason.
	//
	ErrorString string `xml:"errorString,omitempty" json:"errorString,omitempty"`
}

type ApiException struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 ApiExceptionFault"`

	*ApplicationException

	//
	// List of errors.
	//
	Errors []*ApiError `xml:"errors,omitempty" json:"errors,omitempty"`
}

type ApiVersionError struct {
	*ApiError

	Reason *ApiVersionError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type ApplicationException struct {

	//
	// Error message.
	//
	Message string `xml:"message,omitempty" json:"message,omitempty"`
}

type AuthenticationError struct {
	*ApiError

	Reason *AuthenticationError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type BooleanValue struct {
	*_Value

	//
	// The boolean value.
	//
	Value bool `xml:"value,omitempty" json:"value,omitempty"`
}

type CollectionSizeError struct {
	*ApiError

	Reason *CollectionSizeError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type CommonError struct {
	*ApiError

	Reason *CommonError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type CurrencyCodeError struct {
	*ApiError

	Reason *CurrencyCodeError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type Date struct {

	//
	// Year (e.g., 2009)
	//
	Year int32 `xml:"year,omitempty" json:"year,omitempty"`

	//
	// Month (1..12)
	//
	Month int32 `xml:"month,omitempty" json:"month,omitempty"`

	//
	// Day (1..31)
	//
	Day int32 `xml:"day,omitempty" json:"day,omitempty"`
}

type DateTime struct {
	Date soap.XSDDate `xml:"date,omitempty" json:"date,omitempty"`

	Hour int32 `xml:"hour,omitempty" json:"hour,omitempty"`

	Minute int32 `xml:"minute,omitempty" json:"minute,omitempty"`

	Second int32 `xml:"second,omitempty" json:"second,omitempty"`

	TimeZoneId string `xml:"timeZoneId,omitempty" json:"timeZoneId,omitempty"`
}

type DateTimeValue struct {
	*_Value

	//
	// The {@code DateTime} value.
	//
	Value soap.XSDDateTime `xml:"value,omitempty" json:"value,omitempty"`
}

type DateValue struct {
	*_Value

	//
	// The {@code Date} value.
	//
	Value soap.XSDDate `xml:"value,omitempty" json:"value,omitempty"`
}

type FeatureError struct {
	*ApiError

	Reason *FeatureError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type FieldPathElement struct {

	//
	// The name of a field in lower camelcase. (e.g. "biddingStrategy")
	//
	Field string `xml:"field,omitempty" json:"field,omitempty"`

	//
	// For list fields, this is a 0-indexed position in the list. Null for non-list fields.
	//
	Index int32 `xml:"index,omitempty" json:"index,omitempty"`
}

type InternalApiError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *InternalApiError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type NotNullError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *NotNullError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type NumberValue struct {
	*_Value

	//
	// The numeric value represented as a string.
	//
	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type ParseError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *ParseError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type PermissionError struct {
	*ApiError

	Reason *PermissionError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type PublisherQueryLanguageContextError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *PublisherQueryLanguageContextError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type PublisherQueryLanguageSyntaxError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *PublisherQueryLanguageSyntaxError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type QuotaError struct {
	*ApiError

	Reason *QuotaError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type ReportDownloadOptions struct {

	//
	// The {@link ExportFormat} used to generate the report.
	// Default value is {@link ExportFormat#CSV_DUMP}.
	//
	ExportFormat *ExportFormat `xml:"exportFormat,omitempty" json:"exportFormat,omitempty"`

	//
	// Whether or not to include the report properties (e.g. network, user, date generated...)
	// in the generated report.
	// Default is false.
	//
	IncludeReportProperties bool `xml:"includeReportProperties,omitempty" json:"includeReportProperties,omitempty"`

	//
	// Whether or not to include the totals row.
	// Default is true for all formats except {@link ExportFormat#CSV_DUMP}.
	//
	IncludeTotalsRow bool `xml:"includeTotalsRow,omitempty" json:"includeTotalsRow,omitempty"`

	//
	// Whether or not to compress the report file to a gzip file.
	// Default is true.
	// <p>
	// Regardless of value, gzip http compression is available from the URL by normal means.
	//
	UseGzipCompression bool `xml:"useGzipCompression,omitempty" json:"useGzipCompression,omitempty"`
}

type ReportError struct {
	*ApiError

	Reason *ReportError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type ReportJob struct {

	//
	// The unique ID of the {@code ReportJob}. This value is read-only and is
	// assigned by Google.
	//
	Id int64 `xml:"id,omitempty" json:"id,omitempty"`

	//
	// Holds the filtering criteria.
	//
	ReportQuery *ReportQuery `xml:"reportQuery,omitempty" json:"reportQuery,omitempty"`
}

type ReportQuery struct {

	//
	// The list of break-down types being requested in the report.
	// The generated report will contain the dimensions in the same order as requested.
	// This field is required.
	//
	Dimensions []*Dimension `xml:"dimensions,omitempty" json:"dimensions,omitempty"`

	//
	// The ad unit view for the report. Defaults to {@link AdUnitView#TOP_LEVEL}.
	//
	AdUnitView *ReportQuery_AdUnitView `xml:"adUnitView,omitempty" json:"adUnitView,omitempty"`

	//
	// The list of trafficking statistics and revenue information being requested
	// in the report. The generated report will contain the columns in the same
	// order as requested. This field is required.
	//
	Columns []*Column `xml:"columns,omitempty" json:"columns,omitempty"`

	//
	// The list of break-down attributes being requested in this report. Some
	// {@link DimensionAttribute} values can only be used with certain
	// {@link Dimension} values that must be included in the {@link #dimensions}
	// attribute. The generated report will contain the attributes in the same
	// order as requested.
	//
	DimensionAttributes []*DimensionAttribute `xml:"dimensionAttributes,omitempty" json:"dimensionAttributes,omitempty"`

	//
	// The list of {@link CustomField#id} being requested in this report.
	// To add a {@link CustomField} to the report, you must include
	// its corresponding {@link Dimension}, determined by the {@link CustomField#entityType},
	// as a {@link #dimensions dimension}.
	//
	// <table>
	// <tr>
	// <th scope="col" colspan="2">{@link CustomFieldEntityType#entityType}</th>
	// </tr>
	// <tr>
	// <td>{@link CustomFieldEntityType#LINE_ITEM}</td><td>{@link Dimension#LINE_ITEM_NAME}</td>
	// </tr>
	// <tr>
	// <td>{@link CustomFieldEntityType#ORDER}</td><td>{@link Dimension#ORDER_NAME}</td>
	// </tr>
	// <tr>
	// <td>{@link CustomFieldEntityType#CREATIVE}</td><td>{@link Dimension#CREATIVE_NAME}</td>
	// </tr>
	// </table>
	//
	CustomFieldIds []int64 `xml:"customFieldIds,omitempty" json:"customFieldIds,omitempty"`

	//
	// The list of content CMS metadata key {@link CmsMetadataKey#id IDs}
	// being requested in this report. Each of these IDs must have been defined in the
	// {@link CmsMetadataKey CMS metadata key}. This will include
	// dimensions in the form of {@code CMS_METADATA_KEY[id]_ID} and
	// {@code CMS_METADATA_KEY[id]_VALUE} where where {@code ID} is the ID of
	// the {@link CmsMetadataValue#id CMS metadata value} and {@code VALUE} is the
	// {@link CmsMetadataValue#valueName name}.
	// <p>
	// To add {@link CmsMetadataKey#id IDs}, you must include {@link Dimension#CMS_METADATA}
	// in {@link #dimensions}, and specify a non-empty list of content CMS metadata key IDs.
	// The order of content CMS metadata columns in the report correspond to the place of
	// {@link Dimension#CMS_METADATA} in {@link #dimensions}.
	// For example, if {@link #dimensions} contains the following dimensions in the order:
	// {@link Dimension#ADVERTISER_NAME},
	// {@link Dimension#CMS_METADATA} and {@link Dimension#COUNTRY_NAME}, and
	// {@link #cmsMetadataKeyIds} contains the following IDs in the
	// order: 1001 and 1002. The order of dimensions in the report will be:
	// Dimension.ADVERTISER_NAME,
	// Dimension.CMS_METADATA_KEY[1001]_VALUE,
	// Dimension.CMS_METADATA_KEY[1002]_VALUE,
	// Dimension.COUNTRY_NAME,
	// Dimension.ADVERTISER_ID,
	// Dimension.CMS_METADATA_KEY[1001]_ID,
	// Dimension.CMS_METADATA_KEY[1002]_ID,
	// Dimension.COUNTRY_CRITERIA_ID
	//
	CmsMetadataKeyIds []int64 `xml:"cmsMetadataKeyIds,omitempty" json:"cmsMetadataKeyIds,omitempty"`

	//
	// The list of custom dimension custom targeting key {@link CustomTargetingKey#id IDs} being
	// requested in this report. This will include dimensions in the form of
	// {@code TOP_LEVEL_DIMENSION_KEY[id]_ID} and {@code TOP_LEVEL_DIMENSION_KEY[id]_VALUE} where
	// {@code ID} is the ID of the {@link CustomTargetingValue#id custom targeting value} and
	// {@code VALUE} is the {@link CustomTargetingValue#name name}.
	//
	// <p>To add {@link CustomTargetingKey#id IDs}, you must include
	// {@link Dimension#CUSTOM_DIMENSION} in {@link #dimensions}, and specify a non-empty list of
	// custom targeting key IDs. The order of cusotm dimension columns in the report correspond to the
	// place of {@link Dimension#CUSTOM_DIMENSION} in {@link #dimensions}. For example, if
	// {@link #dimensions} contains the following dimensions in the order:
	// {@link Dimension#ADVERTISER_NAME}, {@link Dimension#CUSTOM_DIMENSION} and
	// {@link Dimension#COUNTRY_NAME}, and {@link #customCriteriaCustomTargetingKeyIds} contains the
	// following IDs in the order: 1001 and 1002. The order of dimensions in the report will be:
	// Dimension.ADVERTISER_NAME, Dimension.TOP_LEVEL_DIMENSION_KEY[1001]_VALUE,
	// Dimension.TOP_LEVEL_DIMENSION_KEY[1002]_VALUE, Dimension.COUNTRY_NAME, Dimension.ADVERTISER_ID,
	// Dimension.TOP_LEVEL_DIMENSION_KEY[1001]_ID, Dimension.TOP_LEVEL_DIMENSION_KEY[1002]_ID,
	// Dimension.COUNTRY_CRITERIA_ID.
	//
	CustomDimensionKeyIds []int64 `xml:"customDimensionKeyIds,omitempty" json:"customDimensionKeyIds,omitempty"`

	//
	// The start date from which the reporting information is gathered. The
	// {@code ReportQuery#dateRangeType} field must be set to
	// {@link DateRangeType#CUSTOM_DATE} in order to use this.
	//
	StartDate soap.XSDDate `xml:"startDate,omitempty" json:"startDate,omitempty"`

	//
	// The end date upto which the reporting information is gathered. The
	// {@code ReportQuery#dateRangeType} field must be set to
	// {@link DateRangeType#CUSTOM_DATE} in order to use this.
	//
	EndDate soap.XSDDate `xml:"endDate,omitempty" json:"endDate,omitempty"`

	//
	// The period of time for which the reporting data is being generated. In
	// order to define custom time periods, set this to
	// {@link DateRangeType#CUSTOM_DATE}. If set to {@link DateRangeType#CUSTOM_DATE}, then
	// {@link ReportQuery#startDate} and {@link ReportQuery#endDate} will be used.
	//
	DateRangeType *DateRangeType `xml:"dateRangeType,omitempty" json:"dateRangeType,omitempty"`

	//
	// Specifies a filter to use for reporting on data. This filter will be used
	// in conjunction (joined with an AND statement) with the date range selected
	// through {@link #dateRangeType}, {@link #startDate}, and {@link #endDate}.
	//
	// The syntax currently allowed for {@link Statement#query} is<br>
	// <code> [WHERE <condition> {AND <condition> ...}]<code><br>
	// <p><condition></code><br>
	// &nbsp;&nbsp;&nbsp;&nbsp; <code>:= <property> = <value></code><br>
	// <code><condition></code><br>
	// &nbsp;&nbsp;&nbsp;&nbsp; <code>:= <property> = <bind variable></code><br>
	// <code><condition> := <property> IN <list></code><br>
	// <code><bind variable> := :<name></code><br>
	// </code> where property is the enumeration name of a {@link Dimension} that
	// can be filtered.
	// <p>
	// For example, the statement "WHERE LINE_ITEM_ID IN (34344, 23235)" can be used
	// to generate a report for a specific set of line items
	// <p>
	// Filtering on IDs is highly recommended over filtering on names, especially
	// for geographical entities. When filtering on names, matching is case
	// sensitive.
	//
	Statement *Statement `xml:"statement,omitempty" json:"statement,omitempty"`

	//
	// The currency for revenue metrics. Defaults to the network currency if left {@code null}. The
	// supported currency codes can be found in <a
	// href="https://support.google.com/adxseller/answer/6019533">this Help Center article.</a>
	//
	ReportCurrency string `xml:"reportCurrency,omitempty" json:"reportCurrency,omitempty"`

	TimeZoneType *TimeZoneType `xml:"timeZoneType,omitempty" json:"timeZoneType,omitempty"`
}

type RequiredCollectionError struct {
	*ApiError

	Reason *RequiredCollectionError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type RequiredError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *RequiredError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type SavedQuery struct {

	//
	// The ID of the saved query.
	//
	Id int64 `xml:"id,omitempty" json:"id,omitempty"`

	//
	// The name of the saved query.
	//
	Name string `xml:"name,omitempty" json:"name,omitempty"`

	//
	// The {@link ReportQuery} representing the selection criteria for the saved query. This will be
	// non-null if and only if {@link SavedQuery#isCompatibleWithApiVersion} is {@code true}.
	//
	ReportQuery *ReportQuery `xml:"reportQuery,omitempty" json:"reportQuery,omitempty"`

	//
	// Whether or not the saved query is compatible with the current API version. This will be {@code
	// true} if and only if {@link SavedQuery#reportQuery} is non-null. A saved query will be
	// incompatible with the API if it uses columns, dimensions, or other reporting features from the
	// UI that are not available in the {@link ReportQuery} entity.
	//
	IsCompatibleWithApiVersion bool `xml:"isCompatibleWithApiVersion,omitempty" json:"isCompatibleWithApiVersion,omitempty"`
}

type SavedQueryPage struct {

	//
	// The size of the total result set to which this page belongs.
	//
	TotalResultSetSize int32 `xml:"totalResultSetSize,omitempty" json:"totalResultSetSize,omitempty"`

	//
	// The absolute index in the total result set on which this page begins.
	//
	StartIndex int32 `xml:"startIndex,omitempty" json:"startIndex,omitempty"`

	//
	// The collection of saved queries contained within this page.
	//
	Results []*SavedQuery `xml:"results,omitempty" json:"results,omitempty"`
}

type ServerError struct {
	*ApiError

	Reason *ServerError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type SetValue struct {
	*_Value

	//
	// The values. They must all be the same type of {@code Value} and not contain duplicates.
	//
	Values []*_Value `xml:"values,omitempty" json:"values,omitempty"`
}

type SoapRequestHeader struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 RequestHeader"`

	//
	// The network code to use in the context of a request.
	//
	NetworkCode string `xml:"networkCode,omitempty" json:"networkCode,omitempty"`

	//
	// The name of client library application.
	//
	ApplicationName string `xml:"applicationName,omitempty" json:"applicationName,omitempty"`
}

type SoapResponseHeader struct {
	XMLName xml.Name `xml:"https://www.google.com/apis/ads/publisher/v202311 ResponseHeader"`

	RequestId string `xml:"requestId,omitempty" json:"requestId,omitempty"`

	ResponseTime int64 `xml:"responseTime,omitempty" json:"responseTime,omitempty"`
}

type Statement struct {

	//
	// Holds the query in PQL syntax. The syntax is:<br>
	// <code>[WHERE <condition> {[AND | OR] <condition> ...}]</code><br>
	// <code>[ORDER BY <property> [ASC | DESC]]</code><br>
	// <code>[LIMIT {[<offset>,] <count>} | {<count> OFFSET <offset>}]</code><br>
	// <p>
	// <code><condition></code><br>
	// &nbsp;&nbsp;&nbsp;&nbsp;
	// <code>:= <property> {< | <= | > | >= | = | != } <value></code><br>
	// <code><condition></code><br>
	// &nbsp;&nbsp;&nbsp;&nbsp;
	// <code>:= <property> {< | <= | > | >= | = | != } <bind variable></code><br>
	// <code><condition> := <property> IN <list></code><br>
	// <code><condition> := <property> IS NULL</code><br>
	// <code><condition> := <property> LIKE <wildcard%match></code><br>
	// <code><bind variable> := :<name></code><br>
	// </p>
	//
	Query string `xml:"query,omitempty" json:"query,omitempty"`

	//
	// Holds keys and values for bind variables and their values. The key is the
	// name of the bind variable. The value is the literal value of the variable.
	// <p>
	// In the example {@code "WHERE status = :bindStatus ORDER BY id LIMIT 30"},
	// the bind variable, represented by {@code :bindStatus} is named {@code
	// bindStatus}, which would also be the parameter map key. The bind variable's
	// value would be represented by a parameter map value of type
	// {@link TextValue}. The final result, for example, would be an entry of
	// {@code "bindStatus" => StringParam("ACTIVE")}.
	// </p>
	//
	Values []*String_ValueMapEntry `xml:"values,omitempty" json:"values,omitempty"`
}

type StatementError struct {
	*ApiError

	//
	// The error reason represented by an enum.
	//
	Reason *StatementError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type StringFormatError struct {
	*ApiError

	Reason *StringFormatError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type StringLengthError struct {
	*ApiError

	Reason *StringLengthError_Reason `xml:"reason,omitempty" json:"reason,omitempty"`
}

type String_ValueMapEntry struct {
	Key string `xml:"key,omitempty" json:"key,omitempty"`

	Value *_Value `xml:"value,omitempty" json:"value,omitempty"`
}

type TextValue struct {
	*_Value

	//
	// The string value.
	//
	Value string `xml:"value,omitempty" json:"value,omitempty"`
}

type _Value struct {
}

type ReportServiceInterface interface {

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Returns the URL at which the report file can be downloaded.

	   <p>The report will be generated as a gzip archive, containing the report file itself.
	*/
	GetReportDownloadURL(request *GetReportDownloadURL) (*GetReportDownloadURLResponse, error)

	GetReportDownloadURLContext(ctx context.Context, request *GetReportDownloadURL) (*GetReportDownloadURLResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Returns the URL at which the report file can be downloaded, and allows for customization of the
	   downloaded report.

	   <p>By default, the report will be generated as a gzip archive, containing the report file
	   itself. This can be changed by setting {@link ReportDownloadOptions#useGzipCompression} to
	   false.
	*/
	GetReportDownloadUrlWithOptions(request *GetReportDownloadUrlWithOptions) (*GetReportDownloadUrlWithOptionsResponse, error)

	GetReportDownloadUrlWithOptionsContext(ctx context.Context, request *GetReportDownloadUrlWithOptions) (*GetReportDownloadUrlWithOptionsResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Returns the {@link ReportJobStatus} of the report job with the specified ID.
	*/
	GetReportJobStatus(request *GetReportJobStatus) (*GetReportJobStatusResponse, error)

	GetReportJobStatusContext(ctx context.Context, request *GetReportJobStatus) (*GetReportJobStatusResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Retrieves a page of the saved queries either created by or shared with the current user. Each
	   {@link SavedQuery} in the page, if it is compatible with the current API version, will contain
	   a {@link ReportQuery} object which can be optionally modified and used to create a {@link
	   ReportJob}. This can then be passed to {@link ReportService#runReportJob}. The following fields
	   are supported for filtering:

	   <table>
	   <tr>
	   <th scope="col">PQL Property</th> <th scope="col">Object Property</th>
	   </tr>
	   <tr>
	   <td>{@code id}</td>
	   <td>{@link SavedQuery#id}</td>
	   </tr>
	   <tr>
	   <td>{@code name}</td>
	   <td>{@link SavedQuery#name}</td>
	   </tr>
	   </table>
	*/
	GetSavedQueriesByStatement(request *GetSavedQueriesByStatement) (*GetSavedQueriesByStatementResponse, error)

	GetSavedQueriesByStatementContext(ctx context.Context, request *GetSavedQueriesByStatement) (*GetSavedQueriesByStatementResponse, error)

	// Error can be either of the following types:
	//
	//   - ApiException
	/*
	   Initiates the execution of a {@link ReportQuery} on the server.

	   <p>The following fields are required:

	   <ul>
	   <li>{@link ReportJob#reportQuery}
	   </ul>
	*/
	RunReportJob(request *RunReportJob) (*RunReportJobResponse, error)

	RunReportJobContext(ctx context.Context, request *RunReportJob) (*RunReportJobResponse, error)
}

type reportServiceInterface struct {
	client *soap.Client
}

func NewReportServiceInterface(client *soap.Client) ReportServiceInterface {
	return &reportServiceInterface{
		client: client,
	}
}

func (service *reportServiceInterface) GetReportDownloadURLContext(ctx context.Context, request *GetReportDownloadURL) (*GetReportDownloadURLResponse, error) {
	response := new(GetReportDownloadURLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *reportServiceInterface) GetReportDownloadURL(request *GetReportDownloadURL) (*GetReportDownloadURLResponse, error) {
	return service.GetReportDownloadURLContext(
		context.Background(),
		request,
	)
}

func (service *reportServiceInterface) GetReportDownloadUrlWithOptionsContext(ctx context.Context, request *GetReportDownloadUrlWithOptions) (*GetReportDownloadUrlWithOptionsResponse, error) {
	response := new(GetReportDownloadUrlWithOptionsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *reportServiceInterface) GetReportDownloadUrlWithOptions(request *GetReportDownloadUrlWithOptions) (*GetReportDownloadUrlWithOptionsResponse, error) {
	return service.GetReportDownloadUrlWithOptionsContext(
		context.Background(),
		request,
	)
}

func (service *reportServiceInterface) GetReportJobStatusContext(ctx context.Context, request *GetReportJobStatus) (*GetReportJobStatusResponse, error) {
	response := new(GetReportJobStatusResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *reportServiceInterface) GetReportJobStatus(request *GetReportJobStatus) (*GetReportJobStatusResponse, error) {
	return service.GetReportJobStatusContext(
		context.Background(),
		request,
	)
}

func (service *reportServiceInterface) GetSavedQueriesByStatementContext(ctx context.Context, request *GetSavedQueriesByStatement) (*GetSavedQueriesByStatementResponse, error) {
	response := new(GetSavedQueriesByStatementResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *reportServiceInterface) GetSavedQueriesByStatement(request *GetSavedQueriesByStatement) (*GetSavedQueriesByStatementResponse, error) {
	return service.GetSavedQueriesByStatementContext(
		context.Background(),
		request,
	)
}

func (service *reportServiceInterface) RunReportJobContext(ctx context.Context, request *RunReportJob) (*RunReportJobResponse, error) {
	response := new(RunReportJobResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *reportServiceInterface) RunReportJob(request *RunReportJob) (*RunReportJobResponse, error) {
	return service.RunReportJobContext(
		context.Background(),
		request,
	)
}
